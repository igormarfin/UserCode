Something wrong with ini
Replace ValidationMCBTagIP3DFastPV.L25IPTagInfo cms.InputTag("hltBLifetimeL25TagInfosbbPhiL1FastJetFastPV") ==> cms.InputTag("hltBLifetimeL25TagInfosHbb","","HLTX") 
Replace ValidationMCBTagIP3DFastPV.L3IPTagInfo cms.InputTag("hltBLifetimeL3TagInfosbbPhiL1FastJetFastPV") ==> cms.InputTag("hltBLifetimeL3TagInfosHbb","","HLTX") 
hltBLifetimeL25TagInfosHbb
hltBLifetimeL3TagInfosHbb
hltBLifetimeL25BJetTagsHbb
hltBLifetimeL3BJetTagsHbb
HLT_DiCentralJet36_BTagIP3DLoose
CMSSW_4_4_2patch8
HLTX
['file:output.root']
hltCaloJetL1FastJetCorrected
cms.untracked.vstring('file:output.root')
import FWCore.ParameterSet.Config as cms

process = cms.Process("HLTHARVEST")

process.source = cms.Source("PoolSource",
    fileNames = cms.untracked.vstring('file:output.root')
)
process.JetMETMCProducer = cms.EDProducer("HLTTauMCProducer",
    GenParticles = cms.untracked.InputTag("source"),
    ptMinElectron = cms.untracked.double(5),
    EtaMax = cms.untracked.double(2.5),
    ptMinTau = cms.untracked.double(10),
    BosonID = cms.untracked.int32(23),
    ptMinMuon = cms.untracked.double(3)
)


process.TauRefProducer = cms.EDProducer("HLTTauRefProducer",
    PFTaus = cms.untracked.PSet(
        PFTauDiscriminators = cms.untracked.VInputTag(cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding"), cms.InputTag("hpsPFTauDiscriminationByLooseIsolation")),
        doPFTaus = cms.untracked.bool(True),
        ptMin = cms.untracked.double(15.0),
        PFTauProducer = cms.untracked.InputTag("hpsPFTauProducer")
    ),
    Towers = cms.untracked.PSet(
        etMin = cms.untracked.double(10.0),
        towerIsolation = cms.untracked.double(5.0),
        TowerCollection = cms.untracked.InputTag("towerMaker"),
        doTowers = cms.untracked.bool(True)
    ),
    Photons = cms.untracked.PSet(
        ECALIso = cms.untracked.double(3.0),
        PhotonCollection = cms.untracked.InputTag("photons"),
        etMin = cms.untracked.double(10.0),
        doPhotons = cms.untracked.bool(True)
    ),
    Electrons = cms.untracked.PSet(
        doID = cms.untracked.bool(False),
        ElectronCollection = cms.untracked.InputTag("gsfElectrons"),
        lipMinTrack = cms.untracked.double(0.2),
        InnerConeDR = cms.untracked.double(0.02),
        MaxIsoVar = cms.untracked.double(0.02),
        doTrackIso = cms.untracked.bool(True),
        TrackCollection = cms.untracked.InputTag("generalTracks"),
        ptMin = cms.untracked.double(10.0),
        ptMinTrack = cms.untracked.double(1.5),
        OuterConeDR = cms.untracked.double(0.6),
        doElectrons = cms.untracked.bool(True),
        IdCollection = cms.untracked.InputTag("elecIDext")
    ),
    Jets = cms.untracked.PSet(
        JetCollection = cms.untracked.InputTag("iterativeCone5CaloJets"),
        etMin = cms.untracked.double(10.0),
        doJets = cms.untracked.bool(True)
    ),
    Muons = cms.untracked.PSet(
        doMuons = cms.untracked.bool(True),
        MuonCollection = cms.untracked.InputTag("muons"),
        ptMin = cms.untracked.double(10.0)
    ),
    EtaMax = cms.untracked.double(2.5)
)


process.baseMuonAssociatorFS = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("MuonSimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","MuonSimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("MuonSimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("famosSimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('famosSimHitsTrackerHits'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","famosSimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("globalMuons"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(True),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("MuonSimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)


process.extractedGlobalMuons = cms.EDProducer("MuonTrackProducer",
    selectionTags = cms.vstring('AllGlobalMuons'),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    trackType = cms.string('globalTrack'),
    muonsTag = cms.InputTag("muons"),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments")
)


process.hltJetsbyRef = cms.EDProducer("JetPartonMatcher",
    jets = cms.InputTag("hltCaloJetL1FastJetCorrected","","HLT"),
    coneSizeToAssociate = cms.double(0.3),
    partons = cms.InputTag("hltPartons")
)


process.hltJetsbyValAlgo = cms.EDProducer("JetFlavourIdentifier",
    srcByReference = cms.InputTag("hltJetsbyRef"),
    physicsDefinition = cms.bool(False)
)


process.hltJetsbyValPhys = cms.EDProducer("JetFlavourIdentifier",
    srcByReference = cms.InputTag("hltJetsbyRef"),
    physicsDefinition = cms.bool(True)
)


process.hltPartons = cms.EDProducer("PartonSelector",
    src = cms.InputTag("genParticles","","HLT"),
    withLeptons = cms.bool(False)
)


process.randomEngineStateProducer = cms.EDProducer("RandomEngineStateProducer")


process.tpToGlbCosmicMuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("globalCosmicMuons"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(True),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)


process.tpToGlbCosmicTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("globalCosmicMuons")
)


process.tpToGlbMuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("extractedGlobalMuons"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(True),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)


process.tpToGlbMuonAssociationFS = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("MuonSimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","MuonSimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("MuonSimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("famosSimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('famosSimHitsTrackerHits'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","famosSimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("extractedGlobalMuons"),
    UsePixels = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    RPCsimhitsTag = cms.InputTag("MuonSimHits","MuonRPCHits"),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    UseTracker = cms.bool(True),
    UseMuon = cms.bool(True)
)


process.tpToGlbSETMuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("globalSETMuons"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(True),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)


process.tpToGlbSETTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("globalSETMuons")
)


process.tpToGlbTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("extractedGlobalMuons")
)


process.tpToGlbTrackAssociationFS = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("extractedGlobalMuons")
)


process.tpToL2MuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(True),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("hltDt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("hltL2Muons"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(False),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)


process.tpToL2MuonAssociationFS = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(True),
    CSCsimHitsTag = cms.InputTag("MuonSimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","MuonSimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("MuonSimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("famosSimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('famosSimHitsTrackerHits'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","famosSimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("hltL2Muons"),
    UsePixels = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    RPCsimhitsTag = cms.InputTag("MuonSimHits","MuonRPCHits"),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    UseTracker = cms.bool(False),
    UseMuon = cms.bool(True)
)


process.tpToL2TrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    ignoremissingtrackcollection = cms.untracked.bool(True),
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("hltL2Muons")
)


process.tpToL2TrackAssociationFS = cms.EDProducer("TrackAssociatorEDProducer",
    ignoremissingtrackcollection = cms.untracked.bool(True),
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    label_tr = cms.InputTag("hltL2Muons")
)


process.tpToL2UpdMuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(True),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("hltDt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("hltL2Muons","UpdatedAtVtx"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(False),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)


process.tpToL2UpdMuonAssociationFS = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(True),
    CSCsimHitsTag = cms.InputTag("MuonSimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","MuonSimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("MuonSimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("famosSimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('famosSimHitsTrackerHits'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","famosSimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("hltL2Muons","UpdatedAtVtx"),
    UsePixels = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    RPCsimhitsTag = cms.InputTag("MuonSimHits","MuonRPCHits"),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    UseTracker = cms.bool(False),
    UseMuon = cms.bool(True)
)


process.tpToL2UpdTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    ignoremissingtrackcollection = cms.untracked.bool(True),
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("hltL2Muons","UpdatedAtVtx")
)


process.tpToL2UpdTrackAssociationFS = cms.EDProducer("TrackAssociatorEDProducer",
    ignoremissingtrackcollection = cms.untracked.bool(True),
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    label_tr = cms.InputTag("hltL2Muons","UpdatedAtVtx")
)


process.tpToL3L2TrackTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    ignoremissingtrackcollection = cms.untracked.bool(True),
    associator = cms.string('OnlineTrackAssociatorByHits'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("hltL3Muons","L2Seeded")
)


process.tpToL3L2TrackTrackAssociationFS = cms.EDProducer("TrackAssociatorEDProducer",
    ignoremissingtrackcollection = cms.untracked.bool(True),
    associator = cms.string('OnlineTrackAssociatorByHits'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("hltL3Muons","L2Seeded")
)


process.tpToL3MuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(False),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(True),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(False),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("hltDt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("hltL3Muons"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(True),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)


process.tpToL3MuonAssociationFS = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(False),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(True),
    CSCsimHitsTag = cms.InputTag("MuonSimHits","MuonCSCHits"),
    UseGrouped = cms.bool(False),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","MuonSimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("MuonSimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("famosSimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('famosSimHitsTrackerHits'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","famosSimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("hltL3Muons"),
    UsePixels = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    RPCsimhitsTag = cms.InputTag("MuonSimHits","MuonRPCHits"),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    UseTracker = cms.bool(True),
    UseMuon = cms.bool(True)
)


process.tpToL3TkMuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(False),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(True),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(False),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("hltDt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("hltL3TkTracksFromL2"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(True),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(False)
)


process.tpToL3TkMuonAssociationFS = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(False),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(True),
    CSCsimHitsTag = cms.InputTag("MuonSimHits","MuonCSCHits"),
    UseGrouped = cms.bool(False),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","MuonSimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("MuonSimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("famosSimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('famosSimHitsTrackerHits'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","famosSimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("hltL3TkTracksFromL2"),
    UsePixels = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    RPCsimhitsTag = cms.InputTag("MuonSimHits","MuonRPCHits"),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    UseTracker = cms.bool(True),
    UseMuon = cms.bool(False)
)


process.tpToL3TkTrackTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    ignoremissingtrackcollection = cms.untracked.bool(True),
    associator = cms.string('OnlineTrackAssociatorByHits'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("hltL3TkTracksFromL2")
)


process.tpToL3TkTrackTrackAssociationFS = cms.EDProducer("TrackAssociatorEDProducer",
    ignoremissingtrackcollection = cms.untracked.bool(True),
    associator = cms.string('OnlineTrackAssociatorByHits'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("hltL3TkTracksFromL2")
)


process.tpToL3TrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    ignoremissingtrackcollection = cms.untracked.bool(True),
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("hltL3Muons")
)


process.tpToL3TrackAssociationFS = cms.EDProducer("TrackAssociatorEDProducer",
    ignoremissingtrackcollection = cms.untracked.bool(True),
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("hltL3Muons")
)


process.tpToStaCosmicMuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("cosmicMuons"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(False),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)


process.tpToStaCosmicTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("cosmicMuons")
)


process.tpToStaMuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("standAloneMuons"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(False),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)


process.tpToStaMuonAssociationFS = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("MuonSimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","MuonSimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("MuonSimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("famosSimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('famosSimHitsTrackerHits'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","famosSimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("standAloneMuons"),
    UsePixels = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    RPCsimhitsTag = cms.InputTag("MuonSimHits","MuonRPCHits"),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    UseTracker = cms.bool(False),
    UseMuon = cms.bool(True)
)


process.tpToStaSETMuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("standAloneSETMuons"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(False),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)


process.tpToStaSETTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("standAloneSETMuons")
)


process.tpToStaSETUpdMuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("standAloneSETMuons","UpdatedAtVtx"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(False),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)


process.tpToStaSETUpdTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("standAloneSETMuons","UpdatedAtVtx")
)


process.tpToStaTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("standAloneMuons")
)


process.tpToStaTrackAssociationFS = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    label_tr = cms.InputTag("standAloneMuons")
)


process.tpToStaUpdMuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("standAloneMuons","UpdatedAtVtx"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(False),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)


process.tpToStaUpdMuonAssociationFS = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("MuonSimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","MuonSimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("MuonSimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("famosSimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('famosSimHitsTrackerHits'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","famosSimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("standAloneMuons","UpdatedAtVtx"),
    UsePixels = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    RPCsimhitsTag = cms.InputTag("MuonSimHits","MuonRPCHits"),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    UseTracker = cms.bool(False),
    UseMuon = cms.bool(True)
)


process.tpToStaUpdTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("standAloneMuons","UpdatedAtVtx")
)


process.tpToStaUpdTrackAssociationFS = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    label_tr = cms.InputTag("standAloneMuons","UpdatedAtVtx")
)


process.tpToTevDytMuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("tevMuons","dyt"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(True),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)


process.tpToTevDytMuonAssociationFS = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("MuonSimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","MuonSimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("MuonSimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("famosSimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('famosSimHitsTrackerHits'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","famosSimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("tevMuons","dyt"),
    UsePixels = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    RPCsimhitsTag = cms.InputTag("MuonSimHits","MuonRPCHits"),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    UseTracker = cms.bool(True),
    UseMuon = cms.bool(True)
)


process.tpToTevDytTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("tevMuons","dyt")
)


process.tpToTevDytTrackAssociationFS = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("tevMuons","dyt")
)


process.tpToTevFirstMuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("tevMuons","firstHit"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(True),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)


process.tpToTevFirstMuonAssociationFS = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("MuonSimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","MuonSimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("MuonSimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("famosSimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('famosSimHitsTrackerHits'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","famosSimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("tevMuons","firstHit"),
    UsePixels = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    RPCsimhitsTag = cms.InputTag("MuonSimHits","MuonRPCHits"),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    UseTracker = cms.bool(True),
    UseMuon = cms.bool(True)
)


process.tpToTevFirstTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("tevMuons","firstHit")
)


process.tpToTevFirstTrackAssociationFS = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("tevMuons","firstHit")
)


process.tpToTevPickyMuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("tevMuons","picky"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(True),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)


process.tpToTevPickyMuonAssociationFS = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("MuonSimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","MuonSimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("MuonSimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("famosSimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('famosSimHitsTrackerHits'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","famosSimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("tevMuons","picky"),
    UsePixels = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    RPCsimhitsTag = cms.InputTag("MuonSimHits","MuonRPCHits"),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    UseTracker = cms.bool(True),
    UseMuon = cms.bool(True)
)


process.tpToTevPickyTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("tevMuons","picky")
)


process.tpToTevPickyTrackAssociationFS = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("tevMuons","picky")
)


process.tpToTkCosmicMuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("ctfWithMaterialTracksP5LHCNavigation"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(True),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(False)
)


process.tpToTkCosmicTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByHits'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("ctfWithMaterialTracksP5LHCNavigation")
)


process.tpToTkMuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("generalTracks"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(True),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(False)
)


process.tpToTkMuonAssociationFS = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("MuonSimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","MuonSimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("MuonSimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("famosSimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('famosSimHitsTrackerHits'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","famosSimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("generalTracks"),
    UsePixels = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    RPCsimhitsTag = cms.InputTag("MuonSimHits","MuonRPCHits"),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    UseTracker = cms.bool(True),
    UseMuon = cms.bool(False)
)


process.tpToTkmuTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByHits'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("generalTracks")
)


process.tpToTkmuTrackAssociationFS = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByHits'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("generalTracks")
)


process.fiducial = cms.EDFilter("EtaPtMinCandViewSelector",
    src = cms.InputTag("genp"),
    etaMin = cms.double(-2.5),
    etaMax = cms.double(2.5),
    ptMin = cms.double(2.0)
)


process.fiducialDiGamma = cms.EDFilter("EtaPtMinCandViewSelector",
    src = cms.InputTag("genpartDiGamma"),
    etaMin = cms.double(-2.5),
    etaMax = cms.double(2.5),
    ptMin = cms.double(2.0)
)


process.fiducialGammaJet = cms.EDFilter("EtaPtMinCandViewSelector",
    src = cms.InputTag("genpartGammaJet"),
    etaMin = cms.double(-2.5),
    etaMax = cms.double(2.5),
    ptMin = cms.double(2.0)
)


process.fiducialWenu = cms.EDFilter("EtaPtMinCandViewSelector",
    src = cms.InputTag("genpartWenu"),
    etaMin = cms.double(-2.5),
    etaMax = cms.double(2.5),
    ptMin = cms.double(2.0)
)


process.fiducialZee = cms.EDFilter("EtaPtMinCandViewSelector",
    src = cms.InputTag("genpartZee"),
    etaMin = cms.double(-2.5),
    etaMax = cms.double(2.5),
    ptMin = cms.double(2.0)
)


process.genp = cms.EDFilter("PdgIdAndStatusCandViewSelector",
    status = cms.vint32(3),
    pdgId = cms.vint32(11),
    src = cms.InputTag("genParticles")
)


process.genpartDiGamma = cms.EDFilter("PdgIdAndStatusCandViewSelector",
    status = cms.vint32(3),
    pdgId = cms.vint32(22),
    src = cms.InputTag("genParticles")
)


process.genpartGammaJet = cms.EDFilter("PdgIdAndStatusCandViewSelector",
    status = cms.vint32(3),
    pdgId = cms.vint32(22),
    src = cms.InputTag("genParticles")
)


process.genpartWenu = cms.EDFilter("PdgIdAndStatusCandViewSelector",
    status = cms.vint32(3),
    pdgId = cms.vint32(11),
    src = cms.InputTag("genParticles")
)


process.genpartZee = cms.EDFilter("PdgIdAndStatusCandViewSelector",
    status = cms.vint32(3),
    pdgId = cms.vint32(11),
    src = cms.InputTag("genParticles")
)


process.require_hltJets = cms.EDFilter("RequireModule",
    requirement = cms.InputTag("hltCaloJetL1FastJet2Corrected","","HLT")
)


process.EDMtoMEConverter = cms.EDAnalyzer("EDMtoMEConverter",
    convertOnEndLumi = cms.untracked.bool(True),
    Frequency = cms.untracked.int32(50),
    Verbosity = cms.untracked.int32(0),
    Name = cms.untracked.string('EDMtoMEConverter'),
    convertOnEndRun = cms.untracked.bool(True)
)


process.EgammaPostVal = cms.EDAnalyzer("EmDQMPostProcessor",
    noPhiPlots = cms.untracked.bool(True),
    subDir = cms.untracked.string('HLT/HLTEgammaValidation'),
    dataSet = cms.untracked.string('unknown')
)


process.HLTHiggsBits_2tauH2tau = cms.EDAnalyzer("HLTHiggsBits",
    MCTruth = cms.InputTag("genParticles"),
    OutputMEsInRootFile = cms.bool(False),
    hltBitNamesPh = cms.vstring(''),
    muon = cms.string('muons'),
    Photon = cms.string('correctedPhotons'),
    hltBitNamesMu = cms.vstring('HLT_Mu3', 
        'HLT_Mu9', 
        'HLT_Mu15', 
        'HLT_IsoMu3'),
    OutputFileName = cms.string(''),
    hltBitNames = cms.vstring('HLT_Mu3', 
        'HLT_Mu9', 
        'HLT_Mu15', 
        'HLT_Ele10_LW_L1R', 
        'HLT_Ele15_SW_L1R', 
        'HLT_Ele15_SW_LooseTrackIso_L1R'),
    hltBitNamesTau = cms.vstring(''),
    Electron = cms.string('gsfElectrons'),
    DQMFolder = cms.untracked.string('HLT/Higgs/H2tau'),
    histName = cms.string(''),
    hltBitNamesEG = cms.vstring('HLT_Ele10_LW_L1R', 
        'HLT_Ele10_LW_EleId_L1R', 
        'HLT_Ele15_SW_L1R', 
        'HLT_Ele15_SW_LooseTrackIso_L1R'),
    Nchannel = cms.int32(4),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    RunParameters = cms.PSet(
        Debug = cms.bool(True),
        EtaMin = cms.double(-2.5),
        EtaMax = cms.double(2.5),
        Monte = cms.bool(True)
    )
)


process.HLTHiggsBits_WWHWW = cms.EDAnalyzer("HLTHiggsBits",
    MCTruth = cms.InputTag("genParticles"),
    OutputMEsInRootFile = cms.bool(False),
    hltBitNamesPh = cms.vstring(''),
    muon = cms.string('muons'),
    Photon = cms.string('correctedPhotons'),
    hltBitNamesMu = cms.vstring('HLT_Mu3', 
        'HLT_Mu9', 
        'HLT_Mu15', 
        'HLT_DoubleMu3'),
    OutputFileName = cms.string(''),
    hltBitNames = cms.vstring('HLT_Mu3', 
        'HLT_Mu9', 
        'HLT_Mu15', 
        'HLT_Ele10_LW_L1R', 
        'HLT_Ele10_LW_EleId_L1R', 
        'HLT_Ele15_SW_L1R', 
        'HLT_Ele15_SW_LooseTrackIso_L1R'),
    hltBitNamesTau = cms.vstring(''),
    Electron = cms.string('gsfElectrons'),
    DQMFolder = cms.untracked.string('HLT/Higgs/HWW'),
    histName = cms.string(''),
    hltBitNamesEG = cms.vstring('HLT_Ele10_LW_L1R', 
        'HLT_Ele10_LW_EleId_L1R', 
        'HLT_Ele15_SW_L1R', 
        'HLT_Ele15_SW_LooseTrackIso_L1R', 
        'HLT_DoubleEle5_SW_L1R'),
    Nchannel = cms.int32(2),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    RunParameters = cms.PSet(
        Debug = cms.bool(True),
        EtaMin = cms.double(-2.5),
        EtaMax = cms.double(2.5),
        Monte = cms.bool(True)
    )
)


process.HLTHiggsBits_ZZHZZ = cms.EDAnalyzer("HLTHiggsBits",
    MCTruth = cms.InputTag("genParticles"),
    OutputMEsInRootFile = cms.bool(False),
    hltBitNamesPh = cms.vstring(''),
    muon = cms.string('muons'),
    Photon = cms.string('correctedPhotons'),
    hltBitNamesMu = cms.vstring('HLT_Mu3', 
        'HLT_Mu9', 
        'HLT_DoubleMu3'),
    Electron = cms.string('gsfElectrons'),
    OutputFileName = cms.string(''),
    hltBitNames = cms.vstring('HLT_Mu3', 
        'HLT_Mu9', 
        'HLT_DoubleMu3', 
        'HLT_Ele10_LW_L1R', 
        'HLT_Ele10_LW_EleId_L1R', 
        'HLT_Ele15_SW_LooseTrackIso_L1R', 
        'HLT_Ele15_SW_L1R', 
        'HLT_DoubleEle5_SW_L1R'),
    hltBitNamesTau = cms.vstring(''),
    genmet = cms.string('genMet'),
    DQMFolder = cms.untracked.string('HLT/Higgs/HZZ'),
    histName = cms.string(''),
    hltBitNamesEG = cms.vstring('HLT_Ele10_LW_L1R', 
        'HLT_Ele10_LW_EleId_L1R', 
        'HLT_Ele15_SW_L1R', 
        'HLT_Ele15_SW_LooseTrackIso_L1R', 
        'HLT_DoubleEle5_SW_L1R'),
    Nchannel = cms.int32(1),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    RunParameters = cms.PSet(
        Debug = cms.bool(True),
        EtaMin = cms.double(-2.5),
        EtaMax = cms.double(2.5),
        Monte = cms.bool(True)
    )
)


process.HLTHiggsBits_ggHgg = cms.EDAnalyzer("HLTHiggsBits",
    MCTruth = cms.InputTag("genParticles"),
    OutputMEsInRootFile = cms.bool(False),
    hltBitNamesPh = cms.vstring('HLT_Photon15_L1R', 
        'HLT_Photon15_TrackIso_L1R', 
        'HLT_DoublePhoton10_L1R'),
    muon = cms.string('muons'),
    Photon = cms.string('correctedPhotons'),
    hltBitNamesMu = cms.vstring(''),
    OutputFileName = cms.string(''),
    hltBitNames = cms.vstring(''),
    hltBitNamesTau = cms.vstring(''),
    Electron = cms.string('gsfElectrons'),
    DQMFolder = cms.untracked.string('HLT/Higgs/Hgg'),
    histName = cms.string(''),
    hltBitNamesEG = cms.vstring(''),
    Nchannel = cms.int32(3),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    RunParameters = cms.PSet(
        Debug = cms.bool(True),
        EtaMin = cms.double(-2.5),
        EtaMax = cms.double(2.5),
        Monte = cms.bool(True)
    )
)


process.HLTHiggsBits_taunuHtaunu = cms.EDAnalyzer("HLTHiggsBits",
    MCTruth = cms.InputTag("genParticles"),
    OutputMEsInRootFile = cms.bool(False),
    hltBitNamesPh = cms.vstring(''),
    muon = cms.string('muons'),
    Photon = cms.string('correctedPhotons'),
    hltBitNamesMu = cms.vstring(''),
    OutputFileName = cms.string(''),
    hltBitNames = cms.vstring(''),
    hltBitNamesTau = cms.vstring('HLT_SingleLooseIsoTau20'),
    Electron = cms.string('gsfElectrons'),
    DQMFolder = cms.untracked.string('HLT/Higgs/Htaunu'),
    histName = cms.string(''),
    hltBitNamesEG = cms.vstring(''),
    Nchannel = cms.int32(5),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    RunParameters = cms.PSet(
        Debug = cms.bool(True),
        EtaMin = cms.double(-2.5),
        EtaMax = cms.double(2.5),
        Monte = cms.bool(True)
    )
)


process.HLTHiggsPostProcessor = cms.EDAnalyzer("DQMGenericClient",
    commands = cms.vstring(''),
    verbose = cms.untracked.uint32(0),
    subDirs = cms.untracked.vstring('HLT/Higgs/HWW'),
    outputFileName = cms.untracked.string(''),
    efficiency = cms.vstring(),
    resolution = cms.vstring('')
)


process.HLTSusyExoVal = cms.EDAnalyzer("TriggerValidator",
    TurnOnParams = cms.PSet(
        hlt1MuonIsoList = cms.vstring('hltSingleMuIsoLevel1Seed', 
            'hltSingleMuIsoL1Filtered', 
            'hltSingleMuIsoL2PreFiltered', 
            'hltSingleMuIsoL2IsoFiltered', 
            'hltSingleMuIsoL3PreFiltered', 
            'hltSingleMuIsoL3IsoFiltered'),
        hltMuonTracks = cms.string('hltL3MuonCandidates'),
        hlt1MuonNonIsoList = cms.vstring('hltSingleMuNoIsoLevel1Seed', 
            'hltSingleMuNoIsoL1Filtered', 
            'hltSingleMuNoIsoL2PreFiltered', 
            'hltSingleMuNoIsoL3PreFiltered'),
        genMother = cms.string('b'),
        recoMuons = cms.string('muons'),
        mcParticles = cms.string('genParticles')
    ),
    mc_flag = cms.untracked.bool(True),
    triggerTag = cms.InputTag("hltTriggerSummaryAOD"),
    mc_parametersets = cms.VPSet(cms.PSet(
        mc_nMuonRule = cms.string('strictEqual'),
        mc_ptElecMin = cms.double(5.0),
        mc_ptTauMin = cms.double(0.0),
        mc_ptJetForHtMin = cms.double(0.0),
        mc_nTau = cms.int32(0),
        mc_htMin = cms.double(0.0),
        mc_nElecRule = cms.string('strictEqual'),
        mc_nElec = cms.int32(0),
        mc_nJet = cms.int32(2),
        mc_metMin = cms.double(50.0),
        mc_nPhot = cms.int32(0),
        genMet = cms.string('genMetTrue'),
        genJets = cms.string('iterativeCone5GenJets'),
        mcparticles = cms.string('genParticles'),
        mc_ptPhotMin = cms.double(0.0),
        mc_ptJetMin = cms.double(25.0),
        mc_ptMuonMin = cms.double(5.0),
        mc_nMuon = cms.int32(0),
        name = cms.string('RA1')
    ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(0),
            mc_nJet = cms.int32(3),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(25.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(0),
            name = cms.string('RA2')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('greaterEqual'),
            mc_ptElecMin = cms.double(0.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('greaterEqual'),
            mc_nElec = cms.int32(0),
            mc_nJet = cms.int32(0),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(2),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(15.0),
            mc_ptJetMin = cms.double(0.0),
            mc_ptMuonMin = cms.double(0.0),
            mc_nMuon = cms.int32(0),
            name = cms.string('RA3')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(1),
            mc_nJet = cms.int32(2),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(25.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(0),
            name = cms.string('RA4_e')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(0),
            mc_nJet = cms.int32(2),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(25.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(1),
            name = cms.string('RA4_m')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(1),
            mc_nJet = cms.int32(2),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(25.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(1),
            name = cms.string('RA5RA6_1e1m')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(2),
            mc_nJet = cms.int32(2),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(25.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(0),
            name = cms.string('RA5RA6_2e')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(0),
            mc_nJet = cms.int32(2),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(25.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(2),
            name = cms.string('RA5RA6_2m')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(1),
            mc_nJet = cms.int32(0),
            mc_metMin = cms.double(0.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(0.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(2),
            name = cms.string('RA7_1e2m')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(2),
            mc_nJet = cms.int32(0),
            mc_metMin = cms.double(0.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(0.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(1),
            name = cms.string('RA7_2e1m')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(3),
            mc_nJet = cms.int32(0),
            mc_metMin = cms.double(0.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(0.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(0),
            name = cms.string('RA7_3e')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(0),
            mc_nJet = cms.int32(0),
            mc_metMin = cms.double(0.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(0.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(3),
            name = cms.string('RA7_3m')
        )),
    PlotMakerRecoInput = cms.PSet(
        def_electronPtMin = cms.double(10.0),
        def_muonPtMin = cms.double(7.0),
        calomet = cms.string('met'),
        photons = cms.string(''),
        electrons = cms.string('gsfElectrons'),
        jets = cms.string('iterativeCone5CaloJets'),
        muons = cms.string('muons'),
        def_jetPtMin = cms.double(30.0),
        def_photonPtMin = cms.double(30.0),
        photonProducer = cms.string('photons'),
        BinFactor = cms.int32(1)
    ),
    statFileName = cms.untracked.string('MonElements_LM1_IDEAL_30x_v1_300pre7.stat'),
    hltConfigName = cms.string('HLT'),
    PlotMakerL1Input = cms.PSet(
        l1extramc = cms.string('hltL1extraParticles')
    ),
    muonTag = cms.InputTag("muons"),
    l1_flag = cms.untracked.bool(False),
    triggerName = cms.string('@'),
    reco_parametersets = cms.VPSet(cms.PSet(
        reco_metMin = cms.double(100.0),
        reco_ptMuonMin = cms.double(10.0),
        reco_ptJet1Min = cms.double(80.0),
        photons = cms.string(''),
        reco_ptJet2Min = cms.double(30.0),
        reco_ptPhotMin = cms.double(0.0),
        electrons = cms.string('gsfElectrons'),
        calomet = cms.string('met'),
        muons = cms.string('muons'),
        reco_ptElecMin = cms.double(10.0),
        jets = cms.string('iterativeCone5CaloJets'),
        photonProducer = cms.string('photons'),
        name = cms.string('Reco1')
    )),
    histoFileName = cms.untracked.string('MonElements_LM1_IDEAL_30x_v1_300pre7.root'),
    L1Label = cms.InputTag("hltL1GtObjectMap"),
    dirname = cms.untracked.string('HLT/SusyExo'),
    HltLabel = cms.InputTag("TriggerResults","","HLT")
)


process.HLTSusyExoValFastSim = cms.EDAnalyzer("TriggerValidator",
    TurnOnParams = cms.PSet(
        hlt1MuonIsoList = cms.vstring('hltSingleMuIsoLevel1Seed', 
            'hltSingleMuIsoL1Filtered', 
            'hltSingleMuIsoL2PreFiltered', 
            'hltSingleMuIsoL2IsoFiltered', 
            'hltSingleMuIsoL3PreFiltered', 
            'hltSingleMuIsoL3IsoFiltered'),
        hltMuonTracks = cms.string('hltL3MuonCandidates'),
        hlt1MuonNonIsoList = cms.vstring('hltSingleMuNoIsoLevel1Seed', 
            'hltSingleMuNoIsoL1Filtered', 
            'hltSingleMuNoIsoL2PreFiltered', 
            'hltSingleMuNoIsoL3PreFiltered'),
        genMother = cms.string('b'),
        recoMuons = cms.string('muons'),
        mcParticles = cms.string('genParticles')
    ),
    mc_flag = cms.untracked.bool(True),
    triggerTag = cms.InputTag("hltTriggerSummaryAOD"),
    mc_parametersets = cms.VPSet(cms.PSet(
        mc_nMuonRule = cms.string('strictEqual'),
        mc_ptElecMin = cms.double(5.0),
        mc_ptTauMin = cms.double(0.0),
        mc_ptJetForHtMin = cms.double(0.0),
        mc_nTau = cms.int32(0),
        mc_htMin = cms.double(0.0),
        mc_nElecRule = cms.string('strictEqual'),
        mc_nElec = cms.int32(0),
        mc_nJet = cms.int32(2),
        mc_metMin = cms.double(50.0),
        mc_nPhot = cms.int32(0),
        genMet = cms.string('genMetTrue'),
        genJets = cms.string('iterativeCone5GenJets'),
        mcparticles = cms.string('genParticles'),
        mc_ptPhotMin = cms.double(0.0),
        mc_ptJetMin = cms.double(25.0),
        mc_ptMuonMin = cms.double(5.0),
        mc_nMuon = cms.int32(0),
        name = cms.string('RA1')
    ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(0),
            mc_nJet = cms.int32(3),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(25.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(0),
            name = cms.string('RA2')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('greaterEqual'),
            mc_ptElecMin = cms.double(0.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('greaterEqual'),
            mc_nElec = cms.int32(0),
            mc_nJet = cms.int32(0),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(2),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(15.0),
            mc_ptJetMin = cms.double(0.0),
            mc_ptMuonMin = cms.double(0.0),
            mc_nMuon = cms.int32(0),
            name = cms.string('RA3')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(1),
            mc_nJet = cms.int32(2),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(25.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(0),
            name = cms.string('RA4_e')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(0),
            mc_nJet = cms.int32(2),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(25.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(1),
            name = cms.string('RA4_m')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(1),
            mc_nJet = cms.int32(2),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(25.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(1),
            name = cms.string('RA5RA6_1e1m')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(2),
            mc_nJet = cms.int32(2),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(25.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(0),
            name = cms.string('RA5RA6_2e')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(0),
            mc_nJet = cms.int32(2),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(25.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(2),
            name = cms.string('RA5RA6_2m')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(1),
            mc_nJet = cms.int32(0),
            mc_metMin = cms.double(0.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(0.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(2),
            name = cms.string('RA7_1e2m')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(2),
            mc_nJet = cms.int32(0),
            mc_metMin = cms.double(0.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(0.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(1),
            name = cms.string('RA7_2e1m')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(3),
            mc_nJet = cms.int32(0),
            mc_metMin = cms.double(0.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(0.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(0),
            name = cms.string('RA7_3e')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(0),
            mc_nJet = cms.int32(0),
            mc_metMin = cms.double(0.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(0.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(3),
            name = cms.string('RA7_3m')
        )),
    PlotMakerRecoInput = cms.PSet(
        def_electronPtMin = cms.double(10.0),
        def_muonPtMin = cms.double(7.0),
        calomet = cms.string('met'),
        photons = cms.string(''),
        electrons = cms.string('gsfElectrons'),
        jets = cms.string('iterativeCone5CaloJets'),
        muons = cms.string('muons'),
        def_jetPtMin = cms.double(30.0),
        def_photonPtMin = cms.double(30.0),
        photonProducer = cms.string('photons'),
        BinFactor = cms.int32(1)
    ),
    statFileName = cms.untracked.string('MonElements_LM1_IDEAL_30x_v1_300pre7.stat'),
    hltConfigName = cms.string('HLT'),
    PlotMakerL1Input = cms.PSet(
        l1extramc = cms.string('hltL1extraParticles')
    ),
    muonTag = cms.InputTag("muons"),
    l1_flag = cms.untracked.bool(False),
    triggerName = cms.string('@'),
    reco_parametersets = cms.VPSet(cms.PSet(
        reco_metMin = cms.double(100.0),
        reco_ptMuonMin = cms.double(10.0),
        reco_ptJet1Min = cms.double(80.0),
        photons = cms.string(''),
        reco_ptJet2Min = cms.double(30.0),
        reco_ptPhotMin = cms.double(0.0),
        electrons = cms.string('gsfElectrons'),
        calomet = cms.string('met'),
        muons = cms.string('muons'),
        reco_ptElecMin = cms.double(10.0),
        jets = cms.string('iterativeCone5CaloJets'),
        photonProducer = cms.string('photons'),
        name = cms.string('Reco1')
    )),
    histoFileName = cms.untracked.string('MonElements_LM1_IDEAL_30x_v1_300pre7.root'),
    L1Label = cms.InputTag("gtDigis"),
    dirname = cms.untracked.string('HLT/SusyExo'),
    HltLabel = cms.InputTag("TriggerResults","","HLT")
)


process.HLTTauPostAnalysis = cms.EDAnalyzer("HLTTauPostProcessor",
    Harvester = cms.PSet(
        L1Dirs = cms.vstring('HLT/TauOffline/Inclusive/L1', 
            'HLT/TauOffline/PFTaus/L1'),
        trackDirs = cms.vstring(),
        caloDirs = cms.vstring(),
        pathSummaryDirs = cms.vstring('HLT/TauOffline/PFTaus/Summary'),
        pathDirs = cms.vstring('HLT/TauOffline/PFTaus/DoubleTau', 
            'HLT/TauOffline/PFTaus/SingleTau', 
            'HLT/TauOffline/PFTaus/EleTau', 
            'HLT/TauOffline/PFTaus/MuLooseTau', 
            'HLT/TauOffline/PFTaus/MuMediumTau', 
            'HLT/TauOffline/PFTaus/MuTightTau')
    )
)


process.HLTTauValPostAnalysis = cms.EDAnalyzer("HLTTauPostProcessor",
    Harvester = cms.PSet(
        L1Dirs = cms.vstring('HLT/TauRelVal/MC_5E32/L1', 
            'HLT/TauRelVal/PF_5E32/L1', 
            'HLT/TauRelVal/MC_1E33/L1', 
            'HLT/TauRelVal/PF_1E33/L1', 
            'HLT/TauRelVal/MC_3E33/L1', 
            'HLT/TauRelVal/PF_3E33/L1'),
        trackDirs = cms.vstring(),
        caloDirs = cms.vstring(),
        pathSummaryDirs = cms.vstring('HLT/TauRelVal/MC_5E32/Summary', 
            'HLT/TauRelVal/PF_5E32/Summary', 
            'HLT/TauRelVal/MC_1E33/Summary', 
            'HLT/TauRelVal/PF_1E33/Summary', 
            'HLT/TauRelVal/MC_3E33/Summary', 
            'HLT/TauRelVal/PF_3E33/Summary'),
        pathDirs = cms.vstring('HLT/TauRelVal/MC_5E32/DoubleTau', 
            'HLT/TauRelVal/MC_5E32/SingleTau', 
            'HLT/TauRelVal/MC_5E32/EleTau', 
            'HLT/TauRelVal/MC_5E32/MuTau', 
            'HLT/TauRelVal/PF_5E32/DoubleTau', 
            'HLT/TauRelVal/PF_5E32/SingleTau', 
            'HLT/TauRelVal/PF_5E32/EleTau', 
            'HLT/TauRelVal/PF_5E32/MuTau', 
            'HLT/TauRelVal/MC_1E33/DoubleTau', 
            'HLT/TauRelVal/MC_1E33/SingleTau', 
            'HLT/TauRelVal/MC_1E33/EleTau', 
            'HLT/TauRelVal/MC_1E33/MuLooseTau', 
            'HLT/TauRelVal/MC_1E33/MuTightTau', 
            'HLT/TauRelVal/PF_1E33/DoubleTau', 
            'HLT/TauRelVal/PF_1E33/SingleTau', 
            'HLT/TauRelVal/PF_1E33/EleTau', 
            'HLT/TauRelVal/PF_1E33/MuLooseTau', 
            'HLT/TauRelVal/PF_1E33/MuTightTau', 
            'HLT/TauRelVal/MC_3E33/DoubleTau', 
            'HLT/TauRelVal/MC_3E33/SingleTau', 
            'HLT/TauRelVal/MC_3E33/EleTau', 
            'HLT/TauRelVal/MC_3E33/MuLooseTau', 
            'HLT/TauRelVal/MC_3E33/MuMediumTau', 
            'HLT/TauRelVal/MC_3E33/MuTightTau', 
            'HLT/TauRelVal/PF_3E33/DoubleTau', 
            'HLT/TauRelVal/PF_3E33/SingleTau', 
            'HLT/TauRelVal/PF_3E33/EleTau', 
            'HLT/TauRelVal/PF_3E33/MuLooseTau', 
            'HLT/TauRelVal/PF_3E33/MuMediumTau', 
            'HLT/TauRelVal/PF_3E33/MuTightTau')
    )
)


process.HLTTopPostProcessor = cms.EDAnalyzer("DQMGenericClient",
    commands = cms.vstring(''),
    verbose = cms.untracked.uint32(0),
    subDirs = cms.untracked.vstring('HLT/Top/'),
    outputFileName = cms.untracked.string(''),
    efficiency = cms.vstring("EffVsPt_HLT_Mu9                                \'HLT_Mu9                           ; p_{T #mu};        Trigger_Efficiency\'  Muon1Pt_M_HLT_Mu9                                Muon1Pt_M", 
        "EffVsEta_HLT_Mu9                               \'HLT_Mu9                           ; #eta_{#mu};       Trigger_Efficiency\'  Muon1Eta_M_HLT_Mu9                               Muon1Eta_M", 
        "EffVsPt_HLT_Mu15                               \'HLT_Mu15                          ; p_{T #mu};        Trigger_Efficiency\'  Muon1Pt_M_HLT_Mu15                               Muon1Pt_M", 
        "EffVsEta_HLT_Mu15                              \'HLT_Mu15                          ; #eta_{#mu};       Trigger_Efficiency\'  Muon1Eta_M_HLT_Mu15                              Muon1Eta_M", 
        "EffVsPt_HLT_IsoMu9                             \'HLT_IsoMu9                        ; p_{T #mu};        Trigger_Efficiency\'  Muon1Pt_M_HLT_IsoMu9                             Muon1Pt_M", 
        "EffVsEta_HLT_IsoMu9                            \'HLT_IsoMu9                        ; #eta_{#mu};       Trigger_Efficiency\'  Muon1Eta_M_HLT_IsoMu9                            Muon1Eta_M", 
        "EffVsPt_HLT_Ele15_SW_L1R                       \'HLT_Ele15_SW_L1R                  ; p_{T e};          Trigger_Efficiency\'  Electron1Pt_E_HLT_Ele15_SW_L1R                   Electron1Pt_E", 
        "EffVsEta_HLT_Ele15_SW_L1R                      \'HLT_Ele15_SW_L1R                  ; #eta_{e};         Trigger_Efficiency\'  Electron1Eta_E_HLT_Ele15_SW_L1R                  Electron1Eta_E", 
        "EffVsPt_HLT_Ele15_SW_LooseTrackIso_L1R         \'HLT_Ele15_SW_LooseTrackIso_L1R    ; p_{T e};          Trigger_Efficiency\'  Electron1Pt_E_HLT_Ele15_SW_LooseTrackIso_L1R     Electron1Pt_E", 
        "EffVsEta_HLT_Ele15_SW_LooseTrackIso_L1R        \'HLT_Ele15_SW_LooseTrackIso_L1R    ; #eta_{e};         Trigger_Efficiency\'  Electron1Eta_E_HLT_Ele15_SW_LooseTrackIso_L1R    Electron1Eta_E", 
        "EffVsPt_HLT_Mu9_MM                             \'HLT_Mu9                           ; p_{T #mu 1};      Trigger_Efficiency\'  Muon1Pt_MM_HLT_Mu9                               Muon1Pt_MM", 
        "EffVsEta_HLT_Mu9_MM                            \'HLT_Mu9                           ; #eta_{#mu 1};     Trigger_Efficiency\'  Muon1Eta_MM_HLT_Mu9                              Muon1Eta_MM", 
        "EffVsPt_HLT_Mu15_MM                            \'HLT_Mu15                          ; p_{T #mu 1};      Trigger_Efficiency\'  Muon1Pt_MM_HLT_Mu15                              Muon1Pt_MM", 
        "EffVsEta_HLT_Mu15_MM                           \'HLT_Mu15                          ; #eta_{#mu 1};     Trigger_Efficiency\'  Muon1Eta_MM_HLT_Mu15                             Muon1Eta_MM", 
        "EffVsPt_HLT_IsoMu9_MM                          \'HLT_IsoMu9                        ; p_{T #mu 1};      Trigger_Efficiency\'  Muon1Pt_MM_HLT_IsoMu9                            Muon1Pt_MM", 
        "EffVsEta_HLT_IsoMu9_MM                         \'HLT_IsoMu9                        ; #eta_{#mu 1};     Trigger_Efficiency\'  Muon1Eta_MM_HLT_IsoMu9                           Muon1Eta_MM", 
        "EffVsPt_HLT_DoubleMu3_MM                       \'HLT_DoubleMu3                     ; p_{T #mu 1};      Trigger_Efficiency\'  Muon1Pt_MM_HLT_DoubleMu3                         Muon1Pt_MM", 
        "EffVsEta_HLT_DoubleMu3_MM                      \'HLT_DoubleMu3                     ; #eta_{#mu 1};     Trigger_Efficiency\'  Muon1Eta_MM_HLT_DoubleMu3                        Muon1Eta_MM", 
        "EffVsPt_HLT_Ele15_SW_L1R_EE                    \'HLT_Ele15_SW_L1R                  ; p_{T e 1};        Trigger_Efficiency\'  Electron1Pt_EE_HLT_Ele15_SW_L1R                  Electron1Pt_EE", 
        "EffVsEta_HLT_Ele15_SW_L1R_EE                   \'HLT_Ele15_SW_L1R                  ; #eta_{e 1};       Trigger_Efficiency\'  Electron1Eta_EE_HLT_Ele15_SW_L1R                 Electron1Eta_EE", 
        "EffVsPt_HLT_Ele15_SW_LooseTrackIso_L1R_EE      \'HLT_Ele15_SW_LooseTrackIso_L1R    ; p_{T e 1};        Trigger_Efficiency\'  Electron1Pt_EE_HLT_Ele15_SW_LooseTrackIso_L1R    Electron1Pt_EE", 
        "EffVsEta_HLT_Ele15_SW_LooseTrackIso_L1R_EE     \'HLT_Ele15_SW_LooseTrackIso_L1R    ; #eta_{e 1};       Trigger_Efficiency\'  Electron1Eta_EE_HLT_Ele15_SW_LooseTrackIso_L1R   Electron1Eta_EE", 
        "EffVsPt_HLT_DoubleEle10_SW_L1R_EE              \'HLT_DoubleEle10_SW_L1R            ; p_{T e 1};        Trigger_Efficiency\'  Electron1Pt_EE_HLT_DoubleEle10_SW_L1R            Electron1Pt_EE", 
        "EffVsEta_HLT_DoubleEle10_SW_L1R_EE             \'HLT_DoubleEle10_SW_L1R            ; #eta_{e 1};       Trigger_Efficiency\'  Electron1Eta_EE_HLT_DoubleEle10_SW_L1R           Electron1Eta_EE", 
        "EffVsPt_HLT_Mu9_EM                             \'HLT_Mu9                           ; p_{T #mu };       Trigger_Efficiency\'  Muon1Pt_EM_HLT_Mu9                               Muon1Pt_EM", 
        "EffVsEta_HLT_Mu9_EM                            \'HLT_Mu9                           ; #eta_{#mu };      Trigger_Efficiency\'  Muon1Eta_EM_HLT_Mu9                              Muon1Eta_EM", 
        "EffVsPt_HLT_Mu15_EM                            \'HLT_Mu15                          ; p_{T #mu };       Trigger_Efficiency\'  Muon1Pt_EM_HLT_Mu15                              Muon1Pt_EM", 
        "EffVsEta_HLT_Mu15_EM                           \'HLT_Mu15                          ; #eta_{#mu };      Trigger_Efficiency\'  Muon1Eta_EM_HLT_Mu15                             Muon1Eta_EM", 
        "EffVsPt_HLT_IsoMu9_EM                          \'HLT_IsoMu9                        ; p_{T #mu };       Trigger_Efficiency\'  Muon1Pt_EM_HLT_IsoMu9                            Muon1Pt_EM", 
        "EffVsEta_HLT_IsoMu9_EM                         \'HLT_IsoMu9                        ; #eta_{#mu };      Trigger_Efficiency\'  Muon1Eta_EM_HLT_IsoMu9                           Muon1Eta_EM", 
        "EffVsPt_HLT_Ele15_SW_L1R_EM                    \'HLT_Ele15_SW_L1R                  ; p_{T e };         Trigger_Efficiency\'  Electron1Pt_EM_HLT_Ele15_SW_L1R                  Electron1Pt_EM", 
        "EffVsEta_HLT_Ele15_SW_L1R_EM                   \'HLT_Ele15_SW_L1R                  ; #eta_{e };        Trigger_Efficiency\'  Electron1Eta_EM_HLT_Ele15_SW_L1R                 Electron1Eta_EM", 
        "EffVsPt_HLT_Ele15_SW_LooseTrackIso_L1R_EM      \'HLT_Ele15_SW_LooseTrackIso_L1R    ; p_{T e };         Trigger_Efficiency\'  Electron1Pt_EM_HLT_Ele15_SW_LooseTrackIso_L1R    Electron1Pt_EM", 
        "EffVsEta_HLT_Ele15_SW_LooseTrackIso_L1R_EM     \'HLT_Ele15_SW_LooseTrackIso_L1R    ; #eta_{e };        Trigger_Efficiency\'  Electron1Eta_EM_HLT_Ele15_SW_LooseTrackIso_L1R   Electron1Eta_EM", 
        "Efficiencies_muontriggers                      \'HLT efficiency wrt offline        ; eff ;              Trigger Efficiency\'               muHLT   MuonEvents", 
        "Efficiencies_muontriggers_gen                  \'HLT efficiency wrt mc             ; eff ;              Trigger Efficiency\'               genmuHLT   genMuonEvents", 
        "Efficiencies_jettriggers_semimu                  \'HLT efficiency wrt offline             ; eff ;              Trigger Efficiency\'               numer   denom", 
        "Efficiencies_electrontriggers                      \'HLT efficiency wrt offline        ; eff ;              Trigger Efficiency\'               elHLT   ElectronEvents", 
        "Efficiencies_electrontriggers_gen                  \'HLT efficiency wrt mc             ; eff ;              Trigger Efficiency\'               genelHLT   genElectronEvents"),
    resolution = cms.vstring('')
)


process.HLTTopVal = cms.EDAnalyzer("TopValidation",
    OutputMEsInRootFile = cms.bool(False),
    hltPaths = cms.vstring('HLT_Mu9', 
        'HLT_Mu15', 
        'HLT_IsoMu9', 
        'HLT_DoubleMu3', 
        'HLT_Ele15_SW_L1R', 
        'HLT_Ele15_SW_LooseTrackIso_L1R', 
        'HLT_DoubleEle10_SW_L1R'),
    OutputFileName = cms.string(''),
    hltMuonPaths = cms.vstring('HLT_Mu9', 
        'HLT_Mu15', 
        'HLT_IsoMu9', 
        'HLT_DoubleMu3'),
    TriggerResultsCollection = cms.InputTag("TriggerResults","","HLT"),
    hltJetPaths = cms.vstring('HLT_QuadJet30'),
    FolderName = cms.string('HLT/Top/'),
    hltEgPaths = cms.vstring('HLT_Ele15_SW_L1R', 
        'HLT_Ele15_SW_LooseTrackIso_L1R', 
        'HLT_DoubleEle10_SW_L1R')
)


process.HTMHTPath = cms.EDAnalyzer("HLTJetMETValidation",
    GenMETCollection = cms.untracked.InputTag("genMetCalo"),
    CaloMETCollection = cms.untracked.InputTag("hltMet"),
    triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
    HLTLow = cms.untracked.InputTag("HLT_HT240"),
    GenJetAlgorithm = cms.untracked.InputTag("iterativeCone5GenJets"),
    LogFileName = cms.untracked.string('JetMETSingleJetValidation.log'),
    HLTPath = cms.untracked.InputTag("HLT_HT300_MHT75"),
    DQMFolder = cms.untracked.string('HLT/HLTJETMET/HT300MHT75'),
    OutputFileName = cms.untracked.string('relval220_ideal/ttbar_fastsim_output.root'),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    CaloJetAlgorithm = cms.untracked.InputTag("hltIterativeCone5CaloJets")
)


process.JetMETPostVal = cms.EDAnalyzer("JetMETDQMPostProcessor",
    subDir = cms.untracked.string('HLT/HLTJETMET')
)


process.QuadJetPathVal30 = cms.EDAnalyzer("HLTJetMETValidation",
    GenMETCollection = cms.untracked.InputTag("genMetCalo"),
    CaloMETCollection = cms.untracked.InputTag("hltMet"),
    triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
    HLTLow = cms.untracked.InputTag("HLT_L1SingleJet36"),
    GenJetAlgorithm = cms.untracked.InputTag("iterativeCone5GenJets"),
    LogFileName = cms.untracked.string('JetMETSingleJetValidation.log'),
    HLTPath = cms.untracked.InputTag("HLT_QuadJet40"),
    DQMFolder = cms.untracked.string('HLT/HLTJETMET/QuadJet40'),
    OutputFileName = cms.untracked.string('relval220_ideal/ttbar_fastsim_output.root'),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    CaloJetAlgorithm = cms.untracked.InputTag("hltIterativeCone5CaloJets")
)


process.QuadJetPathVal60 = cms.EDAnalyzer("HLTJetMETValidation",
    GenMETCollection = cms.untracked.InputTag("genMetCalo"),
    CaloMETCollection = cms.untracked.InputTag("hltMet"),
    triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
    HLTLow = cms.untracked.InputTag("HLT_L1SingleJet36"),
    GenJetAlgorithm = cms.untracked.InputTag("iterativeCone5GenJets"),
    LogFileName = cms.untracked.string('JetMETSingleJetValidation.log'),
    HLTPath = cms.untracked.InputTag("HLT_QuadJet60"),
    DQMFolder = cms.untracked.string('HLT/HLTJETMET/QuadJet60'),
    OutputFileName = cms.untracked.string('relval220_ideal/ttbar_fastsim_output.root'),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    CaloJetAlgorithm = cms.untracked.InputTag("hltIterativeCone5CaloJets")
)


process.SingleJetPathVal100 = cms.EDAnalyzer("HLTJetMETValidation",
    GenMETCollection = cms.untracked.InputTag("genMetCalo"),
    CaloMETCollection = cms.untracked.InputTag("hltMet"),
    triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
    HLTLow = cms.untracked.InputTag("HLT_Jet190"),
    GenJetAlgorithm = cms.untracked.InputTag("iterativeCone5GenJets"),
    LogFileName = cms.untracked.string('JetMETSingleJetValidation.log'),
    HLTPath = cms.untracked.InputTag("HLT_Jet240"),
    DQMFolder = cms.untracked.string('HLT/HLTJETMET/SingleJet240'),
    OutputFileName = cms.untracked.string('relval220_ideal/ttbar_fastsim_output.root'),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    CaloJetAlgorithm = cms.untracked.InputTag("hltIterativeCone5CaloJets")
)


process.SingleJetPathVal15 = cms.EDAnalyzer("HLTJetMETValidation",
    GenMETCollection = cms.untracked.InputTag("genMetCalo"),
    CaloMETCollection = cms.untracked.InputTag("hltMet"),
    triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
    HLTLow = cms.untracked.InputTag("HLT_L1SingleJet36"),
    GenJetAlgorithm = cms.untracked.InputTag("iterativeCone5GenJets"),
    LogFileName = cms.untracked.string('JetMETSingleJetValidation.log'),
    HLTPath = cms.untracked.InputTag("HLT_Jet30"),
    DQMFolder = cms.untracked.string('HLT/HLTJETMET/SingleJet30'),
    OutputFileName = cms.untracked.string('relval220_ideal/ttbar_fastsim_output.root'),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    CaloJetAlgorithm = cms.untracked.InputTag("hltIterativeCone5CaloJets")
)


process.SingleJetPathVal30 = cms.EDAnalyzer("HLTJetMETValidation",
    GenMETCollection = cms.untracked.InputTag("genMetCalo"),
    CaloMETCollection = cms.untracked.InputTag("hltMet"),
    triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
    HLTLow = cms.untracked.InputTag("HLT_Jet30"),
    GenJetAlgorithm = cms.untracked.InputTag("iterativeCone5GenJets"),
    LogFileName = cms.untracked.string('JetMETSingleJetValidation.log'),
    HLTPath = cms.untracked.InputTag("HLT_Jet60"),
    DQMFolder = cms.untracked.string('HLT/HLTJETMET/SingleJet60'),
    OutputFileName = cms.untracked.string('relval220_ideal/ttbar_fastsim_output.root'),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    CaloJetAlgorithm = cms.untracked.InputTag("hltIterativeCone5CaloJets")
)


process.SingleJetPathVal50 = cms.EDAnalyzer("HLTJetMETValidation",
    GenMETCollection = cms.untracked.InputTag("genMetCalo"),
    CaloMETCollection = cms.untracked.InputTag("hltMet"),
    triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
    HLTLow = cms.untracked.InputTag("HLT_Jet60"),
    GenJetAlgorithm = cms.untracked.InputTag("iterativeCone5GenJets"),
    LogFileName = cms.untracked.string('JetMETSingleJetValidation.log'),
    HLTPath = cms.untracked.InputTag("HLT_Jet80"),
    DQMFolder = cms.untracked.string('HLT/HLTJETMET/SingleJet80'),
    OutputFileName = cms.untracked.string('relval220_ideal/ttbar_fastsim_output.root'),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    CaloJetAlgorithm = cms.untracked.InputTag("hltIterativeCone5CaloJets")
)


process.SingleJetPathVal70 = cms.EDAnalyzer("HLTJetMETValidation",
    GenMETCollection = cms.untracked.InputTag("genMetCalo"),
    CaloMETCollection = cms.untracked.InputTag("hltMet"),
    triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
    HLTLow = cms.untracked.InputTag("HLT_Jet80"),
    GenJetAlgorithm = cms.untracked.InputTag("iterativeCone5GenJets"),
    LogFileName = cms.untracked.string('JetMETSingleJetValidation.log'),
    HLTPath = cms.untracked.InputTag("HLT_Jet110"),
    DQMFolder = cms.untracked.string('HLT/HLTJETMET/SingleJet110'),
    OutputFileName = cms.untracked.string('relval220_ideal/ttbar_fastsim_output.root'),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    CaloJetAlgorithm = cms.untracked.InputTag("hltIterativeCone5CaloJets")
)


process.SingleMETPathVal100 = cms.EDAnalyzer("HLTJetMETValidation",
    GenMETCollection = cms.untracked.InputTag("genMetCalo"),
    CaloMETCollection = cms.untracked.InputTag("hltMet"),
    triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
    HLTLow = cms.untracked.InputTag("HLT_MET120"),
    GenJetAlgorithm = cms.untracked.InputTag("iterativeCone5GenJets"),
    LogFileName = cms.untracked.string('JetMETSingleJetValidation.log'),
    HLTPath = cms.untracked.InputTag("HLT_MET200"),
    DQMFolder = cms.untracked.string('HLT/HLTJETMET/SingleMET200'),
    OutputFileName = cms.untracked.string('relval220_ideal/ttbar_fastsim_output.root'),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    CaloJetAlgorithm = cms.untracked.InputTag("hltIterativeCone5CaloJets")
)


process.SingleMETPathVal35 = cms.EDAnalyzer("HLTJetMETValidation",
    GenMETCollection = cms.untracked.InputTag("genMetCalo"),
    CaloMETCollection = cms.untracked.InputTag("hltMet"),
    triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
    HLTLow = cms.untracked.InputTag("HLT_L1MET30"),
    GenJetAlgorithm = cms.untracked.InputTag("iterativeCone5GenJets"),
    LogFileName = cms.untracked.string('JetMETSingleJetValidation.log'),
    HLTPath = cms.untracked.InputTag("HLT_MET35"),
    DQMFolder = cms.untracked.string('HLT/HLTJETMET/SingleMET35'),
    OutputFileName = cms.untracked.string('relval220_ideal/ttbar_fastsim_output.root'),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    CaloJetAlgorithm = cms.untracked.InputTag("hltIterativeCone5CaloJets")
)


process.SingleMETPathVal45 = cms.EDAnalyzer("HLTJetMETValidation",
    GenMETCollection = cms.untracked.InputTag("genMetCalo"),
    CaloMETCollection = cms.untracked.InputTag("hltMet"),
    triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
    HLTLow = cms.untracked.InputTag("HLT_L1MET20"),
    GenJetAlgorithm = cms.untracked.InputTag("iterativeCone5GenJets"),
    LogFileName = cms.untracked.string('JetMETSingleJetValidation.log'),
    HLTPath = cms.untracked.InputTag("HLT_MET100"),
    DQMFolder = cms.untracked.string('HLT/HLTJETMET/SingleMET100'),
    OutputFileName = cms.untracked.string('relval220_ideal/ttbar_fastsim_output.root'),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    CaloJetAlgorithm = cms.untracked.InputTag("hltIterativeCone5CaloJets")
)


process.SingleMETPathVal60 = cms.EDAnalyzer("HLTJetMETValidation",
    GenMETCollection = cms.untracked.InputTag("genMetCalo"),
    CaloMETCollection = cms.untracked.InputTag("hltMet"),
    triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
    HLTLow = cms.untracked.InputTag("HLT_MET100"),
    GenJetAlgorithm = cms.untracked.InputTag("iterativeCone5GenJets"),
    LogFileName = cms.untracked.string('JetMETSingleJetValidation.log'),
    HLTPath = cms.untracked.InputTag("HLT_MET120"),
    DQMFolder = cms.untracked.string('HLT/HLTJETMET/SingleMET120'),
    OutputFileName = cms.untracked.string('relval220_ideal/ttbar_fastsim_output.root'),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    CaloJetAlgorithm = cms.untracked.InputTag("hltIterativeCone5CaloJets")
)


process.SusyExoPostVal = cms.EDAnalyzer("HltSusyExoPostProcessor",
    reco_parametersets = cms.VPSet(cms.PSet(
        reco_metMin = cms.double(100.0),
        reco_ptMuonMin = cms.double(10.0),
        reco_ptJet1Min = cms.double(80.0),
        photons = cms.string(''),
        reco_ptJet2Min = cms.double(30.0),
        reco_ptPhotMin = cms.double(0.0),
        electrons = cms.string('gsfElectrons'),
        calomet = cms.string('met'),
        muons = cms.string('muons'),
        reco_ptElecMin = cms.double(10.0),
        jets = cms.string('iterativeCone5CaloJets'),
        photonProducer = cms.string('photons'),
        name = cms.string('Reco1')
    )),
    subDir = cms.untracked.string('HLT/SusyExo'),
    mc_flag = cms.untracked.bool(True),
    mc_parametersets = cms.VPSet(cms.PSet(
        mc_nMuonRule = cms.string('strictEqual'),
        mc_ptElecMin = cms.double(5.0),
        mc_ptTauMin = cms.double(0.0),
        mc_ptJetForHtMin = cms.double(0.0),
        mc_nTau = cms.int32(0),
        mc_htMin = cms.double(0.0),
        mc_nElecRule = cms.string('strictEqual'),
        mc_nElec = cms.int32(0),
        mc_nJet = cms.int32(2),
        mc_metMin = cms.double(50.0),
        mc_nPhot = cms.int32(0),
        genMet = cms.string('genMetTrue'),
        genJets = cms.string('iterativeCone5GenJets'),
        mcparticles = cms.string('genParticles'),
        mc_ptPhotMin = cms.double(0.0),
        mc_ptJetMin = cms.double(25.0),
        mc_ptMuonMin = cms.double(5.0),
        mc_nMuon = cms.int32(0),
        name = cms.string('RA1')
    ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(0),
            mc_nJet = cms.int32(3),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(25.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(0),
            name = cms.string('RA2')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('greaterEqual'),
            mc_ptElecMin = cms.double(0.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('greaterEqual'),
            mc_nElec = cms.int32(0),
            mc_nJet = cms.int32(0),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(2),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(15.0),
            mc_ptJetMin = cms.double(0.0),
            mc_ptMuonMin = cms.double(0.0),
            mc_nMuon = cms.int32(0),
            name = cms.string('RA3')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(1),
            mc_nJet = cms.int32(2),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(25.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(0),
            name = cms.string('RA4_e')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(0),
            mc_nJet = cms.int32(2),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(25.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(1),
            name = cms.string('RA4_m')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(1),
            mc_nJet = cms.int32(2),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(25.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(1),
            name = cms.string('RA5RA6_1e1m')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(2),
            mc_nJet = cms.int32(2),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(25.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(0),
            name = cms.string('RA5RA6_2e')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(0),
            mc_nJet = cms.int32(2),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(25.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(2),
            name = cms.string('RA5RA6_2m')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(1),
            mc_nJet = cms.int32(0),
            mc_metMin = cms.double(0.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(0.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(2),
            name = cms.string('RA7_1e2m')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(2),
            mc_nJet = cms.int32(0),
            mc_metMin = cms.double(0.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(0.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(1),
            name = cms.string('RA7_2e1m')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(3),
            mc_nJet = cms.int32(0),
            mc_metMin = cms.double(0.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(0.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(0),
            name = cms.string('RA7_3e')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(0),
            mc_nJet = cms.int32(0),
            mc_metMin = cms.double(0.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(0.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(3),
            name = cms.string('RA7_3m')
        ))
)


process.ValidationMCBTagIP3DFastPV = cms.EDAnalyzer("HLTBTagPerformanceAnalyzer",
    mcFlavours = cms.PSet(
        uds = cms.vuint32(1, 2, 3),
        c = cms.vuint32(4),
        b = cms.vuint32(5),
        g = cms.vuint32(21),
        light = cms.vuint32(1, 2, 3, 21)
    ),
    BTagAlgorithm = cms.string('TC'),
    OfflineJetTag = cms.InputTag("NULL"),
    L3IPTagInfo = cms.InputTag("hltBLifetimeL3TagInfosHbb","","HLTX"),
    TrackIPTagInfo = cms.InputTag("NULL"),
    MinJetPT = cms.double(20),
    TriggerResults = cms.InputTag("TriggerResults","","HLTX"),
    L25IPTagInfo = cms.InputTag("hltBLifetimeL25TagInfosHbb","","HLTX"),
    L3JetTag = cms.InputTag("hltBLifetimeL3BJetTagsHbb","","HLTX"),
    L25JetTag = cms.InputTag("hltBLifetimeL25BJetTagsHbb","","HLTX"),
    mcPartons = cms.InputTag("hltJetsbyValAlgo"),
    HLTPathName = cms.string('HLT_DiCentralJet36_BTagIP3DLoose')
)


process.bTagPostValidation = cms.EDAnalyzer("HLTBTagHarvestingAnalyzer",
    maxTag = cms.double(100.0),
    minTag = cms.double(3.41),
    mcFlavours = cms.PSet(
        uds = cms.vuint32(1, 2, 3),
        c = cms.vuint32(4),
        b = cms.vuint32(5),
        g = cms.vuint32(21),
        light = cms.vuint32(1, 2, 3, 21)
    ),
    HLTPathName = cms.string('HLT_DiJet40Eta2p6_BTagIP3DFastPV')
)


process.bTagValidation = cms.EDAnalyzer("HLTBTagPerformanceAnalyzer",
    L3JetTag = cms.InputTag("hltBLifetimeL3BJetTagsbbPhiL1FastJetFastPV"),
    BTagAlgorithm = cms.string('TC'),
    OfflineJetTag = cms.InputTag("trackCountingHighEffBJetTags"),
    L3IPTagInfo = cms.InputTag("hltBLifetimeL3TagInfosbbPhiL1FastJetFastPV"),
    TrackIPTagInfo = cms.InputTag("impactParameterTagInfos"),
    MinJetPT = cms.double(20),
    TriggerResults = cms.InputTag("TriggerResults"),
    L25IPTagInfo = cms.InputTag("hltBLifetimeL25TagInfosbbPhiL1FastJetFastPV"),
    mcFlavours = cms.PSet(
        uds = cms.vuint32(1, 2, 3),
        c = cms.vuint32(4),
        b = cms.vuint32(5),
        g = cms.vuint32(21),
        light = cms.vuint32(1, 2, 3, 21)
    ),
    L25JetTag = cms.InputTag("hltBLifetimeL25BJetTagsbbPhiL1FastJetFastPV"),
    mcPartons = cms.InputTag("hltJetsbyValAlgo"),
    HLTPathName = cms.string('HLT_DiJet40Eta2p6_BTagIP3DFastPV')
)


process.bTagharvest = cms.EDAnalyzer("HLTBTagHarvestingAnalyzer",
    mcFlavours = cms.PSet(
        uds = cms.vuint32(1, 2, 3),
        c = cms.vuint32(4),
        b = cms.vuint32(5),
        g = cms.vuint32(21),
        light = cms.vuint32(1, 2, 3, 21)
    ),
    minTag = cms.double(3.41),
    maxTag = cms.double(100.0),
    HLTPathName = cms.string('HLT_DiCentralJet36_BTagIP3DLoose')
)


process.combiner = cms.EDAnalyzer("PlotCombiner",
    Plots = cms.untracked.VPSet(cms.untracked.PSet(
        OutputMEname = cms.untracked.string('effPathGlob_recoPt'),
        InputLabels = cms.untracked.vstring('HLT_Mu3', 
            'HLT_Mu5', 
            'HLT_Mu9', 
            'HLT_DoubleMu0', 
            'HLT_DoubleMu3'),
        InputMEnames = cms.untracked.vstring('HLT_Mu3/effPathDiglobOR_recoRapPtY', 
            'HLT_Mu5/effPathDiglobOR_recoRapPtY', 
            'HLT_Mu9/effPathDiglobOR_recoRapPtY', 
            'HLT_DoubleMu0/effPathDiglobAND_recoRapPtY', 
            'HLT_DoubleMu3/effPathDiglobAND_recoRapPtY')
    )),
    MyDQMrootFolder = cms.untracked.string('HLT/HeavyFlavor/HLT')
)


process.dqmEnv = cms.EDAnalyzer("DQMEventInfo",
    subSystemFolder = cms.untracked.string('YourSubsystem'),
    eventRateWindow = cms.untracked.double(0.5),
    eventInfoFolder = cms.untracked.string('EventInfo')
)


process.dqmFeeder = cms.EDAnalyzer("EmDQMFeeder",
    genEtaAcc = cms.double(2.5),
    noIsolationPlots = cms.untracked.bool(True),
    triggerobject = cms.InputTag("hltTriggerSummaryRAW","","HLT"),
    isData = cms.bool(False),
    verbosity = cms.untracked.uint32(0),
    genEtAcc = cms.double(2.0),
    PtMax = cms.untracked.double(100.0),
    noPhiPlots = cms.untracked.bool(True),
    mcMatchedOnly = cms.untracked.bool(True)
)


process.dqmSaver = cms.EDAnalyzer("DQMFileSaver",
    dirName = cms.untracked.string('.'),
    saveByTime = cms.untracked.int32(-1),
    producer = cms.untracked.string('DQM'),
    saveByEvent = cms.untracked.int32(-1),
    forceRunNumber = cms.untracked.int32(1),
    saveByRun = cms.untracked.int32(-1),
    workflow = cms.untracked.string('/CMSSW_4_4_2patch8/RelVal/TrigVal'),
    saveAtJobEnd = cms.untracked.bool(True),
    version = cms.untracked.int32(1),
    referenceRequireStatus = cms.untracked.int32(100),
    convention = cms.untracked.string('Offline'),
    saveByMinute = cms.untracked.int32(-1),
    runIsComplete = cms.untracked.bool(False),
    saveByLumiSection = cms.untracked.int32(-1),
    referenceHandling = cms.untracked.string('all')
)


process.egHLTOffDQMSource = cms.EDAnalyzer("EgHLTOfflineSource",
    eleTightLooseTrigNames = cms.vstring(),
    phoTightLooseTrigNames = cms.vstring(),
    diEleTightLooseTrigNames = cms.vstring(),
    phoHLTFilterNames = cms.vstring(),
    eleHLTFilterNames2Leg = cms.vstring(),
    eleHLTFilterNames = cms.vstring('hltEle65CaloIdVTTrkIdTDphiFilter'),
    diPhoTightLooseTrigNames = cms.vstring(),
    phoHLTFilterNames2Leg = cms.vstring(),
    hltEleTrkIsolRSpan = cms.double(999999.0),
    cutMasks = cms.PSet(
        stdPho = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:isolEm:isolHad:isolPtTrks'),
        trigTPPho = cms.string('hadem:sigmaIEtaIEta:isolEm:isolHad:isolPtTrks'),
        stdEle = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:hltIsolTrksEle:hltIsolHad:hltIsolEm'),
        fakeEle = cms.string('et:detEta:hadem'),
        probeEle = cms.string('et:detEta'),
        tagEle = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:hltIsolTrksEle:hltIsolHad:hltIsolEm'),
        trigTPEle = cms.string('detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:hltIsolTrksEle:hltIsolHad:hltIsolEm')
    ),
    hltHadIsolOuterCone = cms.double(0.3),
    CaloTowers = cms.InputTag("towerMaker"),
    eleCuts = cms.PSet(
        barrel = cms.PSet(
            isolPtTrksGradStart = cms.double(0.0),
            maxSigmaEtaEta = cms.double(0.01),
            maxCTFTrkInnerRadius = cms.double(99999),
            minR9 = cms.double(0.0),
            requirePixelHitsIfOuterInOuter = cms.bool(True),
            maxEta = cms.double(1.442),
            maxHLTDEtaIn = cms.double(0.008),
            isolHadGradTerm = cms.double(0.03),
            isolHadConstTerm = cms.double(3),
            maxHLTIsolTrksEleOverPt = cms.double(0.09),
            maxHLTIsolEmOverEt = cms.double(0.07),
            cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:minr9:maxr9:e2x5Over5x5:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
            maxR9 = cms.double(0.98),
            isolNrTrksConstTerm = cms.int32(0),
            maxDEtaIn = cms.double(0.004),
            isolHadGradStart = cms.double(0.0),
            maxHadem = cms.double(0.04),
            maxHLTInvEInvP = cms.double(9999),
            maxHLTIsolEmOverEt2 = cms.double(0),
            maxHLTIsolHadOverEt2 = cms.double(0),
            maxHLTIsolTrksPhoOverPt = cms.double(0),
            maxCTFTrkChi2NDof = cms.double(99999),
            maxHLTDPhiIn = cms.double(0.1),
            maxDPhiIn = cms.double(0.06),
            maxInvEInvP = cms.double(0.1),
            minEta = cms.double(0.0),
            maxHLTIsolTrksPhoOverPt2 = cms.double(0),
            minEt = cms.double(15),
            maxHadEnergy = cms.double(0),
            maxHLTIsolHadOverEt = cms.double(0.1),
            minNrCTFTrkHits = cms.int32(7),
            isolEmConstTerm = cms.double(3),
            maxHLTIsolTrksPho = cms.double(0),
            maxHLTIsolTrksEleOverPt2 = cms.double(0),
            maxHLTIsolEm = cms.double(0),
            maxNrCTFTrkHitsLost = cms.int32(999),
            maxHLTIsolTrksEle = cms.double(0),
            isolPtTrksConstTerm = cms.double(7.5),
            isolPtTrksGradTerm = cms.double(0.0),
            maxHLTIsolHad = cms.double(0),
            isolEmGradStart = cms.double(0.0),
            maxSigmaIEtaIEta = cms.double(0.01),
            isolEmGradTerm = cms.double(0.03),
            minCTFTrkOuterRadius = cms.double(0.0)
        ),
        endcap = cms.PSet(
            isolPtTrksGradStart = cms.double(0.0),
            maxSigmaEtaEta = cms.double(0.03),
            maxCTFTrkInnerRadius = cms.double(9999.0),
            minR9 = cms.double(0.0),
            requirePixelHitsIfOuterInOuter = cms.bool(True),
            maxEta = cms.double(2.5),
            maxHLTDEtaIn = cms.double(0.008),
            isolHadGradTerm = cms.double(0.03),
            isolHadConstTerm = cms.double(3),
            maxHLTIsolTrksEleOverPt = cms.double(0.04),
            maxHLTIsolEmOverEt = cms.double(0.05),
            cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
            maxR9 = cms.double(999.0),
            isolNrTrksConstTerm = cms.int32(0),
            maxDEtaIn = cms.double(0.007),
            isolHadGradStart = cms.double(0.0),
            maxHadem = cms.double(0.025),
            maxHLTInvEInvP = cms.double(9999),
            maxHLTIsolEmOverEt2 = cms.double(0),
            maxHLTIsolHadOverEt2 = cms.double(0),
            maxHLTIsolTrksPhoOverPt = cms.double(0),
            maxCTFTrkChi2NDof = cms.double(99999),
            maxHLTDPhiIn = cms.double(0.1),
            maxDPhiIn = cms.double(0.03),
            maxInvEInvP = cms.double(0.1),
            minEta = cms.double(1.56),
            maxHLTIsolTrksPhoOverPt2 = cms.double(0),
            minEt = cms.double(15),
            maxHadEnergy = cms.double(0),
            maxHLTIsolHadOverEt = cms.double(0.025),
            minNrCTFTrkHits = cms.int32(7),
            isolEmConstTerm = cms.double(3),
            maxHLTIsolTrksPho = cms.double(0),
            maxHLTIsolTrksEleOverPt2 = cms.double(0),
            maxHLTIsolEm = cms.double(0),
            maxNrCTFTrkHitsLost = cms.int32(999),
            maxHLTIsolTrksEle = cms.double(0),
            isolPtTrksConstTerm = cms.double(15),
            isolPtTrksGradTerm = cms.double(0.0),
            maxHLTIsolHad = cms.double(0),
            isolEmGradStart = cms.double(0.0),
            maxSigmaIEtaIEta = cms.double(0.03),
            isolEmGradTerm = cms.double(0.03),
            minCTFTrkOuterRadius = cms.double(0.0)
        )
    ),
    hltHadIsolDepth = cms.int32(-1),
    hltHadIsolInnerCone = cms.double(0.0),
    binData = cms.PSet(
        e1x5 = cms.PSet(
            max = cms.double(1.1),
            nr = cms.int32(24),
            min = cms.double(-0.1)
        ),
        et = cms.PSet(
            max = cms.double(155.0),
            nr = cms.int32(80),
            min = cms.double(-5.0)
        ),
        dEtaIn = cms.PSet(
            max = cms.double(0.02),
            nr = cms.int32(10),
            min = cms.double(-0.02)
        ),
        nVertex = cms.PSet(
            max = cms.double(21.0),
            nr = cms.int32(22),
            min = cms.double(-1.0)
        ),
        isolEm = cms.PSet(
            max = cms.double(10),
            nr = cms.int32(22),
            min = cms.double(-1)
        ),
        massHigh = cms.PSet(
            max = cms.double(5000),
            nr = cms.int32(20),
            min = cms.double(0.0)
        ),
        etHigh = cms.PSet(
            max = cms.double(2025),
            nr = cms.int32(30),
            min = cms.double(25)
        ),
        sigEtaEta = cms.PSet(
            max = cms.double(0.05),
            nr = cms.int32(30),
            min = cms.double(-0.01)
        ),
        isolPtTrks = cms.PSet(
            max = cms.double(10),
            nr = cms.int32(22),
            min = cms.double(-1)
        ),
        charge = cms.PSet(
            max = cms.double(1.5),
            nr = cms.int32(2),
            min = cms.double(-1.5)
        ),
        maxr9 = cms.PSet(
            max = cms.double(1.1),
            nr = cms.int32(24),
            min = cms.double(-0.1)
        ),
        invEInvP = cms.PSet(
            max = cms.double(0.2),
            nr = cms.int32(10),
            min = cms.double(-0.2)
        ),
        phi = cms.PSet(
            max = cms.double(3.14),
            nr = cms.int32(16),
            min = cms.double(-3.14)
        ),
        eOverP = cms.PSet(
            max = cms.double(5),
            nr = cms.int32(12),
            min = cms.double(-1.0)
        ),
        isolNrTrks = cms.PSet(
            max = cms.double(10),
            nr = cms.int32(22),
            min = cms.double(-1)
        ),
        dPhiIn = cms.PSet(
            max = cms.double(0.15),
            nr = cms.int32(10),
            min = cms.double(-0.15)
        ),
        err = cms.PSet(
            max = cms.double(100.5),
            nr = cms.int32(101),
            min = cms.double(-0.5)
        ),
        minr9 = cms.PSet(
            max = cms.double(1.1),
            nr = cms.int32(24),
            min = cms.double(-0.1)
        ),
        isolHad = cms.PSet(
            max = cms.double(10),
            nr = cms.int32(22),
            min = cms.double(-1)
        ),
        etaVsPhi = cms.PSet(
            yMax = cms.double(3.14),
            nrY = cms.int32(8),
            nrX = cms.int32(15),
            xMax = cms.double(3.0),
            xMin = cms.double(-3.0),
            yMin = cms.double(-3.14)
        ),
        hOverE = cms.PSet(
            max = cms.double(0.1),
            nr = cms.int32(30),
            min = cms.double(0.0)
        ),
        eta = cms.PSet(
            max = cms.double(3.0),
            nr = cms.int32(30),
            min = cms.double(-3.0)
        ),
        mass = cms.PSet(
            max = cms.double(120),
            nr = cms.int32(26),
            min = cms.double(-10.0)
        ),
        e2x5 = cms.PSet(
            max = cms.double(1.1),
            nr = cms.int32(24),
            min = cms.double(-0.1)
        )
    ),
    EndcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    calHLTEleTrkIsol = cms.bool(True),
    BeamSpotProducer = cms.InputTag("offlineBeamSpot"),
    IsolTrackCollection = cms.InputTag("generalTracks"),
    ElectronCollection = cms.InputTag("gsfElectrons"),
    hltEMIsolOuterCone = cms.double(0.4),
    hltEMIsolEtMinEB = cms.double(-9999.0),
    DQMDirName = cms.string('HLT/EgOffline'),
    hltPhoTrkIsolRSpan = cms.double(999999.0),
    hltEMIsolInnerConeEE = cms.double(0.07),
    hltTag = cms.string('HLT'),
    BarrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    hltPhoTrkIsolPtMin = cms.double(1.5),
    hltEleTrkIsolOuterCone = cms.double(0.2),
    hltEMIsolInnerConeEB = cms.double(0.045),
    HBHERecHitCollection = cms.InputTag("hbhereco"),
    calHLTPhoTrkIsol = cms.bool(False),
    hltHadIsolEtMin = cms.double(0.0),
    triggerSummaryLabel = cms.InputTag("hltTriggerSummaryAOD","","HLT"),
    phoCuts = cms.PSet(
        barrel = cms.PSet(
            isolPtTrksGradStart = cms.double(0.0),
            maxSigmaEtaEta = cms.double(0.011),
            maxCTFTrkInnerRadius = cms.double(9.0),
            minR9 = cms.double(0.0),
            requirePixelHitsIfOuterInOuter = cms.bool(True),
            maxEta = cms.double(1.442),
            maxHLTDEtaIn = cms.double(0.1),
            isolHadGradTerm = cms.double(0.005),
            isolHadConstTerm = cms.double(3.0),
            maxHLTIsolTrksEleOverPt = cms.double(0),
            maxHLTIsolEmOverEt = cms.double(0),
            cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks'),
            maxR9 = cms.double(0.98),
            isolNrTrksConstTerm = cms.int32(4),
            maxDEtaIn = cms.double(-1),
            isolHadGradStart = cms.double(0.0),
            maxHadem = cms.double(0.05),
            maxHLTInvEInvP = cms.double(0.1),
            maxHLTIsolEmOverEt2 = cms.double(0),
            maxHLTIsolHadOverEt2 = cms.double(0),
            maxHLTIsolTrksPhoOverPt = cms.double(0),
            maxCTFTrkChi2NDof = cms.double(99999.0),
            maxHLTDPhiIn = cms.double(0.1),
            maxDPhiIn = cms.double(-1),
            maxInvEInvP = cms.double(-1),
            minEta = cms.double(0.0),
            maxHLTIsolTrksPhoOverPt2 = cms.double(0),
            minEt = cms.double(20),
            maxHadEnergy = cms.double(0),
            maxHLTIsolHadOverEt = cms.double(0),
            minNrCTFTrkHits = cms.int32(5),
            isolEmConstTerm = cms.double(5.0),
            maxHLTIsolTrksPho = cms.double(0),
            maxHLTIsolTrksEleOverPt2 = cms.double(0),
            maxHLTIsolEm = cms.double(0),
            maxNrCTFTrkHitsLost = cms.int32(0),
            maxHLTIsolTrksEle = cms.double(0),
            isolPtTrksConstTerm = cms.double(3.0),
            isolPtTrksGradTerm = cms.double(0.002),
            maxHLTIsolHad = cms.double(0),
            isolEmGradStart = cms.double(0.0),
            maxSigmaIEtaIEta = cms.double(0.011),
            isolEmGradTerm = cms.double(0.012),
            minCTFTrkOuterRadius = cms.double(40.0)
        ),
        endcap = cms.PSet(
            isolPtTrksGradStart = cms.double(0.0),
            maxSigmaEtaEta = cms.double(0.031),
            maxCTFTrkInnerRadius = cms.double(9.0),
            minR9 = cms.double(0.0),
            requirePixelHitsIfOuterInOuter = cms.bool(True),
            maxEta = cms.double(2.5),
            maxHLTDEtaIn = cms.double(0.1),
            isolHadGradTerm = cms.double(0.005),
            isolHadConstTerm = cms.double(3.0),
            maxHLTIsolTrksEleOverPt = cms.double(0),
            maxHLTIsolEmOverEt = cms.double(0),
            cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks'),
            maxR9 = cms.double(999.0),
            isolNrTrksConstTerm = cms.int32(4),
            maxDEtaIn = cms.double(-1),
            isolHadGradStart = cms.double(0.0),
            maxHadem = cms.double(0.05),
            maxHLTInvEInvP = cms.double(0.1),
            maxHLTIsolEmOverEt2 = cms.double(0),
            maxHLTIsolHadOverEt2 = cms.double(0),
            maxHLTIsolTrksPhoOverPt = cms.double(0),
            maxCTFTrkChi2NDof = cms.double(99999.0),
            maxHLTDPhiIn = cms.double(0.1),
            maxDPhiIn = cms.double(-1),
            maxInvEInvP = cms.double(-1),
            minEta = cms.double(1.56),
            maxHLTIsolTrksPhoOverPt2 = cms.double(0),
            minEt = cms.double(20),
            maxHadEnergy = cms.double(0),
            maxHLTIsolHadOverEt = cms.double(0),
            minNrCTFTrkHits = cms.int32(5),
            isolEmConstTerm = cms.double(5.0),
            maxHLTIsolTrksPho = cms.double(0),
            maxHLTIsolTrksEleOverPt2 = cms.double(0),
            maxHLTIsolEm = cms.double(0),
            maxNrCTFTrkHitsLost = cms.int32(0),
            maxHLTIsolTrksEle = cms.double(0),
            isolPtTrksConstTerm = cms.double(3.0),
            isolPtTrksGradTerm = cms.double(0.002),
            maxHLTIsolHad = cms.double(0),
            isolEmGradStart = cms.double(0.0),
            maxSigmaIEtaIEta = cms.double(0.031),
            isolEmGradTerm = cms.double(0.012),
            minCTFTrkOuterRadius = cms.double(40.0)
        )
    ),
    hltEleTrkIsolZSpan = cms.double(0.1),
    calHLTEmIsol = cms.bool(True),
    calHLTHcalIsol = cms.bool(True),
    eleLooseCuts = cms.PSet(
        barrel = cms.PSet(
            isolPtTrksGradStart = cms.double(0.0),
            maxSigmaEtaEta = cms.double(0.01),
            maxCTFTrkInnerRadius = cms.double(99999),
            minR9 = cms.double(0.0),
            requirePixelHitsIfOuterInOuter = cms.bool(True),
            maxEta = cms.double(1.442),
            maxHLTDEtaIn = cms.double(0.008),
            isolHadGradTerm = cms.double(0.03),
            isolHadConstTerm = cms.double(3),
            maxHLTIsolTrksEleOverPt = cms.double(0.09),
            maxHLTIsolEmOverEt = cms.double(0.07),
            cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:minr9:maxr9:e2x5Over5x5:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
            maxR9 = cms.double(0.98),
            isolNrTrksConstTerm = cms.int32(0),
            maxDEtaIn = cms.double(0.004),
            isolHadGradStart = cms.double(0.0),
            maxHadem = cms.double(0.04),
            maxHLTInvEInvP = cms.double(9999),
            maxHLTIsolEmOverEt2 = cms.double(0),
            maxHLTIsolHadOverEt2 = cms.double(0),
            maxHLTIsolTrksPhoOverPt = cms.double(0),
            maxCTFTrkChi2NDof = cms.double(99999),
            maxHLTDPhiIn = cms.double(0.1),
            maxDPhiIn = cms.double(0.06),
            maxInvEInvP = cms.double(0.1),
            minEta = cms.double(0.0),
            maxHLTIsolTrksPhoOverPt2 = cms.double(0),
            minEt = cms.double(15),
            maxHadEnergy = cms.double(0),
            maxHLTIsolHadOverEt = cms.double(0.1),
            minNrCTFTrkHits = cms.int32(7),
            isolEmConstTerm = cms.double(3),
            maxHLTIsolTrksPho = cms.double(0),
            maxHLTIsolTrksEleOverPt2 = cms.double(0),
            maxHLTIsolEm = cms.double(0),
            maxNrCTFTrkHitsLost = cms.int32(999),
            maxHLTIsolTrksEle = cms.double(0),
            isolPtTrksConstTerm = cms.double(7.5),
            isolPtTrksGradTerm = cms.double(0.0),
            maxHLTIsolHad = cms.double(0),
            isolEmGradStart = cms.double(0.0),
            maxSigmaIEtaIEta = cms.double(0.01),
            isolEmGradTerm = cms.double(0.03),
            minCTFTrkOuterRadius = cms.double(0.0)
        ),
        endcap = cms.PSet(
            isolPtTrksGradStart = cms.double(0.0),
            maxSigmaEtaEta = cms.double(0.03),
            maxCTFTrkInnerRadius = cms.double(9999.0),
            minR9 = cms.double(0.0),
            requirePixelHitsIfOuterInOuter = cms.bool(True),
            maxEta = cms.double(2.5),
            maxHLTDEtaIn = cms.double(0.008),
            isolHadGradTerm = cms.double(0.03),
            isolHadConstTerm = cms.double(3),
            maxHLTIsolTrksEleOverPt = cms.double(0.04),
            maxHLTIsolEmOverEt = cms.double(0.05),
            cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
            maxR9 = cms.double(999.0),
            isolNrTrksConstTerm = cms.int32(0),
            maxDEtaIn = cms.double(0.007),
            isolHadGradStart = cms.double(0.0),
            maxHadem = cms.double(0.025),
            maxHLTInvEInvP = cms.double(9999),
            maxHLTIsolEmOverEt2 = cms.double(0),
            maxHLTIsolHadOverEt2 = cms.double(0),
            maxHLTIsolTrksPhoOverPt = cms.double(0),
            maxCTFTrkChi2NDof = cms.double(99999),
            maxHLTDPhiIn = cms.double(0.1),
            maxDPhiIn = cms.double(0.03),
            maxInvEInvP = cms.double(0.1),
            minEta = cms.double(1.56),
            maxHLTIsolTrksPhoOverPt2 = cms.double(0),
            minEt = cms.double(15),
            maxHadEnergy = cms.double(0),
            maxHLTIsolHadOverEt = cms.double(0.025),
            minNrCTFTrkHits = cms.int32(7),
            isolEmConstTerm = cms.double(3),
            maxHLTIsolTrksPho = cms.double(0),
            maxHLTIsolTrksEleOverPt2 = cms.double(0),
            maxHLTIsolEm = cms.double(0),
            maxNrCTFTrkHitsLost = cms.int32(999),
            maxHLTIsolTrksEle = cms.double(0),
            isolPtTrksConstTerm = cms.double(15),
            isolPtTrksGradTerm = cms.double(0.0),
            maxHLTIsolHad = cms.double(0),
            isolEmGradStart = cms.double(0.0),
            maxSigmaIEtaIEta = cms.double(0.03),
            isolEmGradTerm = cms.double(0.03),
            minCTFTrkOuterRadius = cms.double(0.0)
        )
    ),
    VertexCollection = cms.InputTag("offlinePrimaryVertices"),
    phoLooseCuts = cms.PSet(
        barrel = cms.PSet(
            isolPtTrksGradStart = cms.double(0.0),
            maxSigmaEtaEta = cms.double(0.011),
            maxCTFTrkInnerRadius = cms.double(9.0),
            minR9 = cms.double(0.0),
            requirePixelHitsIfOuterInOuter = cms.bool(True),
            maxEta = cms.double(1.442),
            maxHLTDEtaIn = cms.double(0.1),
            isolHadGradTerm = cms.double(0.005),
            isolHadConstTerm = cms.double(3.0),
            maxHLTIsolTrksEleOverPt = cms.double(0),
            maxHLTIsolEmOverEt = cms.double(0),
            cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks'),
            maxR9 = cms.double(0.98),
            isolNrTrksConstTerm = cms.int32(4),
            maxDEtaIn = cms.double(-1),
            isolHadGradStart = cms.double(0.0),
            maxHadem = cms.double(0.05),
            maxHLTInvEInvP = cms.double(0.1),
            maxHLTIsolEmOverEt2 = cms.double(0),
            maxHLTIsolHadOverEt2 = cms.double(0),
            maxHLTIsolTrksPhoOverPt = cms.double(0),
            maxCTFTrkChi2NDof = cms.double(99999.0),
            maxHLTDPhiIn = cms.double(0.1),
            maxDPhiIn = cms.double(-1),
            maxInvEInvP = cms.double(-1),
            minEta = cms.double(0.0),
            maxHLTIsolTrksPhoOverPt2 = cms.double(0),
            minEt = cms.double(20),
            maxHadEnergy = cms.double(0),
            maxHLTIsolHadOverEt = cms.double(0),
            minNrCTFTrkHits = cms.int32(5),
            isolEmConstTerm = cms.double(5.0),
            maxHLTIsolTrksPho = cms.double(0),
            maxHLTIsolTrksEleOverPt2 = cms.double(0),
            maxHLTIsolEm = cms.double(0),
            maxNrCTFTrkHitsLost = cms.int32(0),
            maxHLTIsolTrksEle = cms.double(0),
            isolPtTrksConstTerm = cms.double(3.0),
            isolPtTrksGradTerm = cms.double(0.002),
            maxHLTIsolHad = cms.double(0),
            isolEmGradStart = cms.double(0.0),
            maxSigmaIEtaIEta = cms.double(0.011),
            isolEmGradTerm = cms.double(0.012),
            minCTFTrkOuterRadius = cms.double(40.0)
        ),
        endcap = cms.PSet(
            isolPtTrksGradStart = cms.double(0.0),
            maxSigmaEtaEta = cms.double(0.031),
            maxCTFTrkInnerRadius = cms.double(9.0),
            minR9 = cms.double(0.0),
            requirePixelHitsIfOuterInOuter = cms.bool(True),
            maxEta = cms.double(2.5),
            maxHLTDEtaIn = cms.double(0.1),
            isolHadGradTerm = cms.double(0.005),
            isolHadConstTerm = cms.double(3.0),
            maxHLTIsolTrksEleOverPt = cms.double(0),
            maxHLTIsolEmOverEt = cms.double(0),
            cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks'),
            maxR9 = cms.double(999.0),
            isolNrTrksConstTerm = cms.int32(4),
            maxDEtaIn = cms.double(-1),
            isolHadGradStart = cms.double(0.0),
            maxHadem = cms.double(0.05),
            maxHLTInvEInvP = cms.double(0.1),
            maxHLTIsolEmOverEt2 = cms.double(0),
            maxHLTIsolHadOverEt2 = cms.double(0),
            maxHLTIsolTrksPhoOverPt = cms.double(0),
            maxCTFTrkChi2NDof = cms.double(99999.0),
            maxHLTDPhiIn = cms.double(0.1),
            maxDPhiIn = cms.double(-1),
            maxInvEInvP = cms.double(-1),
            minEta = cms.double(1.56),
            maxHLTIsolTrksPhoOverPt2 = cms.double(0),
            minEt = cms.double(20),
            maxHadEnergy = cms.double(0),
            maxHLTIsolHadOverEt = cms.double(0),
            minNrCTFTrkHits = cms.int32(5),
            isolEmConstTerm = cms.double(5.0),
            maxHLTIsolTrksPho = cms.double(0),
            maxHLTIsolTrksEleOverPt2 = cms.double(0),
            maxHLTIsolEm = cms.double(0),
            maxNrCTFTrkHitsLost = cms.int32(0),
            maxHLTIsolTrksEle = cms.double(0),
            isolPtTrksConstTerm = cms.double(3.0),
            isolPtTrksGradTerm = cms.double(0.002),
            maxHLTIsolHad = cms.double(0),
            isolEmGradStart = cms.double(0.0),
            maxSigmaIEtaIEta = cms.double(0.031),
            isolEmGradTerm = cms.double(0.012),
            minCTFTrkOuterRadius = cms.double(40.0)
        )
    ),
    triggerCuts = cms.VPSet(),
    hltPhoTrkIsolZSpan = cms.double(999999.0),
    HFRecHitCollection = cms.InputTag("hfreco"),
    hltEMIsolEMinEB = cms.double(0.08),
    hltEMIsolEtaSliceEB = cms.double(0.02),
    hltEMIsolEtaSliceEE = cms.double(0.02),
    hltEMIsolEMinEE = cms.double(0.3),
    hltPhoTrkIsolInnerCone = cms.double(0.06),
    TrigResults = cms.InputTag("TriggerResults","","HLT"),
    filterInactiveTriggers = cms.bool(True),
    PhotonCollection = cms.InputTag("photons"),
    hltEleTrkIsolInnerCone = cms.double(0.02),
    hltPhoTrkIsolOuterCone = cms.double(0.3),
    CaloJetCollection = cms.InputTag("ak5CaloJets"),
    hltEMIsolEtMinEE = cms.double(-9999.0),
    hltEleTrkIsolPtMin = cms.double(1.5),
    hltPhoTrkIsolCountTrks = cms.bool(False)
)


process.heavyFlavorValidation = cms.EDAnalyzer("HeavyFlavorValidation",
    MuonPtBins = cms.untracked.vdouble(1.0, 3.0, 5.0, 9.0, 15.0, 
        32.0, 64.0, 128.0, 256.0, 512.0, 
        1024.0, 2048.0),
    TriggerPathName = cms.untracked.string('HLT_Mu5'),
    GlobL2DeltaRMatchingCut = cms.untracked.double(0.3),
    MuonPhiBins = cms.untracked.vdouble(12, -3.15, 3.15),
    DimuonDRBins = cms.untracked.vdouble(10, 0.0, 1.0),
    DimuonEtaBins = cms.untracked.vdouble(16, -2.4, 2.4),
    TriggerProcessName = cms.untracked.string('HLT'),
    MuonEtaBins = cms.untracked.vdouble(16, -2.4, 2.4),
    TriggerSummaryRAW = cms.untracked.string('hltTriggerSummaryRAW'),
    DeltaEtaBins = cms.untracked.vdouble(100, -0.5, 0.5),
    RecoMuons = cms.InputTag("muons"),
    GlobL3DeltaRMatchingCut = cms.untracked.double(0.1),
    DimuonPtBins = cms.untracked.vdouble(0.0, 2.0, 4.0, 6.0, 8.0, 
        10.0, 15.0, 25.0, 50.0, 100.0),
    DQMFolder = cms.untracked.string('HLT/HeavyFlavor'),
    TriggerResults = cms.untracked.string('TriggerResults'),
    MotherIDs = cms.untracked.vint32(23, 443, 553, 0),
    GlobL1DeltaRMatchingCut = cms.untracked.double(0.3),
    GenParticles = cms.InputTag("genParticles"),
    GenGlobDeltaRMatchingCut = cms.untracked.double(0.1),
    DeltaPhiBins = cms.untracked.vdouble(100, -0.5, 0.5),
    TriggerSummaryAOD = cms.untracked.string('hltTriggerSummaryAOD')
)


process.heavyFlavorValidationHarvesting = cms.EDAnalyzer("HeavyFlavorHarvesting",
    Efficiencies = cms.untracked.VPSet(cms.untracked.PSet(
        NumDenEffMEnames = cms.untracked.vstring('globMuon_genEtaPt', 
            'genMuon_genEtaPt', 
            'effGlobGen_genEtaPt')
    ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt1Muon_recoEtaPt', 
                'globMuon_recoEtaPt', 
                'effFilt1Glob_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt2Muon_recoEtaPt', 
                'globMuon_recoEtaPt', 
                'effFilt2Glob_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt3Muon_recoEtaPt', 
                'globMuon_recoEtaPt', 
                'effFilt3Glob_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt4Muon_recoEtaPt', 
                'globMuon_recoEtaPt', 
                'effFilt4Glob_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt5Muon_recoEtaPt', 
                'globMuon_recoEtaPt', 
                'effFilt5Glob_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('pathMuon_recoEtaPt', 
                'globMuon_recoEtaPt', 
                'effPathGlob_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt2Muon_recoEtaPt', 
                'filt1Muon_recoEtaPt', 
                'effFilt2Filt1_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt3Muon_recoEtaPt', 
                'filt2Muon_recoEtaPt', 
                'effFilt3Filt2_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt4Muon_recoEtaPt', 
                'filt3Muon_recoEtaPt', 
                'effFilt4Filt3_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt5Muon_recoEtaPt', 
                'filt4Muon_recoEtaPt', 
                'effFilt5Filt4_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt3Muon_recoEtaPt', 
                'filt1Muon_recoEtaPt', 
                'effFilt3Filt1_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt4Muon_recoEtaPt', 
                'filt1Muon_recoEtaPt', 
                'effFilt4Filt1_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt5Muon_recoEtaPt', 
                'filt1Muon_recoEtaPt', 
                'effFilt5Filt1_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('globMuon_genEtaPhi', 
                'genMuon_genEtaPhi', 
                'effGlobGen_genEtaPhi')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt1Muon_recoEtaPhi', 
                'globMuon_recoEtaPhi', 
                'effFilt1Glob_recoEtaPhi')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt2Muon_recoEtaPhi', 
                'globMuon_recoEtaPhi', 
                'effFilt2Glob_recoEtaPhi')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt3Muon_recoEtaPhi', 
                'globMuon_recoEtaPhi', 
                'effFilt3Glob_recoEtaPhi')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt4Muon_recoEtaPhi', 
                'globMuon_recoEtaPhi', 
                'effFilt4Glob_recoEtaPhi')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt5Muon_recoEtaPhi', 
                'globMuon_recoEtaPhi', 
                'effFilt5Glob_recoEtaPhi')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('pathMuon_recoEtaPhi', 
                'globMuon_recoEtaPhi', 
                'effPathGlob_recoEtaPhi')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt2Muon_recoEtaPhi', 
                'filt1Muon_recoEtaPhi', 
                'effFilt2Filt1_recoEtaPhi')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt3Muon_recoEtaPhi', 
                'filt2Muon_recoEtaPhi', 
                'effFilt3Filt2_recoEtaPhi')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt4Muon_recoEtaPhi', 
                'filt3Muon_recoEtaPhi', 
                'effFilt4Filt3_recoEtaPhi')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt5Muon_recoEtaPhi', 
                'filt4Muon_recoEtaPhi', 
                'effFilt5Filt4_recoEtaPhi')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt3Muon_recoEtaPhi', 
                'filt1Muon_recoEtaPhi', 
                'effFilt3Filt1_recoEtaPhi')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt4Muon_recoEtaPhi', 
                'filt1Muon_recoEtaPhi', 
                'effFilt4Filt1_recoEtaPhi')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt5Muon_recoEtaPhi', 
                'filt1Muon_recoEtaPhi', 
                'effFilt5Filt1_recoEtaPhi')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('globDimuon_genEtaPt', 
                'genDimuon_genEtaPt', 
                'effGlobDigenAND_genEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt1Dimuon_recoEtaPt', 
                'globDimuon_recoEtaPt', 
                'effFilt1DiglobOR_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt2Dimuon_recoEtaPt', 
                'globDimuon_recoEtaPt', 
                'effFilt2DiglobOR_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt3Dimuon_recoEtaPt', 
                'globDimuon_recoEtaPt', 
                'effFilt3DiglobOR_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt4Dimuon_recoEtaPt', 
                'globDimuon_recoEtaPt', 
                'effFilt4DiglobOR_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt5Dimuon_recoEtaPt', 
                'globDimuon_recoEtaPt', 
                'effFilt5DiglobOR_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('pathDimuon_recoEtaPt', 
                'globDimuon_recoEtaPt', 
                'effPathDiglobOR_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt1Dimuon_recoEtaPt', 
                'globDimuon_recoEtaPt', 
                'effFilt1DiglobAND_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt2Dimuon_recoEtaPt', 
                'globDimuon_recoEtaPt', 
                'effFilt2DiglobAND_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt3Dimuon_recoEtaPt', 
                'globDimuon_recoEtaPt', 
                'effFilt3DiglobAND_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt4Dimuon_recoEtaPt', 
                'globDimuon_recoEtaPt', 
                'effFilt4DiglobAND_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt5Dimuon_recoEtaPt', 
                'globDimuon_recoEtaPt', 
                'effFilt5DiglobAND_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diPathDimuon_recoEtaPt', 
                'globDimuon_recoEtaPt', 
                'effPathDiglobAND_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt2Dimuon_recoEtaPt', 
                'diFilt1Dimuon_recoEtaPt', 
                'effFilt2Difilt1AND_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt3Dimuon_recoEtaPt', 
                'diFilt2Dimuon_recoEtaPt', 
                'effFilt3Difilt2AND_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt4Dimuon_recoEtaPt', 
                'diFilt3Dimuon_recoEtaPt', 
                'effFilt4Difilt3AND_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt5Dimuon_recoEtaPt', 
                'diFilt4Dimuon_recoEtaPt', 
                'effFilt5Difilt4AND_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt3Dimuon_recoEtaPt', 
                'diFilt1Dimuon_recoEtaPt', 
                'effFilt3Difilt1AND_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt4Dimuon_recoEtaPt', 
                'diFilt1Dimuon_recoEtaPt', 
                'effFilt4Difilt1AND_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt5Dimuon_recoEtaPt', 
                'diFilt1Dimuon_recoEtaPt', 
                'effFilt5Difilt1AND_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('globDimuon_genRapPt', 
                'genDimuon_genRapPt', 
                'effGlobDigenAND_genRapPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt1Dimuon_recoRapPt', 
                'globDimuon_recoRapPt', 
                'effFilt1DiglobOR_recoRapPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt2Dimuon_recoRapPt', 
                'globDimuon_recoRapPt', 
                'effFilt2DiglobOR_recoRapPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt3Dimuon_recoRapPt', 
                'globDimuon_recoRapPt', 
                'effFilt3DiglobOR_recoRapPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt4Dimuon_recoRapPt', 
                'globDimuon_recoRapPt', 
                'effFilt4DiglobOR_recoRapPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt5Dimuon_recoRapPt', 
                'globDimuon_recoRapPt', 
                'effFilt5DiglobOR_recoRapPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('pathDimuon_recoRapPt', 
                'globDimuon_recoRapPt', 
                'effPathDiglobOR_recoRapPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt1Dimuon_recoRapPt', 
                'globDimuon_recoRapPt', 
                'effFilt1DiglobAND_recoRapPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt2Dimuon_recoRapPt', 
                'globDimuon_recoRapPt', 
                'effFilt2DiglobAND_recoRapPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt3Dimuon_recoRapPt', 
                'globDimuon_recoRapPt', 
                'effFilt3DiglobAND_recoRapPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt4Dimuon_recoRapPt', 
                'globDimuon_recoRapPt', 
                'effFilt4DiglobAND_recoRapPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt5Dimuon_recoRapPt', 
                'globDimuon_recoRapPt', 
                'effFilt5DiglobAND_recoRapPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diPathDimuon_recoRapPt', 
                'globDimuon_recoRapPt', 
                'effPathDiglobAND_recoRapPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt2Dimuon_recoRapPt', 
                'diFilt1Dimuon_recoRapPt', 
                'effFilt2Difilt1AND_recoRapPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt3Dimuon_recoRapPt', 
                'diFilt2Dimuon_recoRapPt', 
                'effFilt3Difilt2AND_recoRapPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt4Dimuon_recoRapPt', 
                'diFilt3Dimuon_recoRapPt', 
                'effFilt4Difilt3AND_recoRapPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt5Dimuon_recoRapPt', 
                'diFilt4Dimuon_recoRapPt', 
                'effFilt5Difilt4AND_recoRapPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt3Dimuon_recoRapPt', 
                'diFilt1Dimuon_recoRapPt', 
                'effFilt3Difilt1AND_recoRapPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt4Dimuon_recoRapPt', 
                'diFilt1Dimuon_recoRapPt', 
                'effFilt4Difilt1AND_recoRapPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt5Dimuon_recoRapPt', 
                'diFilt1Dimuon_recoRapPt', 
                'effFilt5Difilt1AND_recoRapPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('globDimuon_genPtDR', 
                'genDimuon_genPtDR', 
                'effGlobDigenAND_genPtDR')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt1Dimuon_recoPtDR', 
                'globDimuon_recoPtDR', 
                'effFilt1DiglobOR_recoPtDR')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt2Dimuon_recoPtDR', 
                'globDimuon_recoPtDR', 
                'effFilt2DiglobOR_recoPtDR')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt3Dimuon_recoPtDR', 
                'globDimuon_recoPtDR', 
                'effFilt3DiglobOR_recoPtDR')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt4Dimuon_recoPtDR', 
                'globDimuon_recoPtDR', 
                'effFilt4DiglobOR_recoPtDR')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt5Dimuon_recoPtDR', 
                'globDimuon_recoPtDR', 
                'effFilt5DiglobOR_recoPtDR')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('pathDimuon_recoPtDR', 
                'globDimuon_recoPtDR', 
                'effPathDiglobOR_recoPtDR')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt1Dimuon_recoPtDR', 
                'globDimuon_recoPtDR', 
                'effFilt1DiglobAND_recoPtDR')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt2Dimuon_recoPtDR', 
                'globDimuon_recoPtDR', 
                'effFilt2DiglobAND_recoPtDR')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt3Dimuon_recoPtDR', 
                'globDimuon_recoPtDR', 
                'effFilt3DiglobAND_recoPtDR')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt4Dimuon_recoPtDR', 
                'globDimuon_recoPtDR', 
                'effFilt4DiglobAND_recoPtDR')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt5Dimuon_recoPtDR', 
                'globDimuon_recoPtDR', 
                'effFilt5DiglobAND_recoPtDR')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diPathDimuon_recoPtDR', 
                'globDimuon_recoPtDR', 
                'effPathDiglobAND_recoPtDR')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt2Dimuon_recoPtDR', 
                'diFilt1Dimuon_recoPtDR', 
                'effFilt2Difilt1AND_recoPtDR')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt3Dimuon_recoPtDR', 
                'diFilt2Dimuon_recoPtDR', 
                'effFilt3Difilt2AND_recoPtDR')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt4Dimuon_recoPtDR', 
                'diFilt3Dimuon_recoPtDR', 
                'effFilt4Difilt3AND_recoPtDR')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt5Dimuon_recoPtDR', 
                'diFilt4Dimuon_recoPtDR', 
                'effFilt5Difilt4AND_recoPtDR')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt3Dimuon_recoPtDR', 
                'diFilt1Dimuon_recoPtDR', 
                'effFilt3Difilt1AND_recoPtDR')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt4Dimuon_recoPtDR', 
                'diFilt1Dimuon_recoPtDR', 
                'effFilt4Difilt1AND_recoPtDR')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt5Dimuon_recoPtDR', 
                'diFilt1Dimuon_recoPtDR', 
                'effFilt5Difilt1AND_recoPtDR')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('globDimuon_genPtDRpos', 
                'genDimuon_genPtDRpos', 
                'effGlobDigenAND_genPtDRpos')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt1Dimuon_recoPtDRpos', 
                'globDimuon_recoPtDRpos', 
                'effFilt1DiglobOR_recoPtDRpos')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt2Dimuon_recoPtDRpos', 
                'globDimuon_recoPtDRpos', 
                'effFilt2DiglobOR_recoPtDRpos')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt3Dimuon_recoPtDRpos', 
                'globDimuon_recoPtDRpos', 
                'effFilt3DiglobOR_recoPtDRpos')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt4Dimuon_recoPtDRpos', 
                'globDimuon_recoPtDRpos', 
                'effFilt4DiglobOR_recoPtDRpos')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('filt5Dimuon_recoPtDRpos', 
                'globDimuon_recoPtDRpos', 
                'effFilt5DiglobOR_recoPtDRpos')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('pathDimuon_recoPtDRpos', 
                'globDimuon_recoPtDRpos', 
                'effPathDiglobOR_recoPtDRpos')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt1Dimuon_recoPtDRpos', 
                'globDimuon_recoPtDRpos', 
                'effFilt1DiglobAND_recoPtDRpos')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt2Dimuon_recoPtDRpos', 
                'globDimuon_recoPtDRpos', 
                'effFilt2DiglobAND_recoPtDRpos')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt3Dimuon_recoPtDRpos', 
                'globDimuon_recoPtDRpos', 
                'effFilt3DiglobAND_recoPtDRpos')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt4Dimuon_recoPtDRpos', 
                'globDimuon_recoPtDRpos', 
                'effFilt4DiglobAND_recoPtDRpos')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt5Dimuon_recoPtDRpos', 
                'globDimuon_recoPtDRpos', 
                'effFilt5DiglobAND_recoPtDRpos')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diPathDimuon_recoPtDRpos', 
                'globDimuon_recoPtDRpos', 
                'effPathDiglobAND_recoPtDRpos')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt2Dimuon_recoPtDRpos', 
                'diFilt1Dimuon_recoPtDRpos', 
                'effFilt2Difilt1AND_recoPtDRpos')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt3Dimuon_recoPtDRpos', 
                'diFilt2Dimuon_recoPtDRpos', 
                'effFilt3Difilt2AND_recoPtDRpos')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt4Dimuon_recoPtDRpos', 
                'diFilt3Dimuon_recoPtDRpos', 
                'effFilt4Difilt3AND_recoPtDRpos')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt5Dimuon_recoPtDRpos', 
                'diFilt4Dimuon_recoPtDRpos', 
                'effFilt5Difilt4AND_recoPtDRpos')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt3Dimuon_recoPtDRpos', 
                'diFilt1Dimuon_recoPtDRpos', 
                'effFilt3Difilt1AND_recoPtDRpos')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt4Dimuon_recoPtDRpos', 
                'diFilt1Dimuon_recoPtDRpos', 
                'effFilt4Difilt1AND_recoPtDRpos')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('diFilt5Dimuon_recoPtDRpos', 
                'diFilt1Dimuon_recoPtDRpos', 
                'effFilt5Difilt1AND_recoPtDRpos')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('resultDimuon_recoEtaPt', 
                'globDimuon_recoEtaPt', 
                'effResultDiglob_recoEtaPt')
        ), 
        cms.untracked.PSet(
            NumDenEffMEnames = cms.untracked.vstring('resultDimuon_recoRapPt', 
                'globDimuon_recoRapPt', 
                'effResultDiglob_recoRapPt')
        )),
    MyDQMrootFolder = cms.untracked.string('HLT/HeavyFlavor/HLT/HLT_Mu5')
)


process.hfv1 = cms.EDAnalyzer("HeavyFlavorValidation",
    MuonPtBins = cms.untracked.vdouble(0.5, 1.0, 2.0, 3.0, 4.0, 
        5.0, 7.0, 9.0, 20.0, 50.0),
    GlobL2DeltaRMatchingCut = cms.untracked.double(0.3),
    MuonPhiBins = cms.untracked.vdouble(12, -3.15, 3.15),
    TriggerProcessName = cms.untracked.string('HLT'),
    DimuonEtaBins = cms.untracked.vdouble(16, -2.4, 2.4),
    DimuonDRBins = cms.untracked.vdouble(10, 0.0, 1.0),
    MuonEtaBins = cms.untracked.vdouble(24, -2.4, 2.4),
    TriggerSummaryRAW = cms.untracked.string('hltTriggerSummaryRAW'),
    DeltaEtaBins = cms.untracked.vdouble(100, -0.5, 0.5),
    RecoMuons = cms.InputTag("muons"),
    GlobL3DeltaRMatchingCut = cms.untracked.double(0.1),
    DimuonPtBins = cms.untracked.vdouble(0.0, 2.0, 4.0, 6.0, 8.0, 
        10.0, 15.0, 25.0, 50.0, 100.0),
    TriggerSummaryAOD = cms.untracked.string('hltTriggerSummaryAOD'),
    DQMFolder = cms.untracked.string('HLT/HeavyFlavor'),
    TriggerResults = cms.untracked.string('TriggerResults'),
    MotherIDs = cms.untracked.vint32(23, 443, 553, 0),
    GlobL1DeltaRMatchingCut = cms.untracked.double(0.3),
    GenParticles = cms.InputTag("genParticles"),
    GenGlobDeltaRMatchingCut = cms.untracked.double(0.1),
    DeltaPhiBins = cms.untracked.vdouble(100, -0.5, 0.5),
    TriggerPathName = cms.untracked.string('HLT_Mu3')
)


process.hfv2 = cms.EDAnalyzer("HeavyFlavorValidation",
    MuonPtBins = cms.untracked.vdouble(0.5, 1.0, 2.0, 3.0, 4.0, 
        5.0, 7.0, 9.0, 20.0, 50.0),
    TriggerPathName = cms.untracked.string('HLT_IsoMu3'),
    GlobL2DeltaRMatchingCut = cms.untracked.double(0.3),
    MuonPhiBins = cms.untracked.vdouble(12, -3.15, 3.15),
    DimuonDRBins = cms.untracked.vdouble(10, 0.0, 1.0),
    DimuonEtaBins = cms.untracked.vdouble(16, -2.4, 2.4),
    TriggerProcessName = cms.untracked.string('HLT'),
    MuonEtaBins = cms.untracked.vdouble(24, -2.4, 2.4),
    TriggerSummaryRAW = cms.untracked.string('hltTriggerSummaryRAW'),
    DeltaEtaBins = cms.untracked.vdouble(100, -0.5, 0.5),
    RecoMuons = cms.InputTag("muons"),
    GlobL3DeltaRMatchingCut = cms.untracked.double(0.1),
    DimuonPtBins = cms.untracked.vdouble(0.0, 2.0, 4.0, 6.0, 8.0, 
        10.0, 15.0, 25.0, 50.0, 100.0),
    DQMFolder = cms.untracked.string('HLT/HeavyFlavor'),
    TriggerResults = cms.untracked.string('TriggerResults'),
    MotherIDs = cms.untracked.vint32(23, 443, 553, 0),
    GlobL1DeltaRMatchingCut = cms.untracked.double(0.3),
    GenParticles = cms.InputTag("genParticles"),
    GenGlobDeltaRMatchingCut = cms.untracked.double(0.1),
    DeltaPhiBins = cms.untracked.vdouble(100, -0.5, 0.5),
    TriggerSummaryAOD = cms.untracked.string('hltTriggerSummaryAOD')
)


process.hfv3 = cms.EDAnalyzer("HeavyFlavorValidation",
    MuonPtBins = cms.untracked.vdouble(0.5, 1.0, 2.0, 3.0, 4.0, 
        5.0, 7.0, 9.0, 20.0, 50.0),
    TriggerPathName = cms.untracked.string('HLT_Mu5'),
    GlobL2DeltaRMatchingCut = cms.untracked.double(0.3),
    MuonPhiBins = cms.untracked.vdouble(12, -3.15, 3.15),
    DimuonDRBins = cms.untracked.vdouble(10, 0.0, 1.0),
    DimuonEtaBins = cms.untracked.vdouble(16, -2.4, 2.4),
    TriggerProcessName = cms.untracked.string('HLT'),
    MuonEtaBins = cms.untracked.vdouble(24, -2.4, 2.4),
    TriggerSummaryRAW = cms.untracked.string('hltTriggerSummaryRAW'),
    DeltaEtaBins = cms.untracked.vdouble(100, -0.5, 0.5),
    RecoMuons = cms.InputTag("muons"),
    GlobL3DeltaRMatchingCut = cms.untracked.double(0.1),
    DimuonPtBins = cms.untracked.vdouble(0.0, 2.0, 4.0, 6.0, 8.0, 
        10.0, 15.0, 25.0, 50.0, 100.0),
    DQMFolder = cms.untracked.string('HLT/HeavyFlavor'),
    TriggerResults = cms.untracked.string('TriggerResults'),
    MotherIDs = cms.untracked.vint32(23, 443, 553, 0),
    GlobL1DeltaRMatchingCut = cms.untracked.double(0.3),
    GenParticles = cms.InputTag("genParticles"),
    GenGlobDeltaRMatchingCut = cms.untracked.double(0.1),
    DeltaPhiBins = cms.untracked.vdouble(100, -0.5, 0.5),
    TriggerSummaryAOD = cms.untracked.string('hltTriggerSummaryAOD')
)


process.hfv4 = cms.EDAnalyzer("HeavyFlavorValidation",
    MuonPtBins = cms.untracked.vdouble(0.5, 1.0, 2.0, 3.0, 4.0, 
        5.0, 7.0, 9.0, 20.0, 50.0),
    TriggerPathName = cms.untracked.string('HLT_Mu9'),
    GlobL2DeltaRMatchingCut = cms.untracked.double(0.3),
    MuonPhiBins = cms.untracked.vdouble(12, -3.15, 3.15),
    DimuonDRBins = cms.untracked.vdouble(10, 0.0, 1.0),
    DimuonEtaBins = cms.untracked.vdouble(16, -2.4, 2.4),
    TriggerProcessName = cms.untracked.string('HLT'),
    MuonEtaBins = cms.untracked.vdouble(24, -2.4, 2.4),
    TriggerSummaryRAW = cms.untracked.string('hltTriggerSummaryRAW'),
    DeltaEtaBins = cms.untracked.vdouble(100, -0.5, 0.5),
    RecoMuons = cms.InputTag("muons"),
    GlobL3DeltaRMatchingCut = cms.untracked.double(0.1),
    DimuonPtBins = cms.untracked.vdouble(0.0, 2.0, 4.0, 6.0, 8.0, 
        10.0, 15.0, 25.0, 50.0, 100.0),
    DQMFolder = cms.untracked.string('HLT/HeavyFlavor'),
    TriggerResults = cms.untracked.string('TriggerResults'),
    MotherIDs = cms.untracked.vint32(23, 443, 553, 0),
    GlobL1DeltaRMatchingCut = cms.untracked.double(0.3),
    GenParticles = cms.InputTag("genParticles"),
    GenGlobDeltaRMatchingCut = cms.untracked.double(0.1),
    DeltaPhiBins = cms.untracked.vdouble(100, -0.5, 0.5),
    TriggerSummaryAOD = cms.untracked.string('hltTriggerSummaryAOD')
)


process.hfv5 = cms.EDAnalyzer("HeavyFlavorValidation",
    MuonPtBins = cms.untracked.vdouble(0.5, 1.0, 2.0, 3.0, 4.0, 
        5.0, 7.0, 9.0, 20.0, 50.0),
    TriggerPathName = cms.untracked.string('HLT_DoubleMu0'),
    GlobL2DeltaRMatchingCut = cms.untracked.double(0.3),
    MuonPhiBins = cms.untracked.vdouble(12, -3.15, 3.15),
    DimuonDRBins = cms.untracked.vdouble(10, 0.0, 1.0),
    DimuonEtaBins = cms.untracked.vdouble(16, -2.4, 2.4),
    TriggerProcessName = cms.untracked.string('HLT'),
    MuonEtaBins = cms.untracked.vdouble(24, -2.4, 2.4),
    TriggerSummaryRAW = cms.untracked.string('hltTriggerSummaryRAW'),
    DeltaEtaBins = cms.untracked.vdouble(100, -0.5, 0.5),
    RecoMuons = cms.InputTag("muons"),
    GlobL3DeltaRMatchingCut = cms.untracked.double(0.1),
    DimuonPtBins = cms.untracked.vdouble(0.0, 2.0, 4.0, 6.0, 8.0, 
        10.0, 15.0, 25.0, 50.0, 100.0),
    DQMFolder = cms.untracked.string('HLT/HeavyFlavor'),
    TriggerResults = cms.untracked.string('TriggerResults'),
    MotherIDs = cms.untracked.vint32(23, 443, 553, 0),
    GlobL1DeltaRMatchingCut = cms.untracked.double(0.3),
    GenParticles = cms.InputTag("genParticles"),
    GenGlobDeltaRMatchingCut = cms.untracked.double(0.1),
    DeltaPhiBins = cms.untracked.vdouble(100, -0.5, 0.5),
    TriggerSummaryAOD = cms.untracked.string('hltTriggerSummaryAOD')
)


process.hfv6 = cms.EDAnalyzer("HeavyFlavorValidation",
    MuonPtBins = cms.untracked.vdouble(0.5, 1.0, 2.0, 3.0, 4.0, 
        5.0, 7.0, 9.0, 20.0, 50.0),
    TriggerPathName = cms.untracked.string('HLT_DoubleMu3'),
    GlobL2DeltaRMatchingCut = cms.untracked.double(0.3),
    MuonPhiBins = cms.untracked.vdouble(12, -3.15, 3.15),
    DimuonDRBins = cms.untracked.vdouble(10, 0.0, 1.0),
    DimuonEtaBins = cms.untracked.vdouble(16, -2.4, 2.4),
    TriggerProcessName = cms.untracked.string('HLT'),
    MuonEtaBins = cms.untracked.vdouble(24, -2.4, 2.4),
    TriggerSummaryRAW = cms.untracked.string('hltTriggerSummaryRAW'),
    DeltaEtaBins = cms.untracked.vdouble(100, -0.5, 0.5),
    RecoMuons = cms.InputTag("muons"),
    GlobL3DeltaRMatchingCut = cms.untracked.double(0.1),
    DimuonPtBins = cms.untracked.vdouble(0.0, 2.0, 4.0, 6.0, 8.0, 
        10.0, 15.0, 25.0, 50.0, 100.0),
    DQMFolder = cms.untracked.string('HLT/HeavyFlavor'),
    TriggerResults = cms.untracked.string('TriggerResults'),
    MotherIDs = cms.untracked.vint32(23, 443, 553, 0),
    GlobL1DeltaRMatchingCut = cms.untracked.double(0.3),
    GenParticles = cms.InputTag("genParticles"),
    GenGlobDeltaRMatchingCut = cms.untracked.double(0.1),
    DeltaPhiBins = cms.untracked.vdouble(100, -0.5, 0.5),
    TriggerSummaryAOD = cms.untracked.string('hltTriggerSummaryAOD')
)


process.hltHiggsPostH2tau = cms.EDAnalyzer("DQMGenericClient",
    commands = cms.vstring(''),
    verbose = cms.untracked.uint32(0),
    subDirs = cms.untracked.vstring('HLT/Higgs/H2tau'),
    outputFileName = cms.untracked.string(''),
    efficiency = cms.vstring("EffVsPt_HLT_Mu3                                \'HLT_Mu3                           ; p_{T #mu};        Trigger_Efficiency\'  Muon1Pt_HLT_Mu3                                Muon1Pt", 
        "EffVsEta_HLT_Mu3                               \'HLT_Mu3                           ; #eta_{#mu};       Trigger_Efficiency\'  Muon1Eta_HLT_Mu3                               Muon1Eta", 
        "EffVsPt_HLT_Mu9                                \'HLT_Mu9                           ; p_{T #mu};        Trigger_Efficiency\'  Muon1Pt_HLT_Mu9                                Muon1Pt", 
        "EffVsEta_HLT_Mu9                               \'HLT_Mu9                           ; #eta_{#mu};       Trigger_Efficiency\'  Muon1Eta_HLT_Mu9                               Muon1Eta", 
        "EffVsPt_HLT_Mu15                                \'HLT_Mu15                           ; p_{T #mu};        Trigger_Efficiency\'  Muon1Pt_HLT_Mu15                                Muon1Pt", 
        "EffVsEta_HLT_Mu15                               \'HLT_Mu15                           ; #eta_{#mu};       Trigger_Efficiency\'  Muon1Eta_HLT_Mu15                               Muon1Eta", 
        "EffVsPt_HLT_Ele10_LW_L1R                       \'HLT_Ele10_LW_L1R                  ; p_{T e};          Trigger_Efficiency\'  Electron1Pt_HLT_Ele10_LW_L1R                   Electron1Pt", 
        "EffVsEta_HLT_Ele10_LW_L1R                      \'HLT_Ele10_LW_L1R                  ; #eta_{e};         Trigger_Efficiency\'  Electron1Eta_HLT_Ele10_LW_L1R                  Electron1Eta", 
        "EffVsPt_HLT_Ele15_SW_L1R                       \'HLT_Ele15_SW_L1R                  ; p_{T e};          Trigger_Efficiency\'  Electron1Pt_HLT_Ele15_SW_L1R                   Electron1Pt", 
        "EffVsEta_HLT_Ele15_SW_L1R                      \'HLT_Ele15_SW_L1R                  ; #eta_{e};         Trigger_Efficiency\'  Electron1Eta_HLT_Ele15_SW_L1R                  Electron1Eta", 
        "EffVsPt_HLT_Ele15_SW_LooseTrackIso_L1R                       \'HLT_Ele15_SW_LooseTrackIso_L1R                  ; p_{T e};          Trigger_Efficiency\'  Electron1Pt_HLT_Ele15_SW_LooseTrackIso_L1R                   Electron1Pt", 
        "EffVsEta_HLT_Ele15_SW_LooseTrackIso_L1R                      \'HLT_Ele15_SW_LooseTrackIso_L1R                  ; #eta_{e};         Trigger_Efficiency\'  Electron1Eta_HLT_Ele15_SW_LooseTrackIso_L1R                  Electron1Eta", 
        "Efficiencies_MuonTriggers                 \'HLT efficiency wrt MC selection        ;  ;       Trigger Efficiency\'      muHLT   MuonEvents", 
        "Efficiencies_ElectronTriggers             \'HLT efficiency wrt MC selection       ; ;         Trigger Efficiency\'  elHLT   ElectronEvents"),
    resolution = cms.vstring('')
)


process.hltHiggsPostHWW = cms.EDAnalyzer("DQMGenericClient",
    commands = cms.vstring(''),
    verbose = cms.untracked.uint32(0),
    subDirs = cms.untracked.vstring('HLT/Higgs/HWW'),
    outputFileName = cms.untracked.string(''),
    efficiency = cms.vstring("EffVsPt_HLT_Mu3                                \'HLT_Mu3                           ; p_{T #mu};        Trigger_Efficiency\'  Muon1Pt_HLT_Mu3                                Muon1Pt", 
        "EffVsEta_HLT_Mu3                               \'HLT_Mu3                           ; #eta_{#mu};       Trigger_Efficiency\'  Muon1Eta_HLT_Mu3                               Muon1Eta", 
        "EffVsPt_HLT_Mu9                                \'HLT_Mu9                           ; p_{T #mu};        Trigger_Efficiency\'  Muon1Pt_HLT_Mu9                                Muon1Pt", 
        "EffVsEta_HLT_Mu9                               \'HLT_Mu9                           ; #eta_{#mu};       Trigger_Efficiency\'  Muon1Eta_HLT_Mu9                               Muon1Eta", 
        "EffVsPt_HLT_Mu15                                \'HLT_Mu15                           ; p_{T #mu};        Trigger_Efficiency\'  Muon1Pt_HLT_Mu15                                Muon1Pt", 
        "EffVsEta_HLT_Mu15                               \'HLT_Mu15                           ; #eta_{#mu};       Trigger_Efficiency\'  Muon1Eta_HLT_Mu15                               Muon1Eta", 
        "EffVsPt_HLT_Ele10_LW_L1R                       \'HLT_Ele10_LW_L1R                  ; p_{T e};          Trigger_Efficiency\'  Electron1Pt_HLT_Ele10_LW_L1R                   Electron1Pt", 
        "EffVsEta_HLT_Ele10_LW_L1R                      \'HLT_Ele10_LW_L1R                  ; #eta_{e};         Trigger_Efficiency\'  Electron1Eta_HLT_Ele10_LW_L1R                  Electron1Eta", 
        "EffVsPt_HLT_Ele15_SW_L1R                       \'HLT_Ele15_SW_L1R                  ; p_{T e};          Trigger_Efficiency\'  Electron1Pt_HLT_Ele15_SW_L1R                   Electron1Pt", 
        "EffVsEta_HLT_Ele15_SW_L1R                      \'HLT_Ele15_SW_L1R                  ; #eta_{e};         Trigger_Efficiency\'  Electron1Eta_HLT_Ele15_SW_L1R                  Electron1Eta", 
        "EffVsPt_HLT_Ele15_SW_LooseTrackIso_L1R                       \'HLT_Ele15_SW_LooseTrackIso_L1R                  ; p_{T e};          Trigger_Efficiency\'  Electron1Pt_HLT_Ele15_SW_LooseTrackIso_L1R                   Electron1Pt", 
        "EffVsEta_HLT_Ele15_SW_LooseTrackIso_L1R                      \'HLT_Ele15_SW_LooseTrackIso_L1R                  ; #eta_{e};         Trigger_Efficiency\'  Electron1Eta_HLT_Ele15_SW_LooseTrackIso_L1R                  Electron1Eta", 
        "EffVsPt_HLT_Mu3_EM                                \'HLT_Mu3                           ; p_{T #mu};        Trigger_Efficiency\'  Muon1Pt_EM_HLT_Mu3                                Muon1Pt_EM", 
        "EffVsEta_HLT_Mu3_EM                               \'HLT_Mu3                           ; #eta_{#mu};       Trigger_Efficiency\'  Muon1Eta_EM_HLT_Mu3                               Muon1Eta_EM", 
        "EffVsPt_HLT_Mu9_EM                                \'HLT_Mu9                           ; p_{T #mu};        Trigger_Efficiency\'  Muon1Pt_EM_HLT_Mu9                                Muon1Pt_EM", 
        "EffVsEta_HLT_Mu9_EM                               \'HLT_Mu9                           ; #eta_{#mu};       Trigger_Efficiency\'  Muon1Eta_EM_HLT_Mu9                               Muon1Eta_EM", 
        "EffVsPt_HLT_Mu15_EM                                \'HLT_Mu15                           ; p_{T #mu};        Trigger_Efficiency\'  Muon1Pt_EM_HLT_Mu15                                Muon1Pt_EM", 
        "EffVsEta_HLT_Mu15_EM                               \'HLT_Mu15                           ; #eta_{#mu};       Trigger_Efficiency\'  Muon1Eta_EM_HLT_Mu15                               Muon1Eta_EM", 
        "EffVsPt_HLT_Ele10_LW_L1R_EM                       \'HLT_Ele10_LW_L1R                  ; p_{T e};          Trigger_Efficiency\'  Electron1Pt_EM_HLT_Ele10_LW_L1R                   Electron1Pt_EM", 
        "EffVsEta_HLT_Ele10_LW_L1R_EM                      \'HLT_Ele10_LW_L1R                  ; #eta_{e};         Trigger_Efficiency\'  Electron1Eta_EM_HLT_Ele10_LW_L1R                  Electron1Eta_EM", 
        "EffVsPt_HLT_Ele15_SW_L1R_EM                       \'HLT_Ele15_SW_L1R                  ; p_{T e};          Trigger_Efficiency\'  Electron1Pt_EM_HLT_Ele15_SW_L1R                   Electron1Pt_EM", 
        "EffVsEta_HLT_Ele15_SW_L1R_EM                      \'HLT_Ele15_SW_L1R                  ; #eta_{e};         Trigger_Efficiency\'  Electron1Eta_EM_HLT_Ele15_SW_L1R                  Electron1Eta_EM", 
        "EffVsPt_HLT_Ele15_SW_LooseTrackIso_L1R_EM                       \'HLT_Ele15_SW_LooseTrackIso_L1R                  ; p_{T e};          Trigger_Efficiency\'  Electron1Pt_EM_HLT_Ele15_SW_LooseTrackIso_L1R                   Electron1Pt_EM", 
        "EffVsEta_HLT_Ele15_SW_LooseTrackIso_L1R_EM                      \'HLT_Ele15_SW_LooseTrackIso_L1R                  ; #eta_{e};         Trigger_Efficiency\'  Electron1Eta_EM_HLT_Ele15_SW_LooseTrackIso_L1R                  Electron1Eta_EM", 
        "Efficiencies_MuonTriggers                 \'HLT efficiency wrt reco selection        ;  ;       Trigger Efficiency\'      muHLT   MuonEvents", 
        "Efficiencies_ElectronTriggers             \'HLT efficiency wrt reco selection       ; ;         Trigger Efficiency\'  elHLT   ElectronEvents", 
        "TriggerEfficiencies_EmuChannel            \'HLT efficiency wrt reco selection       ; ;         Trigger Efficiency\'  emuHLT   EmuEvents"),
    resolution = cms.vstring('')
)


process.hltHiggsPostHZZ = cms.EDAnalyzer("DQMGenericClient",
    commands = cms.vstring(''),
    verbose = cms.untracked.uint32(0),
    subDirs = cms.untracked.vstring('HLT/Higgs/HZZ'),
    outputFileName = cms.untracked.string(''),
    efficiency = cms.vstring("EffVsPt_HLT_Mu3                                \'HLT_Mu3                           ; p_{T #mu};        Trigger_Efficiency\'  Muon1Pt_HLT_Mu3                                Muon1Pt", 
        "EffVsEta_HLT_Mu3                               \'HLT_Mu3                           ; #eta_{#mu};       Trigger_Efficiency\'  Muon1Eta_HLT_Mu3                               Muon1Eta", 
        "EffVsPt_HLT_Mu9                                \'HLT_Mu9                           ; p_{T #mu};        Trigger_Efficiency\'  Muon1Pt_HLT_Mu9                                Muon1Pt", 
        "EffVsEta_HLT_Mu9                               \'HLT_Mu9                           ; #eta_{#mu};       Trigger_Efficiency\'  Muon1Eta_HLT_Mu9                               Muon1Eta", 
        "EffVsPt_HLT_Mu15                                \'HLT_Mu15                           ; p_{T #mu};        Trigger_Efficiency\'  Muon1Pt_HLT_Mu15                                Muon1Pt", 
        "EffVsEta_HLT_Mu15                               \'HLT_Mu15                           ; #eta_{#mu};       Trigger_Efficiency\'  Muon1Eta_HLT_Mu15                               Muon1Eta", 
        "EffVsPt_HLT_Ele10_LW_L1R                       \'HLT_Ele10_LW_L1R                  ; p_{T e};          Trigger_Efficiency\'  Electron1Pt_HLT_Ele10_LW_L1R                   Electron1Pt", 
        "EffVsEta_HLT_Ele10_LW_L1R                      \'HLT_Ele10_LW_L1R                  ; #eta_{e};         Trigger_Efficiency\'  Electron1Eta_HLT_Ele10_LW_L1R                  Electron1Eta", 
        "EffVsPt_HLT_Ele15_SW_L1R                       \'HLT_Ele15_SW_L1R                  ; p_{T e};          Trigger_Efficiency\'  Electron1Pt_HLT_Ele15_SW_L1R                   Electron1Pt", 
        "EffVsEta_HLT_Ele15_SW_L1R                      \'HLT_Ele15_SW_L1R                  ; #eta_{e};         Trigger_Efficiency\'  Electron1Eta_HLT_Ele15_SW_L1R                  Electron1Eta", 
        "EffVsPt_HLT_Ele15_SW_LooseTrackIso_L1R                       \'HLT_Ele15_SW_LooseTrackIso_L1R                  ; p_{T e};          Trigger_Efficiency\'  Electron1Pt_HLT_Ele15_SW_LooseTrackIso_L1R                   Electron1Pt", 
        "EffVsEta_HLT_Ele15_SW_LooseTrackIso_L1R                      \'HLT_Ele15_SW_LooseTrackIso_L1R                  ; #eta_{e};         Trigger_Efficiency\'  Electron1Eta_HLT_Ele15_SW_LooseTrackIso_L1R                  Electron1Eta", 
        "EffVsPt_HLT_Mu3_EM                                \'HLT_Mu3                           ; p_{T #mu};        Trigger_Efficiency\'  Muon1Pt_EM_HLT_Mu3                                Muon1Pt_EM", 
        "EffVsEta_HLT_Mu3_EM                               \'HLT_Mu3                           ; #eta_{#mu};       Trigger_Efficiency\'  Muon1Eta_EM_HLT_Mu3                               Muon1Eta_EM", 
        "EffVsPt_HLT_Mu9_EM                                \'HLT_Mu9                           ; p_{T #mu};        Trigger_Efficiency\'  Muon1Pt_EM_HLT_Mu9                                Muon1Pt_EM", 
        "EffVsEta_HLT_Mu9_EM                               \'HLT_Mu9                           ; #eta_{#mu};       Trigger_Efficiency\'  Muon1Eta_EM_HLT_Mu9                               Muon1Eta_EM", 
        "EffVsPt_HLT_Mu15_EM                                \'HLT_Mu15                           ; p_{T #mu};        Trigger_Efficiency\'  Muon1Pt_EM_HLT_Mu15                                Muon1Pt_EM", 
        "EffVsEta_HLT_Mu15_EM                               \'HLT_Mu15                           ; #eta_{#mu};       Trigger_Efficiency\'  Muon1Eta_EM_HLT_Mu15                               Muon1Eta_EM", 
        "EffVsPt_HLT_Ele10_LW_L1R_EM                       \'HLT_Ele10_LW_L1R                  ; p_{T e};          Trigger_Efficiency\'  Electron1Pt_EM_HLT_Ele10_LW_L1R                   Electron1Pt_EM", 
        "EffVsEta_HLT_Ele10_LW_L1R_EM                      \'HLT_Ele10_LW_L1R                  ; #eta_{e};         Trigger_Efficiency\'  Electron1Eta_EM_HLT_Ele10_LW_L1R                  Electron1Eta_EM", 
        "EffVsPt_HLT_Ele15_SW_L1R_EM                       \'HLT_Ele15_SW_L1R                  ; p_{T e};          Trigger_Efficiency\'  Electron1Pt_EM_HLT_Ele15_SW_L1R                   Electron1Pt_EM", 
        "EffVsEta_HLT_Ele15_SW_L1R_EM                      \'HLT_Ele15_SW_L1R                  ; #eta_{e};         Trigger_Efficiency\'  Electron1Eta_EM_HLT_Ele15_SW_L1R                  Electron1Eta_EM", 
        "EffVsPt_HLT_Ele15_SW_LooseTrackIso_L1R_EM                       \'HLT_Ele15_SW_LooseTrackIso_L1R                  ; p_{T e};          Trigger_Efficiency\'  Electron1Pt_EM_HLT_Ele15_SW_LooseTrackIso_L1R                   Electron1Pt_EM", 
        "EffVsEta_HLT_Ele15_SW_LooseTrackIso_L1R_EM                      \'HLT_Ele15_SW_LooseTrackIso_L1R                  ; #eta_{e};         Trigger_Efficiency\'  Electron1Eta_EM_HLT_Ele15_SW_LooseTrackIso_L1R                  Electron1Eta_EM", 
        "Efficiencies_MuonTriggers                 \'HLT efficiency wrt reco selection        ;  ;       Trigger Efficiency\'      muHLT   MuonEvents", 
        "Efficiencies_ElectronTriggers             \'HLT efficiency wrt reco selection       ; ;         Trigger Efficiency\'  elHLT   ElectronEvents", 
        "TriggerEfficiencies_EmuChannel            \'HLT efficiency wrt reco selection       ; ;         Trigger Efficiency\'  emuHLT   EmuEvents"),
    resolution = cms.vstring('')
)


process.hltHiggsPostHgg = cms.EDAnalyzer("DQMGenericClient",
    commands = cms.vstring(''),
    verbose = cms.untracked.uint32(0),
    subDirs = cms.untracked.vstring('HLT/Higgs/Hgg'),
    outputFileName = cms.untracked.string(''),
    efficiency = cms.vstring("EffVsPt_HLT_Photon15_L1R                                \'HLT_Photon15_L1R                           ; p_{T #gamma};        Trigger_Efficiency\'  Photon1Pt_HLT_Photon15_L1R                                Photon1Pt", 
        "EffVsEta_HLT_Photon15_L1R                               \'HLT_Photon15_L1R                           ; #eta_{#gamma};       Trigger_Efficiency\'  Photon1Eta_HLT_Photon15_L1R                               Photon1Eta", 
        "EffVsPt_HLT_Photon15_TrackIso_L1R                                \'HLT_Photon15_TrackIso_L1R                           ; p_{T #gamma};        Trigger_Efficiency\'  Photon1Pt_HLT_Photon15_TrackIso_L1R                                Photon1Pt", 
        "EffVsEta_HLT_Photon15_TrackIso_L1R                               \'HLT_Photon15_TrackIso_L1R                           ; #eta_{#gamma};       Trigger_Efficiency\'  Photon1Eta_HLT_Photon15_TrackIso_L1R                               Photon1Eta", 
        "EffVsPt_HLT_DoublePhoton10_L1R                                \'HLT_DoublePhoton10_L1R                           ; p_{T #gamma};        Trigger_Efficiency\'  Photon1Pt_HLT_DoublePhoton10_L1R                                Photon1Pt", 
        "EffVsEta_HLT_DoublePhoton10_L1R                               \'HLT_DoublePhoton10_L1R                           ; #eta_{#gamma};       Trigger_Efficiency\'  Photon1Eta_HLT_DoublePhoton10_L1R                               Photon1Eta", 
        "Efficiencies_PhotonTriggers                      \'HLT efficiency wrt reco selection       ;  ;              Trigger Efficiency\'  phHLT   PhotonEvents"),
    resolution = cms.vstring('')
)


process.hltHiggsPostHtaunu = cms.EDAnalyzer("DQMGenericClient",
    commands = cms.vstring(''),
    verbose = cms.untracked.uint32(0),
    subDirs = cms.untracked.vstring('HLT/Higgs/Htaunu'),
    outputFileName = cms.untracked.string(''),
    efficiency = cms.vstring("Efficiencies_TauTriggers                 \'HLT efficiency wrt MC selection        ;  ;       Trigger Efficiency\'      tauHLT   tauEvents"),
    resolution = cms.vstring('')
)


process.hltHiggsQualityTester = cms.EDAnalyzer("QualityTester",
    prescaleFactor = cms.untracked.int32(1),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('HLTriggerOffline/Higgs/data/HLTHiggsQualityTest.xml'),
    qtestOnEndJob = cms.untracked.bool(True),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(False),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.hltJetMetQualityTester = cms.EDAnalyzer("QualityTester",
    prescaleFactor = cms.untracked.int32(1),
    qtestOnEndRun = cms.untracked.bool(True),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('HLTriggerOffline/JetMET/data/QualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(False),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.hltMonMuBits = cms.EDAnalyzer("HLTMonBitSummary",
    HLTPaths = cms.vstring('HLT_L1Mu[^_]*$', 
        'HLT_L2Mu[^_]*$', 
        'HLT_Mu[^_]*$', 
        'HLT_IsoMu[^_]*$', 
        'HLT_DoubleMu[^_]*$'),
    histLabel = cms.untracked.string('Muon'),
    filterTypes = cms.untracked.vstring('HLTLevel1GTSeed', 
        'HLTPrescaler', 
        'HLTMuonL1Filter', 
        'HLTMuonL2PreFilter', 
        'HLTMuonDimuonL2Filter', 
        'HLTMuonL3PreFilter', 
        'HLTMuonDimuonL3Filter', 
        'HLTMuonIsoFilter'),
    denominator = cms.untracked.string('HLT_L1MuOpen'),
    denominatorWild = cms.untracked.string('HLT_L1Mu[^_]*$'),
    directory = cms.untracked.string('HLT/HLTMonMuon/Summary/'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.hltMuonPostIso = cms.EDAnalyzer("DQMGenericClient",
    verbose = cms.untracked.uint32(0),
    efficiencyProfile = cms.untracked.vstring("genTurnOn1_Total \'pT Turn-On for Full Path; p_{T} of Leading Generated Muon (GeV); # Gen #mu Matched to L3Iso / # Gen #mu\' genPassMaxPt1_L3Iso genPassMaxPt1_All", 
        "genTurnOn2_Total \'Next-to-Leading pT Turn-On for Full Path; p_{T} of Next-to-Leading Generated Muon (GeV); # Gen #mu Matched to L3Iso / # Gen #mu\' genPassMaxPt2_L3Iso genPassMaxPt2_All", 
        "genEffEta_Total \'#eta Efficiency for Full Path; #eta of Generated Muon (GeV); # Gen #mu Matched to L3Iso / # Gen #mu\' genPassEta_L3Iso genPassEta_All", 
        "genEffPhi_Total \'#phi Efficiency for Full Path; #phi of Generated Muon (GeV); # Gen #mu Matched to L3Iso / # Gen #mu\' genPassPhi_L3Iso genPassPhi_All", 
        "recTurnOn1_Total \'pT Turn-On for Full Path; p_{T} of Leading Reconstructed Muon (GeV); # Reco #mu Matched to L3Iso / # Reco #mu\' recPassMaxPt1_L3Iso recPassMaxPt1_All", 
        "recTurnOn2_Total \'Next-to-Leading pT Turn-On for Full Path; p_{T} of Next-to-Leading Reconstructed Muon (GeV); # Reco #mu Matched to L3Iso / # Reco #mu\' recPassMaxPt2_L3Iso recPassMaxPt2_All", 
        "recEffEta_Total \'#eta Efficiency for Full Path; #eta of Reconstructed Muon (GeV); # Reco #mu Matched to L3Iso / # Reco #mu\' recPassEta_L3Iso recPassEta_All", 
        "recEffPhi_Total \'#phi Efficiency for Full Path; #phi of Reconstructed Muon (GeV); # Reco #mu Matched to L3Iso / # Reco #mu\' recPassPhi_L3Iso recPassPhi_All"),
    subDirs = cms.untracked.vstring('HLT/Muon/Distributions/.*Iso.*'),
    outputFileName = cms.untracked.string(''),
    efficiency = cms.vstring(),
    resolution = cms.vstring()
)


process.hltMuonPostMain = cms.EDAnalyzer("DQMGenericClient",
    verbose = cms.untracked.uint32(0),
    efficiencyProfile = cms.untracked.vstring("genTurnOn1_L1 \'pT Turn-On for L1; p_{T} of Leading Generated Muon (GeV); # Gen #mu Matched to L1 / # Gen #mu\' genPassMaxPt1_L1 genPassMaxPt1_All", 
        "genTurnOn1_L2 \'pT Turn-On for L2; p_{T} of Leading Generated Muon (GeV); # Gen #mu Matched to L2 / # Gen #mu Matched to L1\' genPassMaxPt1_L2 genPassMaxPt1_L1", 
        "genTurnOn1_L2Iso \'pT Turn-On for L2Iso; p_{T} of Leading Generated Muon (GeV); # Gen #mu Matched to L2Iso / # Gen #mu Matched to L1\' genPassMaxPt1_L2Iso genPassMaxPt1_L1", 
        "genTurnOn1_L3 \'pT Turn-On for L3; p_{T} of Leading Generated Muon (GeV); # Gen #mu Matched to L3 / # Gen #mu Matched to L1\' genPassMaxPt1_L3 genPassMaxPt1_L1", 
        "genTurnOn1_L3Iso \'pT Turn-On for L3Iso; p_{T} of Leading Generated Muon (GeV); # Gen #mu Matched to L3Iso / # Gen #mu Matched to L1\' genPassMaxPt1_L3Iso genPassMaxPt1_L1", 
        "genTurnOn2_L1 \'Next-to-Leading pT Turn-On for L1; p_{T} of Next-to-Leading Generated Muon (GeV); # Gen #mu Matched to L1 / # Gen #mu\' genPassMaxPt2_L1 genPassMaxPt2_All", 
        "genTurnOn2_L2 \'Next-to-Leading pT Turn-On for L2; p_{T} of Next-to-Leading Generated Muon (GeV); # Gen #mu Matched to L2 / # Gen #mu Matched to L1\' genPassMaxPt2_L2 genPassMaxPt2_L1", 
        "genTurnOn2_L2Iso \'Next-to-Leading pT Turn-On for L2Iso; p_{T} of Next-to-Leading Generated Muon (GeV); # Gen #mu Matched to L2Iso / # Gen #mu Matched to L1\' genPassMaxPt2_L2Iso genPassMaxPt2_L1", 
        "genTurnOn2_L3 \'Next-to-Leading pT Turn-On for L3; p_{T} of Next-to-Leading Generated Muon (GeV); # Gen #mu Matched to L3 / # Gen #mu Matched to L1\' genPassMaxPt2_L3 genPassMaxPt2_L1", 
        "genTurnOn2_L3Iso \'Next-to-Leading pT Turn-On for L3Iso; p_{T} of Next-to-Leading Generated Muon (GeV); # Gen #mu Matched to L3Iso / # Gen #mu Matched to L1\' genPassMaxPt2_L3Iso genPassMaxPt2_L1", 
        "genEffEta_L1 \'#eta Efficiency for L1; #eta of Generated Muon (GeV); # Gen #mu Matched to L1 / # Gen #mu\' genPassEta_L1 genPassEta_All", 
        "genEffEta_L2 \'#eta Efficiency for L2; #eta of Generated Muon (GeV); # Gen #mu Matched to L2 / # Gen #mu Matched to L1\' genPassEta_L2 genPassEta_L1", 
        "genEffEta_L2Iso \'#eta Efficiency for L2Iso; #eta of Generated Muon (GeV); # Gen #mu Matched to L2Iso / # Gen #mu Matched to L1\' genPassEta_L2Iso genPassEta_L1", 
        "genEffEta_L3 \'#eta Efficiency for L3; #eta of Generated Muon (GeV); # Gen #mu Matched to L3 / # Gen #mu Matched to L1\' genPassEta_L3 genPassEta_L1", 
        "genEffEta_L3Iso \'#eta Efficiency for L3Iso; #eta of Generated Muon (GeV); # Gen #mu Matched to L3Iso / # Gen #mu Matched to L1\' genPassEta_L3Iso genPassEta_L1", 
        "genEffPhi_L1 \'#phi Efficiency for L1; #phi of Generated Muon (GeV); # Gen #mu Matched to L1 / # Gen #mu\' genPassPhi_L1 genPassPhi_All", 
        "genEffPhi_L2 \'#phi Efficiency for L2; #phi of Generated Muon (GeV); # Gen #mu Matched to L2 / # Gen #mu Matched to L1\' genPassPhi_L2 genPassPhi_L1", 
        "genEffPhi_L2Iso \'#phi Efficiency for L2Iso; #phi of Generated Muon (GeV); # Gen #mu Matched to L2Iso / # Gen #mu Matched to L1\' genPassPhi_L2Iso genPassPhi_L1", 
        "genEffPhi_L3 \'#phi Efficiency for L3; #phi of Generated Muon (GeV); # Gen #mu Matched to L3 / # Gen #mu Matched to L1\' genPassPhi_L3 genPassPhi_L1", 
        "genEffPhi_L3Iso \'#phi Efficiency for L3Iso; #phi of Generated Muon (GeV); # Gen #mu Matched to L3Iso / # Gen #mu Matched to L1\' genPassPhi_L3Iso genPassPhi_L1", 
        "recTurnOn1_L1 \'pT Turn-On for L1; p_{T} of Leading Reconstructed Muon (GeV); # Reco #mu Matched to L1 / # Reco #mu\' recPassMaxPt1_L1 recPassMaxPt1_All", 
        "recTurnOn1_L2 \'pT Turn-On for L2; p_{T} of Leading Reconstructed Muon (GeV); # Reco #mu Matched to L2 / # Reco #mu Matched to L1\' recPassMaxPt1_L2 recPassMaxPt1_L1", 
        "recTurnOn1_L2Iso \'pT Turn-On for L2Iso; p_{T} of Leading Reconstructed Muon (GeV); # Reco #mu Matched to L2Iso / # Reco #mu Matched to L1\' recPassMaxPt1_L2Iso recPassMaxPt1_L1", 
        "recTurnOn1_L3 \'pT Turn-On for L3; p_{T} of Leading Reconstructed Muon (GeV); # Reco #mu Matched to L3 / # Reco #mu Matched to L1\' recPassMaxPt1_L3 recPassMaxPt1_L1", 
        "recTurnOn1_L3Iso \'pT Turn-On for L3Iso; p_{T} of Leading Reconstructed Muon (GeV); # Reco #mu Matched to L3Iso / # Reco #mu Matched to L1\' recPassMaxPt1_L3Iso recPassMaxPt1_L1", 
        "recTurnOn2_L1 \'Next-to-Leading pT Turn-On for L1; p_{T} of Next-to-Leading Reconstructed Muon (GeV); # Reco #mu Matched to L1 / # Reco #mu\' recPassMaxPt2_L1 recPassMaxPt2_All", 
        "recTurnOn2_L2 \'Next-to-Leading pT Turn-On for L2; p_{T} of Next-to-Leading Reconstructed Muon (GeV); # Reco #mu Matched to L2 / # Reco #mu Matched to L1\' recPassMaxPt2_L2 recPassMaxPt2_L1", 
        "recTurnOn2_L2Iso \'Next-to-Leading pT Turn-On for L2Iso; p_{T} of Next-to-Leading Reconstructed Muon (GeV); # Reco #mu Matched to L2Iso / # Reco #mu Matched to L1\' recPassMaxPt2_L2Iso recPassMaxPt2_L1", 
        "recTurnOn2_L3 \'Next-to-Leading pT Turn-On for L3; p_{T} of Next-to-Leading Reconstructed Muon (GeV); # Reco #mu Matched to L3 / # Reco #mu Matched to L1\' recPassMaxPt2_L3 recPassMaxPt2_L1", 
        "recTurnOn2_L3Iso \'Next-to-Leading pT Turn-On for L3Iso; p_{T} of Next-to-Leading Reconstructed Muon (GeV); # Reco #mu Matched to L3Iso / # Reco #mu Matched to L1\' recPassMaxPt2_L3Iso recPassMaxPt2_L1", 
        "recEffEta_L1 \'#eta Efficiency for L1; #eta of Reconstructed Muon (GeV); # Reco #mu Matched to L1 / # Reco #mu\' recPassEta_L1 recPassEta_All", 
        "recEffEta_L2 \'#eta Efficiency for L2; #eta of Reconstructed Muon (GeV); # Reco #mu Matched to L2 / # Reco #mu Matched to L1\' recPassEta_L2 recPassEta_L1", 
        "recEffEta_L2Iso \'#eta Efficiency for L2Iso; #eta of Reconstructed Muon (GeV); # Reco #mu Matched to L2Iso / # Reco #mu Matched to L1\' recPassEta_L2Iso recPassEta_L1", 
        "recEffEta_L3 \'#eta Efficiency for L3; #eta of Reconstructed Muon (GeV); # Reco #mu Matched to L3 / # Reco #mu Matched to L1\' recPassEta_L3 recPassEta_L1", 
        "recEffEta_L3Iso \'#eta Efficiency for L3Iso; #eta of Reconstructed Muon (GeV); # Reco #mu Matched to L3Iso / # Reco #mu Matched to L1\' recPassEta_L3Iso recPassEta_L1", 
        "recEffPhi_L1 \'#phi Efficiency for L1; #phi of Reconstructed Muon (GeV); # Reco #mu Matched to L1 / # Reco #mu\' recPassPhi_L1 recPassPhi_All", 
        "recEffPhi_L2 \'#phi Efficiency for L2; #phi of Reconstructed Muon (GeV); # Reco #mu Matched to L2 / # Reco #mu Matched to L1\' recPassPhi_L2 recPassPhi_L1", 
        "recEffPhi_L2Iso \'#phi Efficiency for L2Iso; #phi of Reconstructed Muon (GeV); # Reco #mu Matched to L2Iso / # Reco #mu Matched to L1\' recPassPhi_L2Iso recPassPhi_L1", 
        "recEffPhi_L3 \'#phi Efficiency for L3; #phi of Reconstructed Muon (GeV); # Reco #mu Matched to L3 / # Reco #mu Matched to L1\' recPassPhi_L3 recPassPhi_L1", 
        "recEffPhi_L3Iso \'#phi Efficiency for L3Iso; #phi of Reconstructed Muon (GeV); # Reco #mu Matched to L3Iso / # Reco #mu Matched to L1\' recPassPhi_L3Iso recPassPhi_L1"),
    subDirs = cms.untracked.vstring('HLT/Muon/Distributions/*'),
    outputFileName = cms.untracked.string(''),
    efficiency = cms.vstring(),
    resolution = cms.vstring()
)


process.hltMuonPostNonIso = cms.EDAnalyzer("DQMGenericClient",
    verbose = cms.untracked.uint32(0),
    efficiencyProfile = cms.untracked.vstring("genTurnOn1_Total \'pT Turn-On for Full Path; p_{T} of Leading Generated Muon (GeV); # Gen #mu Matched to L3 / # Gen #mu\' genPassMaxPt1_L3 genPassMaxPt1_All", 
        "genTurnOn2_Total \'Next-to-Leading pT Turn-On for Full Path; p_{T} of Next-to-Leading Generated Muon (GeV); # Gen #mu Matched to L3 / # Gen #mu\' genPassMaxPt2_L3 genPassMaxPt2_All", 
        "genEffEta_Total \'#eta Efficiency for Full Path; #eta of Generated Muon (GeV); # Gen #mu Matched to L3 / # Gen #mu\' genPassEta_L3 genPassEta_All", 
        "genEffPhi_Total \'#phi Efficiency for Full Path; #phi of Generated Muon (GeV); # Gen #mu Matched to L3 / # Gen #mu\' genPassPhi_L3 genPassPhi_All", 
        "recTurnOn1_Total \'pT Turn-On for Full Path; p_{T} of Leading Reconstructed Muon (GeV); # Reco #mu Matched to L3 / # Reco #mu\' recPassMaxPt1_L3 recPassMaxPt1_All", 
        "recTurnOn2_Total \'Next-to-Leading pT Turn-On for Full Path; p_{T} of Next-to-Leading Reconstructed Muon (GeV); # Reco #mu Matched to L3 / # Reco #mu\' recPassMaxPt2_L3 recPassMaxPt2_All", 
        "recEffEta_Total \'#eta Efficiency for Full Path; #eta of Reconstructed Muon (GeV); # Reco #mu Matched to L3 / # Reco #mu\' recPassEta_L3 recPassEta_All", 
        "recEffPhi_Total \'#phi Efficiency for Full Path; #phi of Reconstructed Muon (GeV); # Reco #mu Matched to L3 / # Reco #mu\' recPassPhi_L3 recPassPhi_All"),
    subDirs = cms.untracked.vstring('HLT/Muon/Distributions/^(?:[^I]+|I(?!so))*$'),
    outputFileName = cms.untracked.string(''),
    efficiency = cms.vstring(),
    resolution = cms.vstring()
)


process.hltMuonPostProcessor = cms.EDAnalyzer("DQMGenericClient",
    verbose = cms.untracked.uint32(0),
    efficiencyProfile = cms.untracked.vstring(),
    subDirs = cms.untracked.vstring('HLT/Muon/Distributions/*'),
    outputFileName = cms.untracked.string(''),
    efficiency = cms.vstring(),
    resolution = cms.vstring()
)


process.hltMuonQualityTester = cms.EDAnalyzer("QualityTester",
    prescaleFactor = cms.untracked.int32(1),
    qtestOnEndRun = cms.untracked.bool(False),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('HLTriggerOffline/Muon/data/HLTMuonQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(True),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(False),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.hltMuonValidator = cms.EDAnalyzer("HLTMuonValidator",
    l3CandLabel = cms.string('hltL3MuonCandidates'),
    cutsDr = cms.vdouble(0.4, 0.4, 0.015),
    l1CandLabel = cms.string('hltL1extraParticles'),
    genParticleLabel = cms.string('genParticles'),
    parametersEta = cms.vdouble(48, -2.4, 2.4),
    hltPathsToCheck = cms.vstring('HLT_(L[12])?(Double)?(Iso)?Mu[0-9]*(Open)?(_NoVertex)?(_v[0-9]*)?$', 
        'NoFilters'),
    recMuonLabel = cms.string('muons'),
    hltProcessName = cms.string('HLT'),
    maxDeltaPhi = cms.double(0.4),
    useSimpleGeometry = cms.bool(True),
    l2CandLabel = cms.string('hltL2MuonCandidates'),
    parametersTurnOn = cms.vdouble(0, 1, 2, 3, 4, 
        5, 6, 7, 8, 9, 
        10, 11, 12, 13, 14, 
        15, 16, 17, 18, 19, 
        20, 22, 24, 26, 28, 
        30, 32, 34, 36, 38, 
        40, 45, 50, 55, 60, 
        65, 70, 80, 100, 200, 
        500),
    maxDeltaR = cms.double(0.4),
    useState = cms.string('atVertex'),
    useTrack = cms.string('none'),
    parametersPhi = cms.vdouble(50, -3.142, 3.142),
    genMuonCut = cms.string('abs(pdgId) == 13 && status == 1'),
    recMuonCut = cms.string('isGlobalMuon')
)


process.hltSusyExoQualityTester = cms.EDAnalyzer("QualityTester",
    prescaleFactor = cms.untracked.int32(1),
    qtestOnEndRun = cms.untracked.bool(True),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('HLTriggerOffline/SUSYBSM/data/HLTSusyExoQualityTest.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(False),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.hltTauOfflineCertification = cms.EDAnalyzer("HLTTauCertifier",
    targetME = cms.string('HLT_Tau'),
    setBadRunOnErrors = cms.bool(True),
    setBadRunOnWarnings = cms.bool(False),
    inputMEs = cms.vstring('HLT/TauOffline/Inclusive/DoubleLooseIsoTauTau/TriggerBits', 
        'HLT/TauOffline/Inclusive/DoubleLooseIsoTauTau/TriggerBits'),
    targetDir = cms.string('HLT/EventInfo/reportSummaryContents')
)


process.hltTauOfflineMonitor_Inclusive = cms.EDAnalyzer("HLTTauDQMOfflineSource",
    doMatching = cms.bool(False),
    refObjects = cms.untracked.VInputTag(cms.InputTag("TauRefProducer","PFTaus"), cms.InputTag("TauRefProducer","Electrons"), cms.InputTag("TauRefProducer","Muons")),
    MonitorSetup = cms.VPSet(cms.PSet(
        ConfigType = cms.untracked.string('Path'),
        triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
        LeptonType = cms.untracked.vint32(0, 0, 0, 0, 0),
        NTriggeredTaus = cms.untracked.vuint32(2, 2, 2, 2, 2, 
            2),
        Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sDoubleTauJet44Eta2p17orDoubleJet64Central","","HLT"), cms.InputTag("hltFilterL2EtCutDoublePFIsoTau45Trk5","","HLT"), cms.InputTag("hltDoublePFTauTightIso45Track","","HLT"), cms.InputTag("hltDoublePFTauTightIso45Track5","","HLT"), cms.InputTag("hltFilterDoubleIsoPFTau45Trk5LeadTrack5IsolationL1HLTMatched","","HLT")),
        DQMFolder = cms.untracked.string('HLT/TauOffline/Inclusive/DoubleTau'),
        TauType = cms.untracked.vint32(-86, 84, 84, 84, 84),
        NTriggeredLeptons = cms.untracked.vuint32(0, 0, 0, 0, 0, 
            0),
        MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2, 0.2, 0.2)
    ), 
        cms.PSet(
            ConfigType = cms.untracked.string('Path'),
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
            LeptonType = cms.untracked.vint32(-83, 82, 0, 0, 0, 
                82),
            NTriggeredTaus = cms.untracked.vuint32(1, 0, 0, 1, 1, 
                1, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sL1SingleEG18orL1SingleEG20","","HLT"), cms.InputTag("hltEle20CaloIdVTCaloIsoTTrkIdTTrkIsoTTrackIsoFilterL1SingleEG18orL1SingleEG20","","HLT"), cms.InputTag("hltPFTauMediumIso20","","HLT"), cms.InputTag("hltPFTauMediumIso20Track","","HLT"), cms.InputTag("hltPFTauMediumIso20TrackMediumIso","","HLT"), 
                cms.InputTag("hltOverlapFilterIsoEle20MediumIsoPFTau20","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauOffline/Inclusive/EleTau'),
            TauType = cms.untracked.vint32(0, 0, 84, 84, 84, 
                84),
            NTriggeredLeptons = cms.untracked.vuint32(1, 1, 1, 0, 0, 
                0, 1),
            MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2, 0.2, 0.2, 
                0.2)
        ), 
        cms.PSet(
            ConfigType = cms.untracked.string('Path'),
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
            LeptonType = cms.untracked.vint32(-81, 83, 0, 0, 0, 
                83),
            NTriggeredTaus = cms.untracked.vuint32(1, 0, 0, 1, 1, 
                1, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sL1SingleMu14Eta2p1","","HLT"), cms.InputTag("hltSingleMuIsoL1s14L3IsoFiltered15eta2p1","","HLT"), cms.InputTag("hltPFTau20","","HLT"), cms.InputTag("hltPFTau20Track","","HLT"), cms.InputTag("hltPFTau20TrackLooseIso","","HLT"), 
                cms.InputTag("hltOverlapFilterIsoMu15IsoPFTau20","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauOffline/Inclusive/MuLooseTau'),
            TauType = cms.untracked.vint32(0, 0, 84, 84, 84, 
                84),
            NTriggeredLeptons = cms.untracked.vuint32(1, 1, 1, 0, 0, 
                0, 1),
            MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2, 0.2, 0.2, 
                0.2)
        ), 
        cms.PSet(
            ConfigType = cms.untracked.string('Path'),
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
            LeptonType = cms.untracked.vint32(-81, 83, 0, 0, 0, 
                83),
            NTriggeredTaus = cms.untracked.vuint32(1, 0, 0, 1, 1, 
                1, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sL1SingleMu14Eta2p1","","HLT"), cms.InputTag("hltSingleMuIsoL1s14L3IsoFiltered15eta2p1","","HLT"), cms.InputTag("hltPFTauMediumIso20","","HLT"), cms.InputTag("hltPFTauMediumIso20Track","","HLT"), cms.InputTag("hltPFTauMediumIso20TrackMediumIso","","HLT"), 
                cms.InputTag("hltOverlapFilterIsoMu15MediumIsoPFTau20","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauOffline/Inclusive/MuMediumTau'),
            TauType = cms.untracked.vint32(0, 0, 84, 84, 84, 
                84),
            NTriggeredLeptons = cms.untracked.vuint32(1, 1, 1, 0, 0, 
                0, 1),
            MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2, 0.2, 0.2, 
                0.2)
        ), 
        cms.PSet(
            ConfigType = cms.untracked.string('Path'),
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
            LeptonType = cms.untracked.vint32(-81, 83, 0, 0, 0, 
                83),
            NTriggeredTaus = cms.untracked.vuint32(1, 0, 0, 1, 1, 
                1, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sL1SingleMu14Eta2p1","","HLT"), cms.InputTag("hltSingleMuIsoL1s14L3IsoFiltered15eta2p1","","HLT"), cms.InputTag("hltPFTauTightIso20","","HLT"), cms.InputTag("hltPFTauTightIso20Track","","HLT"), cms.InputTag("hltPFTauTightIso20TrackTightIso","","HLT"), 
                cms.InputTag("hltOverlapFilterIsoMu15TightIsoPFTau20","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauOffline/Inclusive/MuTightTau'),
            TauType = cms.untracked.vint32(0, 0, 84, 84, 84, 
                84),
            NTriggeredLeptons = cms.untracked.vuint32(1, 1, 1, 0, 0, 
                0, 1),
            MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2, 0.2, 0.2, 
                0.2)
        ), 
        cms.PSet(
            ConfigType = cms.untracked.string('LitePath'),
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryAOD","","HLT"),
            LeptonType = cms.untracked.vint32(0, 11, 13, 0),
            NTriggeredTaus = cms.untracked.vuint32(2, 1, 1, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltFilterDoubleIsoPFTau45Trk5LeadTrack5IsolationL1HLTMatched","","HLT"), cms.InputTag("hltOverlapFilterIsoEle20MediumIsoPFTau20","","HLT"), cms.InputTag("hltOverlapFilterIsoMu15IsoPFTau20","","HLT"), cms.InputTag("hltFilterSingleIsoPFTau35Trk20MET70LeadTrack20IsolationL1HLTMatched","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauOffline/Inclusive/Summary'),
            PathName = cms.untracked.vstring('DoubleIsoTau', 
                'EleTau', 
                'MuTau', 
                'SingleIsoTau'),
            TauType = cms.untracked.vint32(15, 15, 15, 15),
            NTriggeredLeptons = cms.untracked.vuint32(0, 1, 1, 0)
        ), 
        cms.PSet(
            ConfigType = cms.untracked.string('Path'),
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
            LeptonType = cms.untracked.vint32(0, 0, 0, 0, 0, 
                0),
            NTriggeredTaus = cms.untracked.vuint32(1, 1, 1, 1, 1, 
                1, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sL1Jet52ETM30","","HLT"), cms.InputTag("hltFilterL2EtCutSingleIsoPFTau35Trk20MET70","","HLT"), cms.InputTag("hltPFTauMediumIso35","","HLT"), cms.InputTag("hltPFTauMediumIso35Track","","HLT"), cms.InputTag("hltFilterSingleIsoPFTau35Trk20LeadTrackPt20","","HLT"), 
                cms.InputTag("hltFilterSingleIsoPFTau35Trk20MET70LeadTrack20IsolationL1HLTMatched","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauOffline/Inclusive/SingleTau'),
            TauType = cms.untracked.vint32(-86, 84, 84, 84, 84, 
                84),
            NTriggeredLeptons = cms.untracked.vuint32(0, 0, 0, 0, 0, 
                0, 0),
            MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2, 0.2, 0.2, 
                0.2)
        ), 
        cms.PSet(
            L1Muons = cms.InputTag("hltL1extraParticles"),
            L1Taus = cms.InputTag("hltL1extraParticles","Tau"),
            ConfigType = cms.untracked.string('L1'),
            DQMFolder = cms.string('HLT/TauOffline/Inclusive/L1'),
            L1Electrons = cms.InputTag("hltL1extraParticles","NonIsolated"),
            L1Jets = cms.InputTag("hltL1extraParticles","Central")
        ))
)


process.hltTauOfflineMonitor_PFTaus = cms.EDAnalyzer("HLTTauDQMOfflineSource",
    doMatching = cms.bool(True),
    refObjects = cms.untracked.VInputTag(cms.InputTag("TauRefProducer","PFTaus"), cms.InputTag("TauRefProducer","Electrons"), cms.InputTag("TauRefProducer","Muons")),
    MonitorSetup = cms.VPSet(cms.PSet(
        ConfigType = cms.untracked.string('Path'),
        triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
        LeptonType = cms.untracked.vint32(0, 0, 0, 0, 0),
        NTriggeredTaus = cms.untracked.vuint32(2, 2, 2, 2, 2, 
            2),
        Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sDoubleTauJet44Eta2p17orDoubleJet64Central","","HLT"), cms.InputTag("hltFilterL2EtCutDoublePFIsoTau45Trk5","","HLT"), cms.InputTag("hltDoublePFTauTightIso45Track","","HLT"), cms.InputTag("hltDoublePFTauTightIso45Track5","","HLT"), cms.InputTag("hltFilterDoubleIsoPFTau45Trk5LeadTrack5IsolationL1HLTMatched","","HLT")),
        DQMFolder = cms.untracked.string('HLT/TauOffline/PFTaus/DoubleTau'),
        TauType = cms.untracked.vint32(-86, 84, 84, 84, 84),
        NTriggeredLeptons = cms.untracked.vuint32(0, 0, 0, 0, 0, 
            0),
        MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2, 0.2, 0.2)
    ), 
        cms.PSet(
            ConfigType = cms.untracked.string('Path'),
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
            LeptonType = cms.untracked.vint32(-83, 82, 0, 0, 0, 
                82),
            NTriggeredTaus = cms.untracked.vuint32(1, 0, 0, 1, 1, 
                1, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sL1SingleEG18orL1SingleEG20","","HLT"), cms.InputTag("hltEle20CaloIdVTCaloIsoTTrkIdTTrkIsoTTrackIsoFilterL1SingleEG18orL1SingleEG20","","HLT"), cms.InputTag("hltPFTauMediumIso20","","HLT"), cms.InputTag("hltPFTauMediumIso20Track","","HLT"), cms.InputTag("hltPFTauMediumIso20TrackMediumIso","","HLT"), 
                cms.InputTag("hltOverlapFilterIsoEle20MediumIsoPFTau20","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauOffline/PFTaus/EleTau'),
            TauType = cms.untracked.vint32(0, 0, 84, 84, 84, 
                84),
            NTriggeredLeptons = cms.untracked.vuint32(1, 1, 1, 0, 0, 
                0, 1),
            MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2, 0.2, 0.2, 
                0.2)
        ), 
        cms.PSet(
            ConfigType = cms.untracked.string('Path'),
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
            LeptonType = cms.untracked.vint32(-81, 83, 0, 0, 0, 
                83),
            NTriggeredTaus = cms.untracked.vuint32(1, 0, 0, 1, 1, 
                1, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sL1SingleMu14Eta2p1","","HLT"), cms.InputTag("hltSingleMuIsoL1s14L3IsoFiltered15eta2p1","","HLT"), cms.InputTag("hltPFTau20","","HLT"), cms.InputTag("hltPFTau20Track","","HLT"), cms.InputTag("hltPFTau20TrackLooseIso","","HLT"), 
                cms.InputTag("hltOverlapFilterIsoMu15IsoPFTau20","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauOffline/PFTaus/MuLooseTau'),
            TauType = cms.untracked.vint32(0, 0, 84, 84, 84, 
                84),
            NTriggeredLeptons = cms.untracked.vuint32(1, 1, 1, 0, 0, 
                0, 1),
            MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2, 0.2, 0.2, 
                0.2)
        ), 
        cms.PSet(
            ConfigType = cms.untracked.string('Path'),
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
            LeptonType = cms.untracked.vint32(-81, 83, 0, 0, 0, 
                83),
            NTriggeredTaus = cms.untracked.vuint32(1, 0, 0, 1, 1, 
                1, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sL1SingleMu14Eta2p1","","HLT"), cms.InputTag("hltSingleMuIsoL1s14L3IsoFiltered15eta2p1","","HLT"), cms.InputTag("hltPFTauMediumIso20","","HLT"), cms.InputTag("hltPFTauMediumIso20Track","","HLT"), cms.InputTag("hltPFTauMediumIso20TrackMediumIso","","HLT"), 
                cms.InputTag("hltOverlapFilterIsoMu15MediumIsoPFTau20","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauOffline/PFTaus/MuMediumTau'),
            TauType = cms.untracked.vint32(0, 0, 84, 84, 84, 
                84),
            NTriggeredLeptons = cms.untracked.vuint32(1, 1, 1, 0, 0, 
                0, 1),
            MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2, 0.2, 0.2, 
                0.2)
        ), 
        cms.PSet(
            ConfigType = cms.untracked.string('Path'),
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
            LeptonType = cms.untracked.vint32(-81, 83, 0, 0, 0, 
                83),
            NTriggeredTaus = cms.untracked.vuint32(1, 0, 0, 1, 1, 
                1, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sL1SingleMu14Eta2p1","","HLT"), cms.InputTag("hltSingleMuIsoL1s14L3IsoFiltered15eta2p1","","HLT"), cms.InputTag("hltPFTauTightIso20","","HLT"), cms.InputTag("hltPFTauTightIso20Track","","HLT"), cms.InputTag("hltPFTauTightIso20TrackTightIso","","HLT"), 
                cms.InputTag("hltOverlapFilterIsoMu15TightIsoPFTau20","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauOffline/PFTaus/MuTightTau'),
            TauType = cms.untracked.vint32(0, 0, 84, 84, 84, 
                84),
            NTriggeredLeptons = cms.untracked.vuint32(1, 1, 1, 0, 0, 
                0, 1),
            MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2, 0.2, 0.2, 
                0.2)
        ), 
        cms.PSet(
            ConfigType = cms.untracked.string('LitePath'),
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryAOD","","HLT"),
            LeptonType = cms.untracked.vint32(0, 11, 13, 0),
            NTriggeredTaus = cms.untracked.vuint32(2, 1, 1, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltFilterDoubleIsoPFTau45Trk5LeadTrack5IsolationL1HLTMatched","","HLT"), cms.InputTag("hltOverlapFilterIsoEle20MediumIsoPFTau20","","HLT"), cms.InputTag("hltOverlapFilterIsoMu15IsoPFTau20","","HLT"), cms.InputTag("hltFilterSingleIsoPFTau35Trk20MET70LeadTrack20IsolationL1HLTMatched","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauOffline/PFTaus/Summary'),
            PathName = cms.untracked.vstring('DoubleIsoTau', 
                'EleTau', 
                'MuTau', 
                'SingleIsoTau'),
            TauType = cms.untracked.vint32(15, 15, 15, 15),
            NTriggeredLeptons = cms.untracked.vuint32(0, 1, 1, 0)
        ), 
        cms.PSet(
            ConfigType = cms.untracked.string('Path'),
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
            LeptonType = cms.untracked.vint32(0, 0, 0, 0, 0, 
                0),
            NTriggeredTaus = cms.untracked.vuint32(1, 1, 1, 1, 1, 
                1, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sL1Jet52ETM30","","HLT"), cms.InputTag("hltFilterL2EtCutSingleIsoPFTau35Trk20MET70","","HLT"), cms.InputTag("hltPFTauMediumIso35","","HLT"), cms.InputTag("hltPFTauMediumIso35Track","","HLT"), cms.InputTag("hltFilterSingleIsoPFTau35Trk20LeadTrackPt20","","HLT"), 
                cms.InputTag("hltFilterSingleIsoPFTau35Trk20MET70LeadTrack20IsolationL1HLTMatched","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauOffline/PFTaus/SingleTau'),
            TauType = cms.untracked.vint32(-86, 84, 84, 84, 84, 
                84),
            NTriggeredLeptons = cms.untracked.vuint32(0, 0, 0, 0, 0, 
                0, 0),
            MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2, 0.2, 0.2, 
                0.2)
        ), 
        cms.PSet(
            L1Muons = cms.InputTag("hltL1extraParticles"),
            L1Taus = cms.InputTag("hltL1extraParticles","Tau"),
            ConfigType = cms.untracked.string('L1'),
            DQMFolder = cms.string('HLT/TauOffline/PFTaus/L1'),
            L1Electrons = cms.InputTag("hltL1extraParticles","NonIsolated"),
            L1Jets = cms.InputTag("hltL1extraParticles","Central")
        ))
)


process.hltTauOfflineQualityTests = cms.EDAnalyzer("QualityTester",
    prescaleFactor = cms.untracked.int32(1),
    qtestOnEndRun = cms.untracked.bool(True),
    reportThreshold = cms.untracked.string('black'),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('DQMOffline/Trigger/data/HLT_Tau_QualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(False),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.hltTauQualityTesterForZ5E32 = cms.EDAnalyzer("QualityTester",
    prescaleFactor = cms.untracked.int32(1),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('HLTriggerOffline/Tau/data/QTDefault.xml'),
    qtestOnEndJob = cms.untracked.bool(True),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.hltTauQualityTesterForZ5E32Custom = cms.EDAnalyzer("HLTTauRelvalQTester",
    prescaleFactor = cms.untracked.int32(1),
    mothers = cms.vint32(23),
    refMothers = cms.InputTag("TauMCProducer","Mothers"),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('HLTriggerOffline/Tau/data/QTDefault.xml'),
    qtestOnEndJob = cms.untracked.bool(True),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.hltTopPost4Jets = cms.EDAnalyzer("DQMGenericClient",
    commands = cms.vstring(''),
    verbose = cms.untracked.uint32(0),
    subDirs = cms.untracked.vstring('HLT/Top/4JetsPlus1MuonToCompareWithData'),
    outputFileName = cms.untracked.string(''),
    efficiency = cms.vstring("EffVsPt_HLTMu9_4Jets1MuonMon      \'HLT_Mu9    ; p_{T #mu };         Trigger_Efficiency\'  Muon1Pt_4Jets1MuonHLTMu9Mon     Muon1Pt_4Jets1MuonMon", 
        "EffVsEta_HLTMu9_4Jets1MuonMon     \'HLT_Mu9   ; #eta_{#mu };         Trigger_Efficiency\'  Muon1Eta_4Jets1MuonHLTMu9Mon    Muon1Eta_4Jets1MuonMon", 
        "EffVsNJets_HLTMu9_4Jets1MuonMon        \'HLT_Mu9   ; Jet multiplicity;    Trigger_Efficiency\'  NJets_4Jets1MuonHLTMu9Mon       NJets_4Jets1MuonMon"),
    resolution = cms.vstring('')
)


process.hltTopPostDiel = cms.EDAnalyzer("DQMGenericClient",
    commands = cms.vstring(''),
    verbose = cms.untracked.uint32(0),
    subDirs = cms.untracked.vstring('HLT/Top/Dileptonic_electron'),
    outputFileName = cms.untracked.string(''),
    efficiency = cms.vstring("EffVsPt_HLT_Ele15_SW_L1R_EE                    \'HLT_Ele15_SW_L1R                  ; p_{T e 1};        Trigger_Efficiency\'  Electron1Pt_EE_HLT_Ele15_SW_L1R                  Electron1Pt_EE", 
        "EffVsEta_HLT_Ele15_SW_L1R_EE                   \'HLT_Ele15_SW_L1R                  ; #eta_{e 1};       Trigger_Efficiency\'  Electron1Eta_EE_HLT_Ele15_SW_L1R                 Electron1Eta_EE", 
        "EffVsPt_HLT_Ele15_SW_LooseTrackIso_L1R_EE      \'HLT_Ele15_SW_LooseTrackIso_L1R    ; p_{T e 1};        Trigger_Efficiency\'  Electron1Pt_EE_HLT_Ele15_SW_LooseTrackIso_L1R    Electron1Pt_EE", 
        "EffVsEta_HLT_Ele15_SW_LooseTrackIso_L1R_EE     \'HLT_Ele15_SW_LooseTrackIso_L1R    ; #eta_{e 1};       Trigger_Efficiency\'  Electron1Eta_EE_HLT_Ele15_SW_LooseTrackIso_L1R   Electron1Eta_EE", 
        "EffVsPt_HLT_DoubleEle10_SW_L1R_EE              \'HLT_DoubleEle10_SW_L1R            ; p_{T e 1};        Trigger_Efficiency\'  Electron1Pt_EE_HLT_DoubleEle10_SW_L1R            Electron1Pt_EE", 
        "EffVsEta_HLT_DoubleEle10_SW_L1R_EE             \'HLT_DoubleEle10_SW_L1R            ; #eta_{e 1};       Trigger_Efficiency\'  Electron1Eta_EE_HLT_DoubleEle10_SW_L1R           Electron1Eta_EE"),
    resolution = cms.vstring('')
)


process.hltTopPostDimu = cms.EDAnalyzer("DQMGenericClient",
    commands = cms.vstring(''),
    verbose = cms.untracked.uint32(0),
    subDirs = cms.untracked.vstring('HLT/Top/Dileptonic_muon'),
    outputFileName = cms.untracked.string(''),
    efficiency = cms.vstring("EffVsPt_HLT_Mu9_MM                             \'HLT_Mu9                           ; p_{T #mu 1};      Trigger_Efficiency\'  Muon1Pt_MM_HLT_Mu9                               Muon1Pt_MM", 
        "EffVsEta_HLT_Mu9_MM                            \'HLT_Mu9                           ; #eta_{#mu 1};     Trigger_Efficiency\'  Muon1Eta_MM_HLT_Mu9                              Muon1Eta_MM", 
        "EffVsPt_HLT_Mu15_MM                            \'HLT_Mu15                          ; p_{T #mu 1};      Trigger_Efficiency\'  Muon1Pt_MM_HLT_Mu15                              Muon1Pt_MM", 
        "EffVsEta_HLT_Mu15_MM                           \'HLT_Mu15                          ; #eta_{#mu 1};     Trigger_Efficiency\'  Muon1Eta_MM_HLT_Mu15                             Muon1Eta_MM", 
        "EffVsPt_HLT_IsoMu9_MM                          \'HLT_IsoMu9                        ; p_{T #mu 1};      Trigger_Efficiency\'  Muon1Pt_MM_HLT_IsoMu9                            Muon1Pt_MM", 
        "EffVsEta_HLT_IsoMu9_MM                         \'HLT_IsoMu9                        ; #eta_{#mu 1};     Trigger_Efficiency\'  Muon1Eta_MM_HLT_IsoMu9                           Muon1Eta_MM", 
        "EffVsPt_HLT_DoubleMu3_MM                       \'HLT_DoubleMu3                     ; p_{T #mu 1};      Trigger_Efficiency\'  Muon1Pt_MM_HLT_DoubleMu3                         Muon1Pt_MM", 
        "EffVsEta_HLT_DoubleMu3_MM                      \'HLT_DoubleMu3                     ; #eta_{#mu 1};     Trigger_Efficiency\'  Muon1Eta_MM_HLT_DoubleMu3                        Muon1Eta_MM"),
    resolution = cms.vstring('')
)


process.hltTopPostEmu = cms.EDAnalyzer("DQMGenericClient",
    commands = cms.vstring(''),
    verbose = cms.untracked.uint32(0),
    subDirs = cms.untracked.vstring('HLT/Top/Dileptonic_emu'),
    outputFileName = cms.untracked.string(''),
    efficiency = cms.vstring("EffVsPt_HLT_Mu9_EM                             \'HLT_Mu9                           ; p_{T #mu };       Trigger_Efficiency\'  Muon1Pt_EM_HLT_Mu9                               Muon1Pt_EM", 
        "EffVsEta_HLT_Mu9_EM                            \'HLT_Mu9                           ; #eta_{#mu };      Trigger_Efficiency\'  Muon1Eta_EM_HLT_Mu9                              Muon1Eta_EM", 
        "EffVsPt_HLT_Mu15_EM                            \'HLT_Mu15                          ; p_{T #mu };       Trigger_Efficiency\'  Muon1Pt_EM_HLT_Mu15                              Muon1Pt_EM", 
        "EffVsEta_HLT_Mu15_EM                           \'HLT_Mu15                          ; #eta_{#mu };      Trigger_Efficiency\'  Muon1Eta_EM_HLT_Mu15                             Muon1Eta_EM", 
        "EffVsPt_HLT_IsoMu9_EM                          \'HLT_IsoMu9                        ; p_{T #mu };       Trigger_Efficiency\'  Muon1Pt_EM_HLT_IsoMu9                            Muon1Pt_EM", 
        "EffVsEta_HLT_IsoMu9_EM                         \'HLT_IsoMu9                        ; #eta_{#mu };      Trigger_Efficiency\'  Muon1Eta_EM_HLT_IsoMu9                           Muon1Eta_EM", 
        "EffVsPt_HLT_Ele15_SW_L1R_EM                    \'HLT_Ele15_SW_L1R                  ; p_{T e };         Trigger_Efficiency\'  Electron1Pt_EM_HLT_Ele15_SW_L1R                  Electron1Pt_EM", 
        "EffVsEta_HLT_Ele15_SW_L1R_EM                   \'HLT_Ele15_SW_L1R                  ; #eta_{e };        Trigger_Efficiency\'  Electron1Eta_EM_HLT_Ele15_SW_L1R                 Electron1Eta_EM", 
        "EffVsPt_HLT_Ele15_SW_LooseTrackIso_L1R_EM      \'HLT_Ele15_SW_LooseTrackIso_L1R    ; p_{T e };         Trigger_Efficiency\'  Electron1Pt_EM_HLT_Ele15_SW_LooseTrackIso_L1R    Electron1Pt_EM", 
        "EffVsEta_HLT_Ele15_SW_LooseTrackIso_L1R_EM     \'HLT_Ele15_SW_LooseTrackIso_L1R    ; #eta_{e };        Trigger_Efficiency\'  Electron1Eta_EM_HLT_Ele15_SW_LooseTrackIso_L1R   Electron1Eta_EM"),
    resolution = cms.vstring('')
)


process.hltTopPostJet = cms.EDAnalyzer("DQMGenericClient",
    commands = cms.vstring(''),
    verbose = cms.untracked.uint32(0),
    subDirs = cms.untracked.vstring('HLT/Top/Jets'),
    outputFileName = cms.untracked.string(''),
    efficiency = cms.vstring("Efficiencies_jetTriggers_semimu                  \'HLT efficiency wrt acc+offline        ;  ;              Trigger Efficiency\'               numer   denom", 
        "Efficiencies_jetTriggers_semiel                   \'HLT efficiency wrt acc+offline        ; ;              Trigger Efficiency\'               numer_el   denom_el"),
    resolution = cms.vstring('')
)


process.hltTopPostSemiel = cms.EDAnalyzer("DQMGenericClient",
    commands = cms.vstring(''),
    verbose = cms.untracked.uint32(0),
    subDirs = cms.untracked.vstring('HLT/Top/Semileptonic_electron'),
    outputFileName = cms.untracked.string(''),
    efficiency = cms.vstring("EffVsPt_HLT_Ele15_SW_L1R                       \'HLT_Ele15_SW_L1R                  ; p_{T e};          Trigger_Efficiency\'  Electron1Pt_E_HLT_Ele15_SW_L1R                   Electron1Pt_E", 
        "EffVsEta_HLT_Ele15_SW_L1R                      \'HLT_Ele15_SW_L1R                  ; #eta_{e};         Trigger_Efficiency\'  Electron1Eta_E_HLT_Ele15_SW_L1R                  Electron1Eta_E", 
        "EffVsPt_HLT_Ele15_SW_LooseTrackIso_L1R         \'HLT_Ele15_SW_LooseTrackIso_L1R    ; p_{T e};          Trigger_Efficiency\'  Electron1Pt_E_HLT_Ele15_SW_LooseTrackIso_L1R     Electron1Pt_E", 
        "EffVsEta_HLT_Ele15_SW_LooseTrackIso_L1R        \'HLT_Ele15_SW_LooseTrackIso_L1R    ; #eta_{e};         Trigger_Efficiency\'  Electron1Eta_E_HLT_Ele15_SW_LooseTrackIso_L1R    Electron1Eta_E", 
        "Efficiencies_Electrontriggers                      \'HLT efficiency wrt acc+offline        ; ;              Trigger Efficiency\'               elHLT      ElectronEvents", 
        "Efficiencies_Electrontriggers_gen                  \'HLT efficiency wrt mc acceptance      ; ;              Trigger Efficiency\'               genelHLT   genElectronEvents"),
    resolution = cms.vstring('')
)


process.hltTopPostSemimu = cms.EDAnalyzer("DQMGenericClient",
    commands = cms.vstring(''),
    verbose = cms.untracked.uint32(0),
    subDirs = cms.untracked.vstring('HLT/Top/Semileptonic_muon'),
    outputFileName = cms.untracked.string(''),
    efficiency = cms.vstring("EffVsPt_HLT_Mu9                                \'HLT_Mu9                           ; p_{T #mu};        Trigger_Efficiency\'  Muon1Pt_M_HLT_Mu9                                Muon1Pt_M", 
        "EffVsEta_HLT_Mu9                               \'HLT_Mu9                           ; #eta_{#mu};       Trigger_Efficiency\'  Muon1Eta_M_HLT_Mu9                               Muon1Eta_M", 
        "EffVsPt_HLT_Mu15                               \'HLT_Mu15                          ; p_{T #mu};        Trigger_Efficiency\'  Muon1Pt_M_HLT_Mu15                               Muon1Pt_M", 
        "EffVsEta_HLT_Mu15                              \'HLT_Mu15                          ; #eta_{#mu};       Trigger_Efficiency\'  Muon1Eta_M_HLT_Mu15                              Muon1Eta_M", 
        "EffVsPt_HLT_IsoMu9                             \'HLT_IsoMu9                        ; p_{T #mu};        Trigger_Efficiency\'  Muon1Pt_M_HLT_IsoMu9                             Muon1Pt_M", 
        "EffVsEta_HLT_IsoMu9                            \'HLT_IsoMu9                        ; #eta_{#mu};       Trigger_Efficiency\'  Muon1Eta_M_HLT_IsoMu9                            Muon1Eta_M", 
        "Efficiencies_MuonTriggers_gen                  \'HLT efficiency wrt mc acceptance      ; ;             Trigger Efficiency\'               genmuHLT   genMuonEvents", 
        "Efficiencies_MuonTriggers                      \'HLT efficiency wrt acc+offline        ; ;             Trigger Efficiency\'               muHLT      MuonEvents"),
    resolution = cms.vstring('')
)


process.hltTopQualityTester = cms.EDAnalyzer("QualityTester",
    prescaleFactor = cms.untracked.int32(1),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('HLTriggerOffline/Top/data/HLTTopQualityTest.xml'),
    qtestOnEndJob = cms.untracked.bool(True),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(False),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.hltriggerFourVectorClient = cms.EDAnalyzer("FourVectorHLTClient",
    customEffDir = cms.untracked.string('custom-eff'),
    prescaleEvt = cms.untracked.int32(1),
    hltSourceDir = cms.untracked.string('HLT/FourVector_Val/source/'),
    prescaleLS = cms.untracked.int32(-1),
    effpaths = cms.VPSet(cms.PSet(
        pathname = cms.string('HLT_'),
        denompathname = cms.string('')
    ), 
        cms.PSet(
            pathname = cms.string('HLT_Mu9'),
            denompathname = cms.string('HLT_Jet30')
        ), 
        cms.PSet(
            pathname = cms.string('HLT_Jet30'),
            denompathname = cms.string('HLT_Mu3')
        )),
    hltClientDir = cms.untracked.string('HLT/FourVector_Val/client/')
)


process.hltriggerResults = cms.EDAnalyzer("FourVectorHLTriggerOffline",
    photonEtMin = cms.untracked.double(3.0),
    bjetEtMin = cms.untracked.double(10.0),
    processname = cms.string('HLT'),
    photonDRMatch = cms.untracked.double(0.5),
    tauEtaMax = cms.untracked.double(5.0),
    trackEtaMax = cms.untracked.double(2.5),
    plotAll = cms.untracked.bool(False),
    electronEtaMax = cms.untracked.double(2.5),
    triggerResultsLabel = cms.InputTag("TriggerResults","","HLT"),
    jetDRMatch = cms.untracked.double(0.3),
    htMin = cms.untracked.double(10.0),
    electronEtMin = cms.untracked.double(3.0),
    metMin = cms.untracked.double(10.0),
    paths = cms.VPSet(),
    trackDRMatch = cms.untracked.double(0.3),
    dirname = cms.untracked.string('HLT/FourVector_Val/source'),
    bjetDRMatch = cms.untracked.double(0.3),
    trackEtMin = cms.untracked.double(3.0),
    tauDRMatch = cms.untracked.double(0.5),
    sumEtMin = cms.untracked.double(10.0),
    tauEtMin = cms.untracked.double(3.0),
    ptMin = cms.untracked.double(0.0),
    muonEtMin = cms.untracked.double(3.0),
    ptMax = cms.untracked.double(100.0),
    muonDRMatch = cms.untracked.double(0.3),
    bjetEtaMax = cms.untracked.double(2.5),
    electronDRMatch = cms.untracked.double(0.5),
    muonEtaMax = cms.untracked.double(2.1),
    triggerSummaryLabel = cms.InputTag("hltTriggerSummaryAOD","","HLT"),
    photonEtaMax = cms.untracked.double(2.5),
    jetEtMin = cms.untracked.double(10.0),
    jetEtaMax = cms.untracked.double(5.0)
)


process.l2MuonMuTrackFSV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    cotThetaRes_rangeMax = cms.double(0.01),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL2MuonAssociationFS"),
    minRapidityTP = cms.double(-2.4),
    minZpos = cms.double(-10),
    minHit = cms.double(-0.5),
    ptMinTP = cms.double(0.9),
    maxZpos = cms.double(10),
    label_tp_fake = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    dxyRes_rangeMax = cms.double(0.02),
    label = cms.VInputTag("hltL2Muons"),
    nint = cms.int32(50),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    tipTP = cms.double(3.5),
    label_tp_effic = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    useGsf = cms.bool(False),
    usemuon = cms.bool(True),
    associators = cms.vstring('MuonAssociationByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    etaRes_rangeMax = cms.double(0.05),
    cotThetaRes_rangeMin = cms.double(-0.01),
    etaRes_rangeMin = cms.double(-0.05),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    phiRes_rangeMin = cms.double(-0.05),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    minPhi = cms.double(-3.1416),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    stableOnlyTP = cms.bool(False),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    maxVertpos = cms.double(5),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    usetracker = cms.bool(False),
    minHitTP = cms.int32(0),
    nintPhi = cms.int32(36),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minDxy = cms.double(-3)
)


process.l2MuonMuTrackV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL2MuonAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("hltL2Muons"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('MuonAssociationByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(False),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.l2MuonTrackFSV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    cotThetaRes_rangeMax = cms.double(0.01),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL2TrackAssociationFS"),
    minRapidityTP = cms.double(-2.4),
    minZpos = cms.double(-10),
    minHit = cms.double(-0.5),
    ptMinTP = cms.double(0.9),
    maxZpos = cms.double(10),
    label_tp_fake = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    dxyRes_rangeMax = cms.double(0.02),
    label = cms.VInputTag("hltL2Muons"),
    nint = cms.int32(50),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    tipTP = cms.double(3.5),
    label_tp_effic = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    useGsf = cms.bool(False),
    usemuon = cms.bool(True),
    associators = cms.vstring('TrackAssociatorByDeltaR'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    etaRes_rangeMax = cms.double(0.05),
    cotThetaRes_rangeMin = cms.double(-0.01),
    etaRes_rangeMin = cms.double(-0.05),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    phiRes_rangeMin = cms.double(-0.05),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    minPhi = cms.double(-3.1416),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    stableOnlyTP = cms.bool(False),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    maxVertpos = cms.double(5),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    usetracker = cms.bool(False),
    minHitTP = cms.int32(0),
    nintPhi = cms.int32(36),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minDxy = cms.double(-3)
)


process.l2MuonTrackV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL2TrackAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("hltL2Muons"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('TrackAssociatorByDeltaR'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(False),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.l2UpdMuonMuTrackFSV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    cotThetaRes_rangeMax = cms.double(0.01),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL2UpdMuonAssociationFS"),
    minRapidityTP = cms.double(-2.4),
    minZpos = cms.double(-10),
    minHit = cms.double(-0.5),
    ptMinTP = cms.double(0.9),
    maxZpos = cms.double(10),
    label_tp_fake = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    dxyRes_rangeMax = cms.double(0.02),
    label = cms.VInputTag("hltL2Muons:UpdatedAtVtx"),
    nint = cms.int32(50),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    tipTP = cms.double(3.5),
    label_tp_effic = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    useGsf = cms.bool(False),
    usemuon = cms.bool(True),
    associators = cms.vstring('MuonAssociationByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    etaRes_rangeMax = cms.double(0.05),
    cotThetaRes_rangeMin = cms.double(-0.01),
    etaRes_rangeMin = cms.double(-0.05),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    phiRes_rangeMin = cms.double(-0.05),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    minPhi = cms.double(-3.1416),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    stableOnlyTP = cms.bool(False),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    maxVertpos = cms.double(5),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    usetracker = cms.bool(False),
    minHitTP = cms.int32(0),
    nintPhi = cms.int32(36),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minDxy = cms.double(-3)
)


process.l2UpdMuonMuTrackV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL2UpdMuonAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("hltL2Muons:UpdatedAtVtx"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('MuonAssociationByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(False),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.l2UpdMuonTrackFSV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    cotThetaRes_rangeMax = cms.double(0.01),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL2UpdTrackAssociationFS"),
    minRapidityTP = cms.double(-2.4),
    minZpos = cms.double(-10),
    minHit = cms.double(-0.5),
    ptMinTP = cms.double(0.9),
    maxZpos = cms.double(10),
    label_tp_fake = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    dxyRes_rangeMax = cms.double(0.02),
    label = cms.VInputTag("hltL2Muons:UpdatedAtVtx"),
    nint = cms.int32(50),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    tipTP = cms.double(3.5),
    label_tp_effic = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    useGsf = cms.bool(False),
    usemuon = cms.bool(True),
    associators = cms.vstring('TrackAssociatorByDeltaR'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    etaRes_rangeMax = cms.double(0.05),
    cotThetaRes_rangeMin = cms.double(-0.01),
    etaRes_rangeMin = cms.double(-0.05),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    phiRes_rangeMin = cms.double(-0.05),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    minPhi = cms.double(-3.1416),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    stableOnlyTP = cms.bool(False),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    maxVertpos = cms.double(5),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    usetracker = cms.bool(False),
    minHitTP = cms.int32(0),
    nintPhi = cms.int32(36),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minDxy = cms.double(-3)
)


process.l2UpdMuonTrackV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL2UpdTrackAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("hltL2Muons:UpdatedAtVtx"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('TrackAssociatorByDeltaR'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(False),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.l3MuonMuTrackFSV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    cotThetaRes_rangeMax = cms.double(0.01),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL3MuonAssociationFS"),
    minRapidityTP = cms.double(-2.4),
    minZpos = cms.double(-10),
    minHit = cms.double(-0.5),
    ptMinTP = cms.double(0.9),
    maxZpos = cms.double(10),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    dxyRes_rangeMax = cms.double(0.02),
    label = cms.VInputTag("hltL3Muons:"),
    nint = cms.int32(50),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    tipTP = cms.double(3.5),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    useGsf = cms.bool(False),
    usemuon = cms.bool(True),
    associators = cms.vstring('MuonAssociationByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    etaRes_rangeMax = cms.double(0.05),
    cotThetaRes_rangeMin = cms.double(-0.01),
    etaRes_rangeMin = cms.double(-0.05),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    phiRes_rangeMin = cms.double(-0.05),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    minPhi = cms.double(-3.1416),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    stableOnlyTP = cms.bool(False),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    maxVertpos = cms.double(5),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    usetracker = cms.bool(True),
    minHitTP = cms.int32(0),
    nintPhi = cms.int32(36),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minDxy = cms.double(-3)
)


process.l3MuonMuTrackV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL3MuonAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("hltL3Muons:"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('MuonAssociationByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(True),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.l3MuonTrackFSV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    cotThetaRes_rangeMax = cms.double(0.01),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL3TrackAssociationFS"),
    minRapidityTP = cms.double(-2.4),
    minZpos = cms.double(-10),
    minHit = cms.double(-0.5),
    ptMinTP = cms.double(0.9),
    maxZpos = cms.double(10),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    dxyRes_rangeMax = cms.double(0.02),
    label = cms.VInputTag("hltL3Muons"),
    nint = cms.int32(50),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    tipTP = cms.double(3.5),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    useGsf = cms.bool(False),
    usemuon = cms.bool(True),
    associators = cms.vstring('TrackAssociatorByDeltaR'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    etaRes_rangeMax = cms.double(0.05),
    cotThetaRes_rangeMin = cms.double(-0.01),
    etaRes_rangeMin = cms.double(-0.05),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    phiRes_rangeMin = cms.double(-0.05),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    minPhi = cms.double(-3.1416),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    stableOnlyTP = cms.bool(False),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    maxVertpos = cms.double(5),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    usetracker = cms.bool(True),
    minHitTP = cms.int32(0),
    nintPhi = cms.int32(36),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minDxy = cms.double(-3)
)


process.l3MuonTrackV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL3TrackAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("hltL3Muons"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('TrackAssociatorByDeltaR'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(True),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.l3TkMuonMuTrackFSV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    cotThetaRes_rangeMax = cms.double(0.01),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL3TkMuonAssociationFS"),
    minRapidityTP = cms.double(-2.4),
    minZpos = cms.double(-10),
    minHit = cms.double(-0.5),
    ptMinTP = cms.double(0.9),
    maxZpos = cms.double(10),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    dxyRes_rangeMax = cms.double(0.02),
    label = cms.VInputTag("hltL3TkTracksFromL2:"),
    nint = cms.int32(50),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    tipTP = cms.double(3.5),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    useGsf = cms.bool(False),
    usemuon = cms.bool(False),
    associators = cms.vstring('MuonAssociationByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    etaRes_rangeMax = cms.double(0.05),
    cotThetaRes_rangeMin = cms.double(-0.01),
    etaRes_rangeMin = cms.double(-0.05),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    phiRes_rangeMin = cms.double(-0.05),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    minPhi = cms.double(-3.1416),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    stableOnlyTP = cms.bool(False),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    maxVertpos = cms.double(5),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    usetracker = cms.bool(True),
    minHitTP = cms.int32(0),
    nintPhi = cms.int32(36),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minDxy = cms.double(-3)
)


process.l3TkMuonMuTrackV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL3TkMuonAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("hltL3TkTracksFromL2:"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(False),
    associators = cms.vstring('MuonAssociationByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(True),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.l3TkMuonTrackFSV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    cotThetaRes_rangeMax = cms.double(0.01),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL3TkTrackTrackAssociationFS"),
    minRapidityTP = cms.double(-2.4),
    minZpos = cms.double(-10),
    minHit = cms.double(-0.5),
    ptMinTP = cms.double(0.9),
    maxZpos = cms.double(10),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    dxyRes_rangeMax = cms.double(0.02),
    label = cms.VInputTag("hltL3TkTracksFromL2"),
    nint = cms.int32(50),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    tipTP = cms.double(3.5),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    useGsf = cms.bool(False),
    usemuon = cms.bool(False),
    associators = cms.vstring('OnlineTrackAssociatorByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    etaRes_rangeMax = cms.double(0.05),
    cotThetaRes_rangeMin = cms.double(-0.01),
    etaRes_rangeMin = cms.double(-0.05),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    phiRes_rangeMin = cms.double(-0.05),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    minPhi = cms.double(-3.1416),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    stableOnlyTP = cms.bool(False),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    maxVertpos = cms.double(5),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    usetracker = cms.bool(True),
    minHitTP = cms.int32(0),
    nintPhi = cms.int32(36),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minDxy = cms.double(-3)
)


process.l3TkMuonTrackV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL3TkTrackTrackAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("hltL3TkTracksFromL2"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(False),
    associators = cms.vstring('OnlineTrackAssociatorByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(True),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.postProcessorMuonMultiTrackHLT = cms.EDAnalyzer("DQMGenericClient",
    resolutionLimitedFit = cms.untracked.bool(False),
    resolution = cms.vstring("cotThetares_vs_eta \'#sigma(cot(#theta)) vs #eta\' cotThetares_vs_eta", 
        "cotThetares_vs_pt \'#sigma(cot(#theta)) vs p_{T}\' cotThetares_vs_pt", 
        "dxypull_vs_eta \'d_{xy} Pull vs #eta\' dxypull_vs_eta", 
        "dxyres_vs_eta \'#sigma(d_{xy}) vs #eta\' dxyres_vs_eta", 
        "dxyres_vs_pt \'#sigma(d_{xy}) vs p_{T}\' dxyres_vs_pt", 
        "dzpull_vs_eta \'d_{z} Pull vs #eta\' dzpull_vs_eta", 
        "dzres_vs_eta \'#sigma(d_{z}) vs #eta\' dzres_vs_eta", 
        "dzres_vs_pt \'#sigma(d_{z}) vs p_{T}\' dzres_vs_pt", 
        "etares_vs_eta \'#sigma(#eta) vs #eta\' etares_vs_eta", 
        "phipull_vs_eta \'#phi Pull vs #eta\' phipull_vs_eta", 
        "phipull_vs_phi \'#phi Pull vs #phi\' phipull_vs_phi", 
        "phires_vs_eta \'#sigma(#phi) vs #eta\' phires_vs_eta", 
        "phires_vs_phi \'#sigma(#phi) vs #phi\' phires_vs_phi", 
        "phires_vs_pt \'#sigma(#phi) vs p_{T}\' phires_vs_pt", 
        "ptpull_vs_eta \'p_{T} Pull vs #eta\' ptpull_vs_eta", 
        "ptpull_vs_phi \'p_{T} Pull vs #phi\' ptpull_vs_phi", 
        "ptres_vs_eta \'#sigma(p_{T}) vs #eta\' ptres_vs_eta", 
        "ptres_vs_phi \'#sigma(p_{T}) vs #phi\' ptres_vs_phi", 
        "ptres_vs_pt \'#sigma(p_{T}) vs p_{T}\' ptres_vs_pt", 
        "thetapull_vs_eta \'#theta Pull vs #eta\' thetapull_vs_eta", 
        "thetapull_vs_phi \'#theta Pull vs #phi\' thetapull_vs_phi"),
    subDirs = cms.untracked.vstring('HLT/Muon/MultiTrack/*'),
    outputFileName = cms.untracked.string(''),
    efficiency = cms.vstring("effic \'Efficiency vs #eta\' num_assoc(simToReco)_eta num_simul_eta", 
        "efficPt \'Efficiency vs p_{T}\' num_assoc(simToReco)_pT num_simul_pT", 
        "effic_vs_hit \'Efficiency vs n Hits\' num_assoc(simToReco)_hit num_simul_hit", 
        "effic_vs_phi \'Efficiency vs #phi\' num_assoc(simToReco)_phi num_simul_phi", 
        "effic_vs_dxy \'Efficiency vs Dxy\' num_assoc(simToReco)_dxy num_simul_dxy", 
        "effic_vs_dz \'Efficiency vs Dz\' num_assoc(simToReco)_dz num_simul_dz", 
        "fakerate \'Fake rate vs #eta\' num_assoc(recoToSim)_eta num_reco_eta fake", 
        "fakeratePt \'Fake rate vs p_{T}\' num_assoc(recoToSim)_pT num_reco_pT fake", 
        "fakerate_vs_hit \'Fake rate vs hit\' num_assoc(recoToSim)_hit num_reco_hit fake", 
        "fakerate_vs_phi \'Fake rate vs phi\' num_assoc(recoToSim)_phi num_reco_phi fake", 
        "fakerate_vs_dxy \'Fake rate vs dxy\' num_assoc(recoToSim)_dxy num_reco_dxy fake", 
        "fakerate_vs_dz \'Fake rate vs dz\' num_assoc(recoToSim)_dz num_reco_dz fake", 
        "effic_Q05 \'Efficiency vs #eta (Quality>0.5)\' num_assoc(simToReco)_eta_Q05 num_simul_eta", 
        "effic_Q075 \'Efficiency vs #eta (Quality>0.75)\' num_assoc(simToReco)_eta_Q075 num_simul_eta", 
        "efficPt_Q05 \'Efficiency vs p_{T} (Quality>0.5)\' num_assoc(simToReco)_pT_Q05 num_simul_pT", 
        "efficPt_Q075 \'Efficiency vs p_{T} (Quality>0.75)\' num_assoc(simToReco)_pT_Q075 num_simul_pT", 
        "effic_vs_phi_Q05 \'Efficiency vs #phi\' num_assoc(simToReco)_phi_Q05 num_simul_phi", 
        "effic_vs_phi_Q075 \'Efficiency vs #phi\' num_assoc(simToReco)_phi_Q075 num_simul_phi")
)


process.postProcessorMuonMultiTrackHLTComp = cms.EDAnalyzer("DQMGenericClient",
    efficiency = cms.vstring("Eff_L3Tk_Eta_mabh \'Eff_{L3,TK} vs #eta\' hltL3Muons_tpToL3MuonAssociation/effic hltL3TkFromL2_tpToL3TkMuonAssociation/effic", 
        "Eff_L3Tk_Pt_mabh \'Eff_{L3,TK} vs p_{T}\' hltL3Muons_tpToL3MuonAssociation/efficPt hltL3TkFromL2_tpToL3TkMuonAssociation/efficPt", 
        "Eff_L3Tk_Hit_mabh \'Eff_{L3,TK} vs n Hits\' hltL3Muons_tpToL3MuonAssociation/effic_vs_hit hltL3TkFromL2_tpToL3TkMuonAssociation/effic_vs_hit", 
        "Eff_L3L2_Eta_mabh \'Eff_{L3,L2} vs #eta\' hltL3Muons_tpToL3MuonAssociation/effic hltL2Muons_UpdatedAtVtx_tpToL2UpdMuonAssociation/effic", 
        "Eff_L3L2_Pt_mabh \'Eff_{L3,L2} vs p_{T}\' hltL3Muons_tpToL3MuonAssociation/efficPt hltL2Muons_UpdatedAtVtx_tpToL2UpdMuonAssociation/efficPt", 
        "Eff_L3L2_Hit_mabh \'Eff_{L3,L2} vs n Hits\' hltL3Muons_tpToL3MuonAssociation/effic_vs_hit hltL2Muons_UpdatedAtVtx_tpToL2UpdMuonAssociation/effic_vs_hit"),
    resolution = cms.vstring(''),
    subDirs = cms.untracked.vstring('HLT/Muon/MultiTrack/'),
    outputFileName = cms.untracked.string('')
)


process.postProcessorMuonMultiTrackHLTCompFS = cms.EDAnalyzer("DQMGenericClient",
    efficiency = cms.vstring("Eff_L3Tk_Eta_mabh \'Eff_{L3,TK} vs #eta\' hltL3Muons_tpToL3MuonAssociationFS/effic hltL3TkFromL2_tpToL3TkMuonAssociationFS/effic", 
        "Eff_L3Tk_Pt_mabh \'Eff_{L3,TK} vs p_{T}\' hltL3Muons_tpToL3MuonAssociationFS/efficPt hltL3TkFromL2_tpToL3TkMuonAssociationFS/efficPt", 
        "Eff_L3Tk_Hit_mabh \'Eff_{L3,TK} vs n Hits\' hltL3Muons_tpToL3MuonAssociationFS/effic_vs_hit hltL3TkFromL2_tpToL3TkMuonAssociationFS/effic_vs_hit", 
        "Eff_L3L2_Eta_mabh \'Eff_{L3,L2} vs #eta\' hltL3Muons_tpToL3MuonAssociationFS/effic hltL2Muons_UpdatedAtVtx_tpToL2UpdMuonAssociationFS/effic", 
        "Eff_L3L2_Pt_mabh \'Eff_{L3,L2} vs p_{T}\' hltL3Muons_tpToL3MuonAssociationFS/efficPt hltL2Muons_UpdatedAtVtx_tpToL2UpdMuonAssociationFS/efficPt", 
        "Eff_L3L2_Hit_mabh \'Eff_{L3,L2} vs n Hits\' hltL3Muons_tpToL3MuonAssociationFS/effic_vs_hit hltL2Muons_UpdatedAtVtx_tpToL2UpdMuonAssociationFS/effic_vs_hit"),
    resolution = cms.vstring(''),
    subDirs = cms.untracked.vstring('HLT/Muon/MultiTrack/'),
    outputFileName = cms.untracked.string('')
)


process.relvalMuonBits = cms.EDAnalyzer("HLTMonBitSummary",
    HLTPaths = cms.vstring('HLT_[^_]*Mu[^l_]*$'),
    histLabel = cms.untracked.string('Muon'),
    filterTypes = cms.untracked.vstring('HLTLevel1GTSeed', 
        'HLTPrescaler', 
        'HLTMuonL1Filter', 
        'HLTMuonL2PreFilter', 
        'HLTMuonDimuonL2Filter', 
        'HLTMuonL3PreFilter', 
        'HLTMuonDimuonL3Filter', 
        'HLTMuonIsoFilter'),
    denominator = cms.untracked.string('HLT_L1MuOpen'),
    denominatorWild = cms.untracked.string('HLT_L1Mu[^_]*$'),
    directory = cms.untracked.string('HLT/Muon'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.egammaValidationSequenceFS = cms.Sequence(process.dqmFeeder)


process.hltvalidation_prod = cms.Sequence()


process.hltassociation_fastsim = cms.Sequence()


process.HLTTauDQMOfflineCertification = cms.Sequence(process.hltTauOfflineCertification)


process.heavyFlavorValidationSequence = cms.Sequence(process.hfv1+process.hfv2+process.hfv3+process.hfv4+process.hfv5+process.hfv6)


process.HLTBTagValSeq = cms.Sequence(process.ValidationMCBTagIP3DFastPV)


process.recoMuonPostProcessorsHLTFastSim = cms.Sequence(process.postProcessorMuonMultiTrackHLT+process.postProcessorMuonMultiTrackHLTCompFS)


process.hltpostvalidation_prod = cms.Sequence(process.hltriggerFourVectorClient)


process.egammaSelectors = cms.Sequence(process.genpartWenu+process.fiducialWenu+process.genpartZee+process.fiducialZee+process.genpartGammaJet+process.fiducialGammaJet+process.genpartDiGamma+process.fiducialDiGamma)


process.hltvalidation_fastsim = cms.Sequence()


process.muonAssociationHLT_seq = cms.Sequence(process.tpToL2MuonAssociation+process.tpToL2UpdMuonAssociation+process.tpToL3MuonAssociation+process.tpToL3TkMuonAssociation)


process.muonValidationHLTFastSim_seq = cms.Sequence(process.l2MuonMuTrackFSV+process.l2UpdMuonMuTrackFSV+process.l3MuonMuTrackFSV+process.l3TkMuonMuTrackFSV)


process.HLTSusyExoValSeq_FastSim = cms.Sequence(process.HLTSusyExoValFastSim)


process.HLTTopPostVal = cms.Sequence(process.hltTopPostSemimu+process.hltTopPostSemiel+process.hltTopPostDimu+process.hltTopPostDiel+process.hltTopPostEmu+process.hltTopPostJet+process.hltTopPost4Jets)


process.HLTTauPostVal = cms.Sequence(process.HLTTauValPostAnalysis)


process.HLTFourVector = cms.Sequence(process.hltriggerResults)


process.SingleJetValidation = cms.Sequence(process.SingleJetPathVal15+process.SingleJetPathVal30+process.SingleJetPathVal50+process.SingleJetPathVal70+process.SingleJetPathVal100+process.SingleMETPathVal35+process.SingleMETPathVal45+process.SingleMETPathVal60+process.SingleMETPathVal100+process.HTMHTPath+process.QuadJetPathVal30+process.QuadJetPathVal60)


process.hltvalidation = cms.Sequence(process.HLTBTagValSeq)


process.recoMuonPostProcessorsHLT = cms.Sequence(process.postProcessorMuonMultiTrackHLT+process.postProcessorMuonMultiTrackHLTComp)


process.HLTSusyExoValSeq = cms.Sequence(process.HLTSusyExoVal)


process.heavyFlavorValidationHarvestingSequence = cms.Sequence(process.None+process.None+process.None+process.None+process.None+process.None+process.combiner)


process.hltMuonPostProcessors = cms.Sequence(process.hltMuonPostNonIso+process.hltMuonPostIso+process.hltMuonPostMain)


process.muonAssociationCosmic_seq = cms.Sequence(process.tpToTkCosmicMuonAssociation+process.tpToStaCosmicMuonAssociation+process.tpToGlbCosmicMuonAssociation)


process.muonValidationHLT_seq = cms.Sequence(process.l2MuonMuTrackV+process.l2UpdMuonMuTrackV+process.l3TkMuonMuTrackV+process.l3MuonMuTrackV)


process.egammaValidationSequence = cms.Sequence(process.dqmFeeder)


process.recoMuonValidationHLT_seq = cms.Sequence(process.muonAssociationHLT_seq+process.muonValidationHLT_seq)


process.HLTTauDQMOfflineQuality = cms.Sequence(process.hltTauOfflineQualityTests)


process.muonAssociationSET_seq = cms.Sequence(process.tpToStaSETMuonAssociation+process.tpToStaSETUpdMuonAssociation+process.tpToGlbSETMuonAssociation)


process.HLTHiggsPostVal = cms.Sequence(process.hltHiggsPostHgg+process.hltHiggsPostHWW+process.hltHiggsPostHZZ+process.hltHiggsPostH2tau+process.hltHiggsPostHtaunu)


process.HiggsValidationSequence = cms.Sequence(process.HLTHiggsBits_WWHWW+process.HLTHiggsBits_ggHgg+process.HLTHiggsBits_2tauH2tau+process.HLTHiggsBits_ZZHZZ+process.HLTHiggsBits_taunuHtaunu)


process.HLTMuonPostVal_FastSim = cms.Sequence(process.recoMuonPostProcessorsHLTFastSim+process.hltMuonPostProcessors)


process.HLTBTagHarvestingSequence = cms.Sequence(process.bTagharvest)


process.hltvalidation_preprod_fastsim = cms.Sequence()


process.recoMuonValidationHLTFastSim_seq = cms.Sequence(process.muonValidationHLTFastSim_seq)


process.muonAssociationTEV_seq = cms.Sequence(process.tpToTevFirstMuonAssociation+process.tpToTevPickyMuonAssociation+process.tpToTevDytMuonAssociation)


process.hltpostvalidation_preprod = cms.Sequence(process.HLTTauPostVal+process.HLTTopPostVal+process.hltriggerFourVectorClient+process.heavyFlavorValidationHarvestingSequence+process.SusyExoPostVal)


process.trigdqm_forValidation = cms.Sequence()


process.HLTJetMETRef = cms.Sequence(process.JetMETMCProducer)


process.HLTTauDQMOffline = cms.Sequence(process.TauRefProducer+process.hltTauOfflineMonitor_PFTaus+process.hltTauOfflineMonitor_Inclusive)


process.HLTTauPostProcess = cms.Sequence(process.HLTTauPostAnalysis)


process.hltJetMCTools = cms.Sequence(process.require_hltJets+process.hltPartons+process.hltJetsbyRef+process.hltJetsbyValPhys+process.hltJetsbyValAlgo)


process.extractedMuonTracks_seq = cms.Sequence(process.extractedGlobalMuons)


process.hltassociation = cms.Sequence(process.egammaSelectors)


process.HLTMuonPostVal = cms.Sequence(process.recoMuonPostProcessorsHLT+process.hltMuonPostProcessors)


process.hltvalidation_preprod = cms.Sequence()


process.muonAssociationHLTFastSim_seq = cms.Sequence(process.tpToL2MuonAssociationFS+process.tpToL2UpdMuonAssociationFS+process.tpToL3MuonAssociationFS+process.tpToL3TkMuonAssociationFS)


process.hltvalidation_withDQM = cms.Sequence(process.hltvalidation+process.trigdqm_forValidation)


process.hltTauRelvalQualityTests = cms.Sequence(process.hltTauQualityTesterForZ5E32)


process.HLTMuonVal = cms.Sequence(process.recoMuonValidationHLT_seq+process.hltMuonValidator+process.relvalMuonBits)


process.HLTJetMETValSeq = cms.Sequence(process.SingleJetValidation)


process.hltpostvalidation_fastsim = cms.Sequence(process.HLTMuonPostVal_FastSim+process.HLTTauPostVal+process.EgammaPostVal+process.hltriggerFourVectorClient+process.HLTTopPostVal+process.heavyFlavorValidationHarvestingSequence+process.JetMETPostVal+process.SusyExoPostVal+process.HLTHiggsPostVal)


process.hltvalidationqt = cms.Sequence(process.hltMuonQualityTester+process.hltTauRelvalQualityTests+process.hltHiggsQualityTester+process.hltTopQualityTester+process.hltJetMetQualityTester+process.hltSusyExoQualityTester)


process.HLTTauDQMOfflineHarvesting = cms.Sequence(process.HLTTauPostProcess)


process.hltpostvalidation = cms.Sequence(process.HLTBTagHarvestingSequence)


process.recoMuonAssociationHLTFastSim_seq = cms.Sequence(process.muonAssociationHLTFastSim_seq)


process.HLTMuonAss_FastSim = cms.Sequence(process.recoMuonAssociationHLTFastSim_seq)


process.muonAssociation_seq = cms.Sequence(process.extractedMuonTracks_seq+process.tpToTkMuonAssociation+process.tpToStaMuonAssociation+process.tpToStaUpdMuonAssociation+process.tpToGlbMuonAssociation+process.tpToTkmuTrackAssociation)


process.HLTMuonVal_FastSim = cms.Sequence(process.recoMuonValidationHLTFastSim_seq+process.hltMuonValidator)


process.muonAssociationFastSim_seq = cms.Sequence(process.extractedMuonTracks_seq+process.tpToTkMuonAssociationFS+process.tpToStaMuonAssociationFS+process.tpToStaUpdMuonAssociationFS+process.tpToGlbMuonAssociationFS+process.tpToTevFirstMuonAssociationFS+process.tpToTevPickyMuonAssociationFS+process.tpToTevDytMuonAssociationFS+process.tpToTkmuTrackAssociationFS)


process.validation = cms.Path(process.hltvalidation)


process.post_validation = cms.Path(process.hltpostvalidation)


process.extra_jetmctools = cms.Path(process.hltJetMCTools)


process.EDMtoMEconv_and_saver = cms.Path(process.EDMtoMEConverter+process.dqmSaver)


process.DQMStore = cms.Service("DQMStore",
    verboseQT = cms.untracked.int32(0),
    referenceFileName = cms.untracked.string(''),
    verbose = cms.untracked.int32(0),
    collateHistograms = cms.untracked.bool(False)
)


process.MessageLogger = cms.Service("MessageLogger",
    suppressInfo = cms.untracked.vstring(),
    debugs = cms.untracked.PSet(
        placeholder = cms.untracked.bool(True)
    ),
    suppressDebug = cms.untracked.vstring(),
    cout = cms.untracked.PSet(
        placeholder = cms.untracked.bool(True),
        DQMFileSaver = cms.untracked.PSet(
            limit = cms.untracked.int32(1000000)
        )
    ),
    cerr_stats = cms.untracked.PSet(
        threshold = cms.untracked.string('WARNING'),
        output = cms.untracked.string('cerr'),
        optionalPSet = cms.untracked.bool(True)
    ),
    warnings = cms.untracked.PSet(
        placeholder = cms.untracked.bool(True)
    ),
    default = cms.untracked.PSet(

    ),
    statistics = cms.untracked.vstring('cerr_stats'),
    cerr = cms.untracked.PSet(
        INFO = cms.untracked.PSet(
            limit = cms.untracked.int32(0)
        ),
        noTimeStamps = cms.untracked.bool(False),
        FwkReport = cms.untracked.PSet(
            reportEvery = cms.untracked.int32(1),
            optionalPSet = cms.untracked.bool(True),
            limit = cms.untracked.int32(10000000)
        ),
        default = cms.untracked.PSet(
            limit = cms.untracked.int32(10000000)
        ),
        Root_NoDictionary = cms.untracked.PSet(
            optionalPSet = cms.untracked.bool(True),
            limit = cms.untracked.int32(0)
        ),
        threshold = cms.untracked.string('INFO'),
        FwkJob = cms.untracked.PSet(
            optionalPSet = cms.untracked.bool(True),
            limit = cms.untracked.int32(0)
        ),
        FwkSummary = cms.untracked.PSet(
            reportEvery = cms.untracked.int32(1),
            optionalPSet = cms.untracked.bool(True),
            limit = cms.untracked.int32(10000000)
        ),
        optionalPSet = cms.untracked.bool(True),
        DQMFileSaver = cms.untracked.PSet(
            limit = cms.untracked.int32(1000000)
        )
    ),
    FrameworkJobReport = cms.untracked.PSet(
        default = cms.untracked.PSet(
            limit = cms.untracked.int32(0)
        ),
        optionalPSet = cms.untracked.bool(True),
        FwkJob = cms.untracked.PSet(
            optionalPSet = cms.untracked.bool(True),
            limit = cms.untracked.int32(10000000)
        )
    ),
    suppressWarning = cms.untracked.vstring(),
    errors = cms.untracked.PSet(
        placeholder = cms.untracked.bool(True)
    ),
    destinations = cms.untracked.vstring('warnings', 
        'errors', 
        'infos', 
        'debugs', 
        'cout', 
        'cerr'),
    debugModules = cms.untracked.vstring(),
    infos = cms.untracked.PSet(
        optionalPSet = cms.untracked.bool(True),
        Root_NoDictionary = cms.untracked.PSet(
            optionalPSet = cms.untracked.bool(True),
            limit = cms.untracked.int32(0)
        ),
        placeholder = cms.untracked.bool(True)
    ),
    categories = cms.untracked.vstring('FwkJob', 
        'FwkReport', 
        'FwkSummary', 
        'Root_NoDictionary', 
        'DQMFileSaver'),
    fwkJobReports = cms.untracked.vstring('FrameworkJobReport')
)


process.RandomNumberGeneratorService = cms.Service("RandomNumberGeneratorService",
    hiSignalG4SimHits = cms.PSet(
        initialSeed = cms.untracked.uint32(11),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    simCastorDigis = cms.PSet(
        initialSeed = cms.untracked.uint32(12345678),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    generator = cms.PSet(
        initialSeed = cms.untracked.uint32(123456789),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    simMuonRPCDigis = cms.PSet(
        initialSeed = cms.untracked.uint32(1234567),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    hiSignal = cms.PSet(
        initialSeed = cms.untracked.uint32(123456789),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    simEcalUnsuppressedDigis = cms.PSet(
        initialSeed = cms.untracked.uint32(1234567),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    saveFileName = cms.untracked.string(''),
    simSiStripDigis = cms.PSet(
        initialSeed = cms.untracked.uint32(1234567),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    mix = cms.PSet(
        initialSeed = cms.untracked.uint32(12345),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    simHcalUnsuppressedDigis = cms.PSet(
        initialSeed = cms.untracked.uint32(11223344),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    LHCTransport = cms.PSet(
        initialSeed = cms.untracked.uint32(87654321),
        engineName = cms.untracked.string('TRandom3')
    ),
    simMuonCSCDigis = cms.PSet(
        initialSeed = cms.untracked.uint32(11223344),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    mixData = cms.PSet(
        initialSeed = cms.untracked.uint32(12345),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    VtxSmeared = cms.PSet(
        initialSeed = cms.untracked.uint32(98765432),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    g4SimHits = cms.PSet(
        initialSeed = cms.untracked.uint32(11),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    simMuonDTDigis = cms.PSet(
        initialSeed = cms.untracked.uint32(1234567),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    simSiPixelDigis = cms.PSet(
        initialSeed = cms.untracked.uint32(1234567),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    hiSignalLHCTransport = cms.PSet(
        initialSeed = cms.untracked.uint32(88776655),
        engineName = cms.untracked.string('TRandom3')
    )
)


process.CSCGeometryESModule = cms.ESProducer("CSCGeometryESModule",
    appendToDataLabel = cms.string(''),
    useDDD = cms.bool(True),
    debugV = cms.untracked.bool(False),
    useGangedStripsInME1a = cms.bool(True),
    alignmentsLabel = cms.string(''),
    useOnlyWiresInME1a = cms.bool(False),
    useRealWireGeometry = cms.bool(True),
    useCentreTIOffsets = cms.bool(False),
    applyAlignment = cms.bool(True)
)


process.CaloGeometryBuilder = cms.ESProducer("CaloGeometryBuilder",
    SelectedCalos = cms.vstring('HCAL', 
        'ZDC', 
        'CASTOR', 
        'EcalBarrel', 
        'EcalEndcap', 
        'EcalPreshower', 
        'TOWER')
)


process.CaloTopologyBuilder = cms.ESProducer("CaloTopologyBuilder")


process.CaloTowerHardcodeGeometryEP = cms.ESProducer("CaloTowerHardcodeGeometryEP")


process.CastorHardcodeGeometryEP = cms.ESProducer("CastorHardcodeGeometryEP")


process.DTGeometryESModule = cms.ESProducer("DTGeometryESModule",
    appendToDataLabel = cms.string(''),
    fromDDD = cms.bool(True),
    applyAlignment = cms.bool(True),
    alignmentsLabel = cms.string('')
)


process.EcalBarrelGeometryEP = cms.ESProducer("EcalBarrelGeometryEP",
    applyAlignment = cms.bool(False)
)


process.EcalElectronicsMappingBuilder = cms.ESProducer("EcalElectronicsMappingBuilder")


process.EcalEndcapGeometryEP = cms.ESProducer("EcalEndcapGeometryEP",
    applyAlignment = cms.bool(False)
)


process.EcalPreshowerGeometryEP = cms.ESProducer("EcalPreshowerGeometryEP",
    applyAlignment = cms.bool(False)
)


process.EcalTrigTowerConstituentsMapBuilder = cms.ESProducer("EcalTrigTowerConstituentsMapBuilder",
    MapFile = cms.untracked.string('Geometry/EcalMapping/data/EndCap_TTMap.txt')
)


process.GlobalTrackingGeometryESProducer = cms.ESProducer("GlobalTrackingGeometryESProducer")


process.HcalHardcodeGeometryEP = cms.ESProducer("HcalHardcodeGeometryEP")


process.HcalTopologyIdealEP = cms.ESProducer("HcalTopologyIdealEP")


process.MuonDetLayerGeometryESProducer = cms.ESProducer("MuonDetLayerGeometryESProducer")


process.MuonNumberingInitialization = cms.ESProducer("MuonNumberingInitialization")


process.OnlineTrackAssociatorByHits = cms.ESProducer("TrackAssociatorByHitsESProducer",
    Quality_SimToReco = cms.double(0.5),
    ThreeHitTracksAreSpecial = cms.bool(False),
    UseGrouped = cms.bool(False),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    UseSplitting = cms.bool(False),
    Purity_SimToReco = cms.double(0.75),
    UsePixels = cms.bool(True),
    associateRecoTracks = cms.bool(True),
    AbsoluteNumberOfHits = cms.bool(False),
    associateStrip = cms.bool(True),
    Cut_RecoToSim = cms.double(0.75),
    SimToRecoDenominator = cms.string('sim'),
    ComponentName = cms.string('OnlineTrackAssociatorByHits')
)


process.RPCGeometryESModule = cms.ESProducer("RPCGeometryESModule",
    useDDD = cms.untracked.bool(True),
    compatibiltyWith11 = cms.untracked.bool(True)
)


process.TrackAssociatorByChi2ESProducer = cms.ESProducer("TrackAssociatorByChi2ESProducer",
    onlyDiagonal = cms.bool(False),
    chi2cut = cms.double(25.0),
    beamSpot = cms.InputTag("offlineBeamSpot")
)


process.TrackAssociatorByHits = cms.ESProducer("TrackAssociatorByHitsESProducer",
    Quality_SimToReco = cms.double(0.5),
    ThreeHitTracksAreSpecial = cms.bool(True),
    UseGrouped = cms.bool(True),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    UseSplitting = cms.bool(True),
    Purity_SimToReco = cms.double(0.75),
    UsePixels = cms.bool(True),
    associateRecoTracks = cms.bool(True),
    AbsoluteNumberOfHits = cms.bool(False),
    associateStrip = cms.bool(True),
    Cut_RecoToSim = cms.double(0.75),
    SimToRecoDenominator = cms.string('sim'),
    ComponentName = cms.string('TrackAssociatorByHits')
)


process.TrackAssociatorByPosDeltaR = cms.ESProducer("TrackAssociatorByPositionESProducer",
    QminCut = cms.double(120.0),
    MinIfNoMatch = cms.bool(False),
    ComponentName = cms.string('TrackAssociatorByDeltaR'),
    propagator = cms.string('SteppingHelixPropagatorAlong'),
    positionMinimumDistance = cms.double(0.0),
    QCut = cms.double(0.5),
    method = cms.string('momdr'),
    ConsiderAllSimHits = cms.bool(True)
)


process.TrackerDigiGeometryESModule = cms.ESProducer("TrackerDigiGeometryESModule",
    appendToDataLabel = cms.string(''),
    fromDDD = cms.bool(True),
    applyAlignment = cms.bool(True),
    alignmentsLabel = cms.string('')
)


process.TrackerGeometricDetESModule = cms.ESProducer("TrackerGeometricDetESModule",
    fromDDD = cms.bool(True)
)


process.TrackerRecoGeometryESProducer = cms.ESProducer("TrackerRecoGeometryESProducer")


process.ZdcHardcodeGeometryEP = cms.ESProducer("ZdcHardcodeGeometryEP")


process.fakeForIdealAlignment = cms.ESProducer("FakeAlignmentProducer",
    appendToDataLabel = cms.string('fakeForIdeal')
)


process.idealForDigiCSCGeometry = cms.ESProducer("CSCGeometryESModule",
    appendToDataLabel = cms.string('idealForDigi'),
    useDDD = cms.bool(True),
    debugV = cms.untracked.bool(False),
    useGangedStripsInME1a = cms.bool(True),
    alignmentsLabel = cms.string('fakeForIdeal'),
    useOnlyWiresInME1a = cms.bool(False),
    useRealWireGeometry = cms.bool(True),
    useCentreTIOffsets = cms.bool(False),
    applyAlignment = cms.bool(False)
)


process.idealForDigiDTGeometry = cms.ESProducer("DTGeometryESModule",
    appendToDataLabel = cms.string('idealForDigi'),
    fromDDD = cms.bool(True),
    applyAlignment = cms.bool(False),
    alignmentsLabel = cms.string('fakeForIdeal')
)


process.idealForDigiTrackerGeometry = cms.ESProducer("TrackerDigiGeometryESModule",
    appendToDataLabel = cms.string('idealForDigi'),
    fromDDD = cms.bool(True),
    applyAlignment = cms.bool(False),
    alignmentsLabel = cms.string('fakeForIdeal')
)


process.l1GtBoardMaps = cms.ESProducer("L1GtBoardMapsTrivialProducer",
    CableList = cms.vstring('Free', 
        'Free', 
        'Free', 
        'TechTr', 
        'IsoEGQ', 
        'NoIsoEGQ', 
        'CenJetQ', 
        'ForJetQ', 
        'TauJetQ', 
        'ESumsQ', 
        'HfQ', 
        'Free', 
        'Free', 
        'Free', 
        'Free', 
        'Free', 
        'MQF4', 
        'MQF3', 
        'MQB2', 
        'MQB1', 
        'MQF8', 
        'MQF7', 
        'MQB6', 
        'MQB5', 
        'MQF12', 
        'MQF11', 
        'MQB10', 
        'MQB9'),
    ActiveBoardsDaqRecord = cms.vint32(-1, 0, 1, 2, 3, 
        4, 5, 6, 7, 8, 
        -1, -1),
    CableToPsbMap = cms.vint32(0, 0, 0, 0, 1, 
        1, 1, 1, 2, 2, 
        2, 2, 3, 3, 3, 
        3, 4, 4, 4, 4, 
        5, 5, 5, 5, 6, 
        6, 6, 6),
    BoardPositionDaqRecord = cms.vint32(1, 2, 3, 4, 5, 
        6, 7, 8, 9, 10, 
        -1, -1),
    BoardPositionEvmRecord = cms.vint32(1, 3, -1, -1, -1, 
        -1, -1, -1, -1, -1, 
        2, -1),
    BoardList = cms.vstring('GTFE', 
        'FDL', 
        'PSB', 
        'PSB', 
        'PSB', 
        'PSB', 
        'PSB', 
        'PSB', 
        'PSB', 
        'GMT', 
        'TCS', 
        'TIM'),
    PsbInput = cms.VPSet(cms.PSet(
        Slot = cms.int32(9),
        Ch0 = cms.vstring('TechTrig'),
        Ch1 = cms.vstring('TechTrig'),
        Ch2 = cms.vstring(),
        Ch3 = cms.vstring(),
        Ch4 = cms.vstring(),
        Ch5 = cms.vstring(),
        Ch6 = cms.vstring(),
        Ch7 = cms.vstring()
    ), 
        cms.PSet(
            Slot = cms.int32(13),
            Ch0 = cms.vstring('ForJet', 
                'ForJet'),
            Ch1 = cms.vstring('ForJet', 
                'ForJet'),
            Ch2 = cms.vstring('CenJet', 
                'CenJet'),
            Ch3 = cms.vstring('CenJet', 
                'CenJet'),
            Ch4 = cms.vstring('NoIsoEG', 
                'NoIsoEG'),
            Ch5 = cms.vstring('NoIsoEG', 
                'NoIsoEG'),
            Ch6 = cms.vstring('IsoEG', 
                'IsoEG'),
            Ch7 = cms.vstring('IsoEG', 
                'IsoEG')
        ), 
        cms.PSet(
            Slot = cms.int32(14),
            Ch0 = cms.vstring(),
            Ch1 = cms.vstring(),
            Ch2 = cms.vstring('HfBitCounts', 
                'HfRingEtSums'),
            Ch3 = cms.vstring(),
            Ch4 = cms.vstring('ETT', 
                'HTT'),
            Ch5 = cms.vstring('ETM', 
                'ETM'),
            Ch6 = cms.vstring('TauJet', 
                'TauJet'),
            Ch7 = cms.vstring('TauJet', 
                'TauJet')
        ), 
        cms.PSet(
            Slot = cms.int32(15),
            Ch0 = cms.vstring(),
            Ch1 = cms.vstring(),
            Ch2 = cms.vstring(),
            Ch3 = cms.vstring(),
            Ch4 = cms.vstring(),
            Ch5 = cms.vstring(),
            Ch6 = cms.vstring(),
            Ch7 = cms.vstring()
        ), 
        cms.PSet(
            Slot = cms.int32(19),
            Ch0 = cms.vstring(),
            Ch1 = cms.vstring(),
            Ch2 = cms.vstring(),
            Ch3 = cms.vstring(),
            Ch4 = cms.vstring(),
            Ch5 = cms.vstring(),
            Ch6 = cms.vstring(),
            Ch7 = cms.vstring()
        ), 
        cms.PSet(
            Slot = cms.int32(20),
            Ch0 = cms.vstring(),
            Ch1 = cms.vstring(),
            Ch2 = cms.vstring(),
            Ch3 = cms.vstring(),
            Ch4 = cms.vstring(),
            Ch5 = cms.vstring(),
            Ch6 = cms.vstring(),
            Ch7 = cms.vstring()
        ), 
        cms.PSet(
            Slot = cms.int32(21),
            Ch0 = cms.vstring(),
            Ch1 = cms.vstring(),
            Ch2 = cms.vstring(),
            Ch3 = cms.vstring(),
            Ch4 = cms.vstring(),
            Ch5 = cms.vstring(),
            Ch6 = cms.vstring(),
            Ch7 = cms.vstring()
        )),
    BoardHexNameMap = cms.vint32(0, 253, 187, 187, 187, 
        187, 187, 187, 187, 221, 
        204, 173),
    ActiveBoardsEvmRecord = cms.vint32(-1, 1, -1, -1, -1, 
        -1, -1, -1, -1, -1, 
        0, -1),
    BoardSlotMap = cms.vint32(17, 10, 9, 13, 14, 
        15, 19, 20, 21, 18, 
        7, 16),
    BoardIndex = cms.vint32(0, 0, 0, 1, 2, 
        3, 4, 5, 6, 0, 
        0, 0)
)


process.l1GtParameters = cms.ESProducer("L1GtParametersTrivialProducer",
    EvmActiveBoards = cms.uint32(65535),
    DaqNrBxBoard = cms.vint32(3, 3, 3, 3, 3, 
        3, 3, 3, 3),
    DaqActiveBoards = cms.uint32(65535),
    TotalBxInEvent = cms.int32(3),
    EvmNrBxBoard = cms.vint32(1, 3),
    BstLengthBytes = cms.uint32(30)
)


process.l1GtPrescaleFactorsAlgoTrig = cms.ESProducer("L1GtPrescaleFactorsAlgoTrigTrivialProducer",
    PrescaleFactorsSet = cms.VPSet(cms.PSet(
        PrescaleFactors = cms.vint32(1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1)
    ), 
        cms.PSet(
            PrescaleFactors = cms.vint32(1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1)
        ), 
        cms.PSet(
            PrescaleFactors = cms.vint32(1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1)
        ), 
        cms.PSet(
            PrescaleFactors = cms.vint32(1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1)
        ), 
        cms.PSet(
            PrescaleFactors = cms.vint32(1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1)
        ), 
        cms.PSet(
            PrescaleFactors = cms.vint32(1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1)
        ), 
        cms.PSet(
            PrescaleFactors = cms.vint32(1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1)
        ), 
        cms.PSet(
            PrescaleFactors = cms.vint32(1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1)
        ), 
        cms.PSet(
            PrescaleFactors = cms.vint32(1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1)
        ), 
        cms.PSet(
            PrescaleFactors = cms.vint32(1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1)
        ))
)


process.l1GtPrescaleFactorsTechTrig = cms.ESProducer("L1GtPrescaleFactorsTechTrigTrivialProducer",
    PrescaleFactorsSet = cms.VPSet(cms.PSet(
        PrescaleFactors = cms.vint32(1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1)
    ), 
        cms.PSet(
            PrescaleFactors = cms.vint32(1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1)
        ), 
        cms.PSet(
            PrescaleFactors = cms.vint32(1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1)
        ), 
        cms.PSet(
            PrescaleFactors = cms.vint32(1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1)
        ), 
        cms.PSet(
            PrescaleFactors = cms.vint32(1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1)
        ), 
        cms.PSet(
            PrescaleFactors = cms.vint32(1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1)
        ), 
        cms.PSet(
            PrescaleFactors = cms.vint32(1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1)
        ), 
        cms.PSet(
            PrescaleFactors = cms.vint32(1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1)
        ), 
        cms.PSet(
            PrescaleFactors = cms.vint32(1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1)
        ), 
        cms.PSet(
            PrescaleFactors = cms.vint32(1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1)
        ))
)


process.l1GtPsbSetup = cms.ESProducer("L1GtPsbSetupTrivialProducer",
    PsbSetup = cms.VPSet(cms.PSet(
        Slot = cms.int32(9),
        Ch1SendLvds = cms.bool(True),
        Ch0SendLvds = cms.bool(True),
        EnableRecSerLink = cms.vuint32(0, 0, 0, 0, 0, 
            0, 0, 0),
        EnableRecLvds = cms.vuint32(1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1, 1, 1, 1, 1, 
            1)
    ), 
        cms.PSet(
            Slot = cms.int32(13),
            Ch1SendLvds = cms.bool(False),
            Ch0SendLvds = cms.bool(False),
            EnableRecSerLink = cms.vuint32(1, 1, 1, 1, 1, 
                1, 1, 1),
            EnableRecLvds = cms.vuint32(0, 0, 0, 0, 0, 
                0, 0, 0, 0, 0, 
                0, 0, 0, 0, 0, 
                0)
        ), 
        cms.PSet(
            Slot = cms.int32(14),
            Ch1SendLvds = cms.bool(False),
            Ch0SendLvds = cms.bool(False),
            EnableRecSerLink = cms.vuint32(1, 1, 1, 1, 1, 
                1, 1, 1),
            EnableRecLvds = cms.vuint32(0, 0, 0, 0, 0, 
                0, 0, 0, 0, 0, 
                0, 0, 0, 0, 0, 
                0)
        ), 
        cms.PSet(
            Slot = cms.int32(15),
            Ch1SendLvds = cms.bool(True),
            Ch0SendLvds = cms.bool(True),
            EnableRecSerLink = cms.vuint32(0, 0, 0, 0, 0, 
                0, 0, 0),
            EnableRecLvds = cms.vuint32(1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1)
        ), 
        cms.PSet(
            Slot = cms.int32(19),
            Ch1SendLvds = cms.bool(False),
            Ch0SendLvds = cms.bool(False),
            EnableRecSerLink = cms.vuint32(0, 0, 0, 0, 0, 
                0, 0, 0),
            EnableRecLvds = cms.vuint32(0, 0, 0, 0, 0, 
                0, 0, 0, 0, 0, 
                0, 0, 0, 0, 0, 
                0)
        ), 
        cms.PSet(
            Slot = cms.int32(20),
            Ch1SendLvds = cms.bool(False),
            Ch0SendLvds = cms.bool(False),
            EnableRecSerLink = cms.vuint32(0, 0, 0, 0, 0, 
                0, 0, 0),
            EnableRecLvds = cms.vuint32(0, 0, 0, 0, 0, 
                0, 0, 0, 0, 0, 
                0, 0, 0, 0, 0, 
                0)
        ), 
        cms.PSet(
            Slot = cms.int32(21),
            Ch1SendLvds = cms.bool(False),
            Ch0SendLvds = cms.bool(False),
            EnableRecSerLink = cms.vuint32(0, 0, 0, 0, 0, 
                0, 0, 0),
            EnableRecLvds = cms.vuint32(0, 0, 0, 0, 0, 
                0, 0, 0, 0, 0, 
                0, 0, 0, 0, 0, 
                0)
        ))
)


process.l1GtStableParameters = cms.ESProducer("L1GtStableParametersTrivialProducer",
    NumberL1IsoEG = cms.uint32(4),
    NumberL1JetCounts = cms.uint32(12),
    UnitLength = cms.int32(8),
    NumberL1ForJet = cms.uint32(4),
    IfCaloEtaNumberBits = cms.uint32(4),
    IfMuEtaNumberBits = cms.uint32(6),
    NumberL1TauJet = cms.uint32(4),
    NumberPsbBoards = cms.int32(7),
    NumberConditionChips = cms.uint32(2),
    NumberL1Mu = cms.uint32(4),
    NumberL1CenJet = cms.uint32(4),
    NumberPhysTriggers = cms.uint32(128),
    PinsOnConditionChip = cms.uint32(96),
    NumberTechnicalTriggers = cms.uint32(64),
    OrderConditionChip = cms.vint32(2, 1),
    NumberPhysTriggersExtended = cms.uint32(64),
    WordLength = cms.int32(64),
    NumberL1NoIsoEG = cms.uint32(4)
)


process.l1GtTriggerMaskAlgoTrig = cms.ESProducer("L1GtTriggerMaskAlgoTrigTrivialProducer",
    TriggerMask = cms.vuint32(0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0)
)


process.l1GtTriggerMaskTechTrig = cms.ESProducer("L1GtTriggerMaskTechTrigTrivialProducer",
    TriggerMask = cms.vuint32(0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0)
)


process.l1GtTriggerMaskVetoAlgoTrig = cms.ESProducer("L1GtTriggerMaskVetoAlgoTrigTrivialProducer",
    TriggerMask = cms.vuint32(0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0)
)


process.l1GtTriggerMaskVetoTechTrig = cms.ESProducer("L1GtTriggerMaskVetoTechTrigTrivialProducer",
    TriggerMask = cms.vuint32(0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0)
)


process.l1GtTriggerMenuXml = cms.ESProducer("L1GtTriggerMenuXmlProducer",
    VmeXmlFile = cms.string(''),
    DefXmlFile = cms.string('L1Menu_Commissioning2009_v1_L1T_Scales_20080926_startup_Imp0.xml'),
    TriggerMenuLuminosity = cms.string('startup')
)


process.HepPDTESSource = cms.ESSource("HepPDTESSource",
    pdtFileName = cms.FileInPath('SimGeneral/HepPDTESSource/data/pythiaparticle.tbl')
)


process.L1GtBoardMapsRcdSource = cms.ESSource("EmptyESSource",
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('L1GtBoardMapsRcd'),
    firstValid = cms.vuint32(1)
)


process.L1GtParametersRcdSource = cms.ESSource("EmptyESSource",
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('L1GtParametersRcd'),
    firstValid = cms.vuint32(1)
)


process.L1GtPrescaleFactorsAlgoTrigRcdSource = cms.ESSource("EmptyESSource",
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('L1GtPrescaleFactorsAlgoTrigRcd'),
    firstValid = cms.vuint32(1)
)


process.L1GtPrescaleFactorsTechTrigRcdSource = cms.ESSource("EmptyESSource",
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('L1GtPrescaleFactorsTechTrigRcd'),
    firstValid = cms.vuint32(1)
)


process.L1GtPsbSetupRcdSource = cms.ESSource("EmptyESSource",
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('L1GtPsbSetupRcd'),
    firstValid = cms.vuint32(1)
)


process.L1GtStableParametersRcdSource = cms.ESSource("EmptyESSource",
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('L1GtStableParametersRcd'),
    firstValid = cms.vuint32(1)
)


process.L1GtTriggerMaskAlgoTrigRcdSource = cms.ESSource("EmptyESSource",
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('L1GtTriggerMaskAlgoTrigRcd'),
    firstValid = cms.vuint32(1)
)


process.L1GtTriggerMaskTechTrigRcdSource = cms.ESSource("EmptyESSource",
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('L1GtTriggerMaskTechTrigRcd'),
    firstValid = cms.vuint32(1)
)


process.L1GtTriggerMaskVetoAlgoTrigRcdSource = cms.ESSource("EmptyESSource",
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('L1GtTriggerMaskVetoAlgoTrigRcd'),
    firstValid = cms.vuint32(1)
)


process.L1GtTriggerMaskVetoTechTrigRcdSource = cms.ESSource("EmptyESSource",
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('L1GtTriggerMaskVetoTechTrigRcd'),
    firstValid = cms.vuint32(1)
)


process.L1GtTriggerMenuRcdSource = cms.ESSource("EmptyESSource",
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('L1GtTriggerMenuRcd'),
    firstValid = cms.vuint32(1)
)


process.XMLIdealGeometryESSource = cms.ESSource("XMLIdealGeometryESSource",
    geomXMLFiles = cms.vstring('Geometry/CMSCommonData/data/materials.xml', 
        'Geometry/CMSCommonData/data/rotations.xml', 
        'Geometry/CMSCommonData/data/normal/cmsextent.xml', 
        'Geometry/CMSCommonData/data/cms.xml', 
        'Geometry/CMSCommonData/data/cmsMother.xml', 
        'Geometry/CMSCommonData/data/cmsTracker.xml', 
        'Geometry/CMSCommonData/data/caloBase.xml', 
        'Geometry/CMSCommonData/data/cmsCalo.xml', 
        'Geometry/CMSCommonData/data/muonBase.xml', 
        'Geometry/CMSCommonData/data/cmsMuon.xml', 
        'Geometry/CMSCommonData/data/mgnt.xml', 
        'Geometry/CMSCommonData/data/beampipe.xml', 
        'Geometry/CMSCommonData/data/cmsBeam.xml', 
        'Geometry/CMSCommonData/data/muonMB.xml', 
        'Geometry/CMSCommonData/data/muonMagnet.xml', 
        'Geometry/TrackerCommonData/data/pixfwdMaterials.xml', 
        'Geometry/TrackerCommonData/data/pixfwdCommon.xml', 
        'Geometry/TrackerCommonData/data/pixfwdPlaq.xml', 
        'Geometry/TrackerCommonData/data/pixfwdPlaq1x2.xml', 
        'Geometry/TrackerCommonData/data/pixfwdPlaq1x5.xml', 
        'Geometry/TrackerCommonData/data/pixfwdPlaq2x3.xml', 
        'Geometry/TrackerCommonData/data/pixfwdPlaq2x4.xml', 
        'Geometry/TrackerCommonData/data/pixfwdPlaq2x5.xml', 
        'Geometry/TrackerCommonData/data/pixfwdPanelBase.xml', 
        'Geometry/TrackerCommonData/data/pixfwdPanel.xml', 
        'Geometry/TrackerCommonData/data/pixfwdBlade.xml', 
        'Geometry/TrackerCommonData/data/pixfwdNipple.xml', 
        'Geometry/TrackerCommonData/data/pixfwdDisk.xml', 
        'Geometry/TrackerCommonData/data/pixfwdCylinder.xml', 
        'Geometry/TrackerCommonData/data/pixfwd.xml', 
        'Geometry/TrackerCommonData/data/pixbarmaterial.xml', 
        'Geometry/TrackerCommonData/data/pixbarladder.xml', 
        'Geometry/TrackerCommonData/data/pixbarladderfull.xml', 
        'Geometry/TrackerCommonData/data/pixbarladderhalf.xml', 
        'Geometry/TrackerCommonData/data/pixbarlayer.xml', 
        'Geometry/TrackerCommonData/data/pixbarlayer0.xml', 
        'Geometry/TrackerCommonData/data/pixbarlayer1.xml', 
        'Geometry/TrackerCommonData/data/pixbarlayer2.xml', 
        'Geometry/TrackerCommonData/data/pixbar.xml', 
        'Geometry/TrackerCommonData/data/tibtidcommonmaterial.xml', 
        'Geometry/TrackerCommonData/data/tibmaterial.xml', 
        'Geometry/TrackerCommonData/data/tibmodpar.xml', 
        'Geometry/TrackerCommonData/data/tibmodule0.xml', 
        'Geometry/TrackerCommonData/data/tibmodule0a.xml', 
        'Geometry/TrackerCommonData/data/tibmodule0b.xml', 
        'Geometry/TrackerCommonData/data/tibmodule2.xml', 
        'Geometry/TrackerCommonData/data/tibstringpar.xml', 
        'Geometry/TrackerCommonData/data/tibstring0ll.xml', 
        'Geometry/TrackerCommonData/data/tibstring0lr.xml', 
        'Geometry/TrackerCommonData/data/tibstring0ul.xml', 
        'Geometry/TrackerCommonData/data/tibstring0ur.xml', 
        'Geometry/TrackerCommonData/data/tibstring0.xml', 
        'Geometry/TrackerCommonData/data/tibstring1ll.xml', 
        'Geometry/TrackerCommonData/data/tibstring1lr.xml', 
        'Geometry/TrackerCommonData/data/tibstring1ul.xml', 
        'Geometry/TrackerCommonData/data/tibstring1ur.xml', 
        'Geometry/TrackerCommonData/data/tibstring1.xml', 
        'Geometry/TrackerCommonData/data/tibstring2ll.xml', 
        'Geometry/TrackerCommonData/data/tibstring2lr.xml', 
        'Geometry/TrackerCommonData/data/tibstring2ul.xml', 
        'Geometry/TrackerCommonData/data/tibstring2ur.xml', 
        'Geometry/TrackerCommonData/data/tibstring2.xml', 
        'Geometry/TrackerCommonData/data/tibstring3ll.xml', 
        'Geometry/TrackerCommonData/data/tibstring3lr.xml', 
        'Geometry/TrackerCommonData/data/tibstring3ul.xml', 
        'Geometry/TrackerCommonData/data/tibstring3ur.xml', 
        'Geometry/TrackerCommonData/data/tibstring3.xml', 
        'Geometry/TrackerCommonData/data/tiblayerpar.xml', 
        'Geometry/TrackerCommonData/data/tiblayer0.xml', 
        'Geometry/TrackerCommonData/data/tiblayer1.xml', 
        'Geometry/TrackerCommonData/data/tiblayer2.xml', 
        'Geometry/TrackerCommonData/data/tiblayer3.xml', 
        'Geometry/TrackerCommonData/data/tib.xml', 
        'Geometry/TrackerCommonData/data/tidmaterial.xml', 
        'Geometry/TrackerCommonData/data/tidmodpar.xml', 
        'Geometry/TrackerCommonData/data/tidmodule0.xml', 
        'Geometry/TrackerCommonData/data/tidmodule0r.xml', 
        'Geometry/TrackerCommonData/data/tidmodule0l.xml', 
        'Geometry/TrackerCommonData/data/tidmodule1.xml', 
        'Geometry/TrackerCommonData/data/tidmodule1r.xml', 
        'Geometry/TrackerCommonData/data/tidmodule1l.xml', 
        'Geometry/TrackerCommonData/data/tidmodule2.xml', 
        'Geometry/TrackerCommonData/data/tidringpar.xml', 
        'Geometry/TrackerCommonData/data/tidring0.xml', 
        'Geometry/TrackerCommonData/data/tidring0f.xml', 
        'Geometry/TrackerCommonData/data/tidring0b.xml', 
        'Geometry/TrackerCommonData/data/tidring1.xml', 
        'Geometry/TrackerCommonData/data/tidring1f.xml', 
        'Geometry/TrackerCommonData/data/tidring1b.xml', 
        'Geometry/TrackerCommonData/data/tidring2.xml', 
        'Geometry/TrackerCommonData/data/tid.xml', 
        'Geometry/TrackerCommonData/data/tidf.xml', 
        'Geometry/TrackerCommonData/data/tidb.xml', 
        'Geometry/TrackerCommonData/data/tibtidservices.xml', 
        'Geometry/TrackerCommonData/data/tibtidservicesf.xml', 
        'Geometry/TrackerCommonData/data/tibtidservicesb.xml', 
        'Geometry/TrackerCommonData/data/tobmaterial.xml', 
        'Geometry/TrackerCommonData/data/tobmodpar.xml', 
        'Geometry/TrackerCommonData/data/tobmodule0.xml', 
        'Geometry/TrackerCommonData/data/tobmodule2.xml', 
        'Geometry/TrackerCommonData/data/tobmodule4.xml', 
        'Geometry/TrackerCommonData/data/tobrodpar.xml', 
        'Geometry/TrackerCommonData/data/tobrod0c.xml', 
        'Geometry/TrackerCommonData/data/tobrod0l.xml', 
        'Geometry/TrackerCommonData/data/tobrod0h.xml', 
        'Geometry/TrackerCommonData/data/tobrod0.xml', 
        'Geometry/TrackerCommonData/data/tobrod1l.xml', 
        'Geometry/TrackerCommonData/data/tobrod1h.xml', 
        'Geometry/TrackerCommonData/data/tobrod1.xml', 
        'Geometry/TrackerCommonData/data/tobrod2c.xml', 
        'Geometry/TrackerCommonData/data/tobrod2l.xml', 
        'Geometry/TrackerCommonData/data/tobrod2h.xml', 
        'Geometry/TrackerCommonData/data/tobrod2.xml', 
        'Geometry/TrackerCommonData/data/tobrod3l.xml', 
        'Geometry/TrackerCommonData/data/tobrod3h.xml', 
        'Geometry/TrackerCommonData/data/tobrod3.xml', 
        'Geometry/TrackerCommonData/data/tobrod4c.xml', 
        'Geometry/TrackerCommonData/data/tobrod4l.xml', 
        'Geometry/TrackerCommonData/data/tobrod4h.xml', 
        'Geometry/TrackerCommonData/data/tobrod4.xml', 
        'Geometry/TrackerCommonData/data/tobrod5l.xml', 
        'Geometry/TrackerCommonData/data/tobrod5h.xml', 
        'Geometry/TrackerCommonData/data/tobrod5.xml', 
        'Geometry/TrackerCommonData/data/tob.xml', 
        'Geometry/TrackerCommonData/data/tecmaterial.xml', 
        'Geometry/TrackerCommonData/data/tecmodpar.xml', 
        'Geometry/TrackerCommonData/data/tecmodule0.xml', 
        'Geometry/TrackerCommonData/data/tecmodule0r.xml', 
        'Geometry/TrackerCommonData/data/tecmodule0s.xml', 
        'Geometry/TrackerCommonData/data/tecmodule1.xml', 
        'Geometry/TrackerCommonData/data/tecmodule1r.xml', 
        'Geometry/TrackerCommonData/data/tecmodule1s.xml', 
        'Geometry/TrackerCommonData/data/tecmodule2.xml', 
        'Geometry/TrackerCommonData/data/tecmodule3.xml', 
        'Geometry/TrackerCommonData/data/tecmodule4.xml', 
        'Geometry/TrackerCommonData/data/tecmodule4r.xml', 
        'Geometry/TrackerCommonData/data/tecmodule4s.xml', 
        'Geometry/TrackerCommonData/data/tecmodule5.xml', 
        'Geometry/TrackerCommonData/data/tecmodule6.xml', 
        'Geometry/TrackerCommonData/data/tecpetpar.xml', 
        'Geometry/TrackerCommonData/data/tecring0.xml', 
        'Geometry/TrackerCommonData/data/tecring1.xml', 
        'Geometry/TrackerCommonData/data/tecring2.xml', 
        'Geometry/TrackerCommonData/data/tecring3.xml', 
        'Geometry/TrackerCommonData/data/tecring4.xml', 
        'Geometry/TrackerCommonData/data/tecring5.xml', 
        'Geometry/TrackerCommonData/data/tecring6.xml', 
        'Geometry/TrackerCommonData/data/tecring0f.xml', 
        'Geometry/TrackerCommonData/data/tecring1f.xml', 
        'Geometry/TrackerCommonData/data/tecring2f.xml', 
        'Geometry/TrackerCommonData/data/tecring3f.xml', 
        'Geometry/TrackerCommonData/data/tecring4f.xml', 
        'Geometry/TrackerCommonData/data/tecring5f.xml', 
        'Geometry/TrackerCommonData/data/tecring6f.xml', 
        'Geometry/TrackerCommonData/data/tecring0b.xml', 
        'Geometry/TrackerCommonData/data/tecring1b.xml', 
        'Geometry/TrackerCommonData/data/tecring2b.xml', 
        'Geometry/TrackerCommonData/data/tecring3b.xml', 
        'Geometry/TrackerCommonData/data/tecring4b.xml', 
        'Geometry/TrackerCommonData/data/tecring5b.xml', 
        'Geometry/TrackerCommonData/data/tecring6b.xml', 
        'Geometry/TrackerCommonData/data/tecpetalf.xml', 
        'Geometry/TrackerCommonData/data/tecpetalb.xml', 
        'Geometry/TrackerCommonData/data/tecpetal0.xml', 
        'Geometry/TrackerCommonData/data/tecpetal0f.xml', 
        'Geometry/TrackerCommonData/data/tecpetal0b.xml', 
        'Geometry/TrackerCommonData/data/tecpetal3.xml', 
        'Geometry/TrackerCommonData/data/tecpetal3f.xml', 
        'Geometry/TrackerCommonData/data/tecpetal3b.xml', 
        'Geometry/TrackerCommonData/data/tecpetal6f.xml', 
        'Geometry/TrackerCommonData/data/tecpetal6b.xml', 
        'Geometry/TrackerCommonData/data/tecpetal8f.xml', 
        'Geometry/TrackerCommonData/data/tecpetal8b.xml', 
        'Geometry/TrackerCommonData/data/tecwheel.xml', 
        'Geometry/TrackerCommonData/data/tecwheela.xml', 
        'Geometry/TrackerCommonData/data/tecwheelb.xml', 
        'Geometry/TrackerCommonData/data/tecwheelc.xml', 
        'Geometry/TrackerCommonData/data/tecwheeld.xml', 
        'Geometry/TrackerCommonData/data/tecwheel6.xml', 
        'Geometry/TrackerCommonData/data/tecservices.xml', 
        'Geometry/TrackerCommonData/data/tecbackplate.xml', 
        'Geometry/TrackerCommonData/data/tec.xml', 
        'Geometry/TrackerCommonData/data/trackermaterial.xml', 
        'Geometry/TrackerCommonData/data/tracker.xml', 
        'Geometry/TrackerCommonData/data/trackerpixbar.xml', 
        'Geometry/TrackerCommonData/data/trackerpixfwd.xml', 
        'Geometry/TrackerCommonData/data/trackertibtidservices.xml', 
        'Geometry/TrackerCommonData/data/trackertib.xml', 
        'Geometry/TrackerCommonData/data/trackertid.xml', 
        'Geometry/TrackerCommonData/data/trackertob.xml', 
        'Geometry/TrackerCommonData/data/trackertec.xml', 
        'Geometry/TrackerCommonData/data/trackerbulkhead.xml', 
        'Geometry/TrackerCommonData/data/trackerother.xml', 
        'Geometry/EcalCommonData/data/eregalgo.xml', 
        'Geometry/EcalCommonData/data/ebalgo.xml', 
        'Geometry/EcalCommonData/data/ebcon.xml', 
        'Geometry/EcalCommonData/data/ebrot.xml', 
        'Geometry/EcalCommonData/data/eecon.xml', 
        'Geometry/EcalCommonData/data/eefixed.xml', 
        'Geometry/EcalCommonData/data/eehier.xml', 
        'Geometry/EcalCommonData/data/eealgo.xml', 
        'Geometry/EcalCommonData/data/escon.xml', 
        'Geometry/EcalCommonData/data/esalgo.xml', 
        'Geometry/EcalCommonData/data/eeF.xml', 
        'Geometry/EcalCommonData/data/eeB.xml', 
        'Geometry/HcalCommonData/data/hcalrotations.xml', 
        'Geometry/HcalCommonData/data/hcalalgo.xml', 
        'Geometry/HcalCommonData/data/hcalbarrelalgo.xml', 
        'Geometry/HcalCommonData/data/hcalendcapalgo.xml', 
        'Geometry/HcalCommonData/data/hcalouteralgo.xml', 
        'Geometry/HcalCommonData/data/hcalforwardalgo.xml', 
        'Geometry/HcalCommonData/data/average/hcalforwardmaterial.xml', 
        'Geometry/MuonCommonData/data/mbCommon.xml', 
        'Geometry/MuonCommonData/data/mb1.xml', 
        'Geometry/MuonCommonData/data/mb2.xml', 
        'Geometry/MuonCommonData/data/mb3.xml', 
        'Geometry/MuonCommonData/data/mb4.xml', 
        'Geometry/MuonCommonData/data/muonYoke.xml', 
        'Geometry/MuonCommonData/data/mf.xml', 
        'Geometry/ForwardCommonData/data/forward.xml', 
        'Geometry/ForwardCommonData/data/bundle/forwardshield.xml', 
        'Geometry/ForwardCommonData/data/brmrotations.xml', 
        'Geometry/ForwardCommonData/data/brm.xml', 
        'Geometry/ForwardCommonData/data/totemMaterials.xml', 
        'Geometry/ForwardCommonData/data/totemRotations.xml', 
        'Geometry/ForwardCommonData/data/totemt1.xml', 
        'Geometry/ForwardCommonData/data/totemt2.xml', 
        'Geometry/ForwardCommonData/data/ionpump.xml', 
        'Geometry/MuonCommonData/data/muonNumbering.xml', 
        'Geometry/TrackerCommonData/data/trackerStructureTopology.xml', 
        'Geometry/TrackerSimData/data/trackersens.xml', 
        'Geometry/TrackerRecoData/data/trackerRecoMaterial.xml', 
        'Geometry/EcalSimData/data/ecalsens.xml', 
        'Geometry/HcalCommonData/data/hcalsenspmf.xml', 
        'Geometry/HcalSimData/data/hf.xml', 
        'Geometry/HcalSimData/data/hfpmt.xml', 
        'Geometry/HcalSimData/data/hffibrebundle.xml', 
        'Geometry/HcalSimData/data/CaloUtil.xml', 
        'Geometry/MuonSimData/data/muonSens.xml', 
        'Geometry/DTGeometryBuilder/data/dtSpecsFilter.xml', 
        'Geometry/CSCGeometryBuilder/data/cscSpecsFilter.xml', 
        'Geometry/CSCGeometryBuilder/data/cscSpecs.xml', 
        'Geometry/RPCGeometryBuilder/data/RPCSpecs.xml', 
        'Geometry/ForwardCommonData/data/brmsens.xml', 
        'Geometry/HcalSimData/data/HcalProdCuts.xml', 
        'Geometry/EcalSimData/data/EcalProdCuts.xml', 
        'Geometry/EcalSimData/data/ESProdCuts.xml', 
        'Geometry/TrackerSimData/data/trackerProdCuts.xml', 
        'Geometry/TrackerSimData/data/trackerProdCutsBEAM.xml', 
        'Geometry/MuonSimData/data/muonProdCuts.xml', 
        'Geometry/ForwardSimData/data/ForwardShieldProdCuts.xml', 
        'Geometry/CMSCommonData/data/FieldParameters.xml'),
    rootNodeName = cms.string('cms:OCMS')
)


process.eegeom = cms.ESSource("EmptyESSource",
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('EcalMappingRcd'),
    firstValid = cms.vuint32(1)
)


process.egHLTOffBaseEleTrigCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:minr9:maxr9:e2x5Over5x5:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.04),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('default'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.025),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffBasePhoTrigCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(20),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('default'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(20),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffDQMBinData = cms.PSet(
    e1x5 = cms.PSet(
        max = cms.double(1.1),
        nr = cms.int32(24),
        min = cms.double(-0.1)
    ),
    et = cms.PSet(
        max = cms.double(155.0),
        nr = cms.int32(80),
        min = cms.double(-5.0)
    ),
    etaVsPhi = cms.PSet(
        yMax = cms.double(3.14),
        nrY = cms.int32(8),
        nrX = cms.int32(15),
        xMax = cms.double(3.0),
        xMin = cms.double(-3.0),
        yMin = cms.double(-3.14)
    ),
    nVertex = cms.PSet(
        max = cms.double(21.0),
        nr = cms.int32(22),
        min = cms.double(-1.0)
    ),
    hOverE = cms.PSet(
        max = cms.double(0.1),
        nr = cms.int32(30),
        min = cms.double(0.0)
    ),
    massHigh = cms.PSet(
        max = cms.double(5000),
        nr = cms.int32(20),
        min = cms.double(0.0)
    ),
    etHigh = cms.PSet(
        max = cms.double(2025),
        nr = cms.int32(30),
        min = cms.double(25)
    ),
    sigEtaEta = cms.PSet(
        max = cms.double(0.05),
        nr = cms.int32(30),
        min = cms.double(-0.01)
    ),
    isolPtTrks = cms.PSet(
        max = cms.double(10),
        nr = cms.int32(22),
        min = cms.double(-1)
    ),
    charge = cms.PSet(
        max = cms.double(1.5),
        nr = cms.int32(2),
        min = cms.double(-1.5)
    ),
    maxr9 = cms.PSet(
        max = cms.double(1.1),
        nr = cms.int32(24),
        min = cms.double(-0.1)
    ),
    invEInvP = cms.PSet(
        max = cms.double(0.2),
        nr = cms.int32(10),
        min = cms.double(-0.2)
    ),
    phi = cms.PSet(
        max = cms.double(3.14),
        nr = cms.int32(16),
        min = cms.double(-3.14)
    ),
    eOverP = cms.PSet(
        max = cms.double(5),
        nr = cms.int32(12),
        min = cms.double(-1.0)
    ),
    isolNrTrks = cms.PSet(
        max = cms.double(10),
        nr = cms.int32(22),
        min = cms.double(-1)
    ),
    dPhiIn = cms.PSet(
        max = cms.double(0.15),
        nr = cms.int32(10),
        min = cms.double(-0.15)
    ),
    err = cms.PSet(
        max = cms.double(100.5),
        nr = cms.int32(101),
        min = cms.double(-0.5)
    ),
    minr9 = cms.PSet(
        max = cms.double(1.1),
        nr = cms.int32(24),
        min = cms.double(-0.1)
    ),
    isolHad = cms.PSet(
        max = cms.double(10),
        nr = cms.int32(22),
        min = cms.double(-1)
    ),
    dEtaIn = cms.PSet(
        max = cms.double(0.02),
        nr = cms.int32(10),
        min = cms.double(-0.02)
    ),
    isolEm = cms.PSet(
        max = cms.double(10),
        nr = cms.int32(22),
        min = cms.double(-1)
    ),
    eta = cms.PSet(
        max = cms.double(3.0),
        nr = cms.int32(30),
        min = cms.double(-3.0)
    ),
    mass = cms.PSet(
        max = cms.double(120),
        nr = cms.int32(26),
        min = cms.double(-10.0)
    ),
    e2x5 = cms.PSet(
        max = cms.double(1.1),
        nr = cms.int32(24),
        min = cms.double(-0.1)
    )
)

process.egHLTOffDoubleEleEt10SWCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.04),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(10.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoDoubleElectronEt10PixelMatchFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.025),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(10.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffDoubleEleEt5Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.04),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(5.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoDoubleElectronEt5PixelMatchFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.025),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(5.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffDoublePhoEt10Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(10.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoDoublePhotonEt10HcalIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(10.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffDoublePhoEt15Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoDoublePhotonEt15HcalIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffDoublePhoEt15VLEICuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0.2),
        cuts = cms.string('et:hltIsolEm'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(-1.0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(5.0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTVLEIDoublePhotonEt15HcalIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0.2),
        cuts = cms.string('et:hltIsolEm'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(-1.0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(5.0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffDoublePhotonEt33_v1Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:maxr9:hadem'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(33.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltDoublePhoton33EgammaLHEDoubleFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:maxr9:hadem'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(33.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffEle90_NoSpikeFilter_v1Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et:hadem'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.15),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(90.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltEle90NoSpikeFilterPixelMatchFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et:hadem'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.1),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(90.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleBarrelCuts = cms.PSet(
    isolPtTrksGradStart = cms.double(0.0),
    maxSigmaEtaEta = cms.double(0.01),
    maxCTFTrkInnerRadius = cms.double(99999),
    minR9 = cms.double(0.0),
    requirePixelHitsIfOuterInOuter = cms.bool(True),
    maxEta = cms.double(1.442),
    maxHLTIsolTrksPho = cms.double(0),
    isolHadGradTerm = cms.double(0.03),
    isolHadConstTerm = cms.double(3),
    maxHLTIsolTrksEleOverPt = cms.double(0.09),
    maxHLTIsolEmOverEt = cms.double(0.07),
    cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:minr9:maxr9:e2x5Over5x5:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
    maxR9 = cms.double(0.98),
    isolNrTrksConstTerm = cms.int32(0),
    maxDEtaIn = cms.double(0.004),
    isolHadGradStart = cms.double(0.0),
    maxHadem = cms.double(0.04),
    maxHLTInvEInvP = cms.double(9999),
    maxHLTIsolEmOverEt2 = cms.double(0),
    maxHLTIsolHadOverEt2 = cms.double(0),
    maxHLTIsolTrksPhoOverPt = cms.double(0),
    maxCTFTrkChi2NDof = cms.double(99999),
    maxHLTDPhiIn = cms.double(0.1),
    maxDPhiIn = cms.double(0.06),
    maxInvEInvP = cms.double(0.1),
    minEt = cms.double(15),
    maxHLTIsolTrksPhoOverPt2 = cms.double(0),
    minEta = cms.double(0.0),
    maxHadEnergy = cms.double(0),
    maxHLTIsolHadOverEt = cms.double(0.1),
    minNrCTFTrkHits = cms.int32(7),
    isolEmConstTerm = cms.double(3),
    minCTFTrkOuterRadius = cms.double(0.0),
    maxHLTDEtaIn = cms.double(0.008),
    maxHLTIsolTrksEleOverPt2 = cms.double(0),
    maxHLTIsolEm = cms.double(0),
    maxNrCTFTrkHitsLost = cms.int32(999),
    maxHLTIsolTrksEle = cms.double(0),
    isolPtTrksConstTerm = cms.double(7.5),
    isolPtTrksGradTerm = cms.double(0.0),
    maxHLTIsolHad = cms.double(0),
    isolEmGradStart = cms.double(0.0),
    maxSigmaIEtaIEta = cms.double(0.01),
    isolEmGradTerm = cms.double(0.03)
)

process.egHLTOffEleCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:minr9:maxr9:e2x5Over5x5:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.04),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.025),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEndcapCuts = cms.PSet(
    isolPtTrksGradStart = cms.double(0.0),
    maxSigmaEtaEta = cms.double(0.03),
    maxCTFTrkInnerRadius = cms.double(9999.0),
    minR9 = cms.double(0.0),
    requirePixelHitsIfOuterInOuter = cms.bool(True),
    maxEta = cms.double(2.5),
    maxHLTIsolTrksPho = cms.double(0),
    isolHadGradTerm = cms.double(0.03),
    isolHadConstTerm = cms.double(3),
    maxHLTIsolTrksEleOverPt = cms.double(0.04),
    maxHLTIsolEmOverEt = cms.double(0.05),
    cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
    maxR9 = cms.double(999.0),
    isolNrTrksConstTerm = cms.int32(0),
    maxDEtaIn = cms.double(0.007),
    isolHadGradStart = cms.double(0.0),
    maxHadem = cms.double(0.025),
    maxHLTInvEInvP = cms.double(9999),
    maxHLTIsolEmOverEt2 = cms.double(0),
    maxHLTIsolHadOverEt2 = cms.double(0),
    maxHLTIsolTrksPhoOverPt = cms.double(0),
    maxCTFTrkChi2NDof = cms.double(99999),
    maxHLTDPhiIn = cms.double(0.1),
    maxDPhiIn = cms.double(0.03),
    maxInvEInvP = cms.double(0.1),
    minEt = cms.double(15),
    maxHLTIsolTrksPhoOverPt2 = cms.double(0),
    minEta = cms.double(1.56),
    maxHadEnergy = cms.double(0),
    maxHLTIsolHadOverEt = cms.double(0.025),
    minNrCTFTrkHits = cms.int32(7),
    isolEmConstTerm = cms.double(3),
    minCTFTrkOuterRadius = cms.double(0.0),
    maxHLTDEtaIn = cms.double(0.008),
    maxHLTIsolTrksEleOverPt2 = cms.double(0),
    maxHLTIsolEm = cms.double(0),
    maxNrCTFTrkHitsLost = cms.int32(999),
    maxHLTIsolTrksEle = cms.double(0),
    isolPtTrksConstTerm = cms.double(15),
    isolPtTrksGradTerm = cms.double(0.0),
    maxHLTIsolHad = cms.double(0),
    isolEmGradStart = cms.double(0.0),
    maxSigmaIEtaIEta = cms.double(0.03),
    isolEmGradTerm = cms.double(0.03)
)

process.egHLTOffEleEt10LWCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.04),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(10.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronLWEt10PixelMatchFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.025),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(10.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt10LWEleIdCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et:hltDEtaIn:hltDPhiIn:sigmaEtaEta:ctfTrack'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.008),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.04),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.1),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronLWEt10EleIdDphiFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.04),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et:hltDEtaIn:hltDPhiIn:sigmaEtaEta:ctfTrack'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.008),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.025),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.1),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt10SWCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.04),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(10.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronEt10PixelMatchFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.025),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(10.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt15LWCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.04),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronLWEt15PixelMatchFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.025),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt15SWCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.04),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronEt15PixelMatchFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.025),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt15SWEleIdCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et:hltDEtaIn:hltDPhiIn:sigmaEtaEta:ctfTrack'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.04),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronEt15EleIdDphiFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.04),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et:hltDEtaIn:hltDPhiIn:sigmaEtaEta:ctfTrack'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.025),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt15SWEleIdLTICuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.5),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et:dEtaIn:dPhiIn:sigmaIEtaIEta:hltIsolTrksEle:ctfTrack'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.04),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(25.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(8),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronEt15EleIdTrackIsolFilterESet25LTI'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.04),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.5),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et:dEtaIn:dPhiIn:sigmaIEtaIEta:hltIsolTrksEle:ctfTrack'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.025),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(25.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(8),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt15SWLTICuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.5),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et:hltIsolTrksEle:ctfTrack'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.04),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(8),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronEt15LTITrackIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.5),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et:hltIsolTrksEle:ctfTrack'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.025),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(8),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt15_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_v1Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.125),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:hltIsolEm:hltIsolHad:hltIsolTrksEle:dEtaIn:dPhiIn'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.008),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.125),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.07),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.125),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltEle15CaloIdVTTrkIdTCaloIsoTTrkIsoTTrackIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.075),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:hltIsolEm:hltIsolHad:hltIsolTrksEle:dEtaIn:dPhiIn'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.008),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.075),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.05),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.075),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt17_CaloIdL_CaloIsoVL_v1Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.2),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:hltIsolEm:hltIsolHad'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.15),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(17),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.2),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.014),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltEle17CaloIdLCaloIsoVLPixelMatchFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:hltIsolEm:hltIsolHad'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.1),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(17),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.035),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt20SWCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.04),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(20.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronEt20PixelMatchFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.025),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(20.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt27_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_v1Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.125),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:hltIsolEm:hltIsolHad:hltIsolTrksEle:dEtaIn:dPhiIn'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.008),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.125),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.07),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(27.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.125),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltEle27CaloIdTCaloIsoTTrkIdTTrkIsoTTrackIsoFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.075),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:hltIsolEm:hltIsolHad:hltIsolTrksEle:dEtaIn:dPhiIn'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.008),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.075),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.05),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(27.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.075),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt45_CaloIdVT_TrkIdT_v1Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:dEtaIn:dPhiIn'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.008),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.07),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(45.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltEle45CaloIdVTTrkIdTDphiFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:dEtaIn:dPhiIn'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.008),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.05),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(45.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt8_CaloIdL_CaloIsoVL_v1Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.2),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:hltIsolEm:hltIsolHad'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.15),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(8.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.2),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.014),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltEle8CaloIdLCaloIsoVLPixelMatchFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:hltIsolEm:hltIsolHad'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.1),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(8.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.035),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt8_CaloIdL_TrkIdVL_v1Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:dEtaIn:dPhiIn'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.01),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.15),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.15),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(8.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.014),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltEle8CaloIdLTrkIdVLDphiFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:dEtaIn:dPhiIn'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.01),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.1),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.1),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(8.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.035),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt8_v1Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et:hadem:maxr9'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.15),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(8.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltEle8PixelMatchFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et:hadem:maxr9'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.1),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(8.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleLooseCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:minr9:maxr9:e2x5Over5x5:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.04),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.025),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffFiltersToMon = cms.PSet(
    eleTightLooseTrigNames = cms.vstring(),
    phoTightLooseTrigNames = cms.vstring(),
    diEleTightLooseTrigNames = cms.vstring(),
    phoHLTFilterNames = cms.vstring(),
    eleHLTFilterNames2Leg = cms.vstring(),
    eleHLTFilterNames = cms.vstring('hltEle65CaloIdVTTrkIdTDphiFilter'),
    diPhoTightLooseTrigNames = cms.vstring(),
    phoHLTFilterNames2Leg = cms.vstring()
)

process.egHLTOffPhoBarrelCuts = cms.PSet(
    isolPtTrksGradStart = cms.double(0.0),
    maxSigmaEtaEta = cms.double(0.011),
    maxCTFTrkInnerRadius = cms.double(9.0),
    minR9 = cms.double(0.0),
    requirePixelHitsIfOuterInOuter = cms.bool(True),
    maxEta = cms.double(1.442),
    maxHLTIsolTrksPho = cms.double(0),
    isolHadGradTerm = cms.double(0.005),
    isolHadConstTerm = cms.double(3.0),
    maxHLTIsolTrksEleOverPt = cms.double(0),
    maxHLTIsolEmOverEt = cms.double(0),
    cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks'),
    maxR9 = cms.double(0.98),
    isolNrTrksConstTerm = cms.int32(4),
    maxDEtaIn = cms.double(-1),
    isolHadGradStart = cms.double(0.0),
    maxHadem = cms.double(0.05),
    maxHLTInvEInvP = cms.double(0.1),
    maxHLTIsolEmOverEt2 = cms.double(0),
    maxHLTIsolHadOverEt2 = cms.double(0),
    maxHLTIsolTrksPhoOverPt = cms.double(0),
    maxCTFTrkChi2NDof = cms.double(99999.0),
    maxHLTDPhiIn = cms.double(0.1),
    maxDPhiIn = cms.double(-1),
    maxInvEInvP = cms.double(-1),
    minEt = cms.double(20),
    maxHLTIsolTrksPhoOverPt2 = cms.double(0),
    minEta = cms.double(0.0),
    maxHadEnergy = cms.double(0),
    maxHLTIsolHadOverEt = cms.double(0),
    minNrCTFTrkHits = cms.int32(5),
    isolEmConstTerm = cms.double(5.0),
    minCTFTrkOuterRadius = cms.double(40.0),
    maxHLTDEtaIn = cms.double(0.1),
    maxHLTIsolTrksEleOverPt2 = cms.double(0),
    maxHLTIsolEm = cms.double(0),
    maxNrCTFTrkHitsLost = cms.int32(0),
    maxHLTIsolTrksEle = cms.double(0),
    isolPtTrksConstTerm = cms.double(3.0),
    isolPtTrksGradTerm = cms.double(0.002),
    maxHLTIsolHad = cms.double(0),
    isolEmGradStart = cms.double(0.0),
    maxSigmaIEtaIEta = cms.double(0.011),
    isolEmGradTerm = cms.double(0.012)
)

process.egHLTOffPhoCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(20),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(20),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoEndcapCuts = cms.PSet(
    isolPtTrksGradStart = cms.double(0.0),
    maxSigmaEtaEta = cms.double(0.031),
    maxCTFTrkInnerRadius = cms.double(9.0),
    minR9 = cms.double(0.0),
    requirePixelHitsIfOuterInOuter = cms.bool(True),
    maxEta = cms.double(2.5),
    maxHLTIsolTrksPho = cms.double(0),
    isolHadGradTerm = cms.double(0.005),
    isolHadConstTerm = cms.double(3.0),
    maxHLTIsolTrksEleOverPt = cms.double(0),
    maxHLTIsolEmOverEt = cms.double(0),
    cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks'),
    maxR9 = cms.double(999.0),
    isolNrTrksConstTerm = cms.int32(4),
    maxDEtaIn = cms.double(-1),
    isolHadGradStart = cms.double(0.0),
    maxHadem = cms.double(0.05),
    maxHLTInvEInvP = cms.double(0.1),
    maxHLTIsolEmOverEt2 = cms.double(0),
    maxHLTIsolHadOverEt2 = cms.double(0),
    maxHLTIsolTrksPhoOverPt = cms.double(0),
    maxCTFTrkChi2NDof = cms.double(99999.0),
    maxHLTDPhiIn = cms.double(0.1),
    maxDPhiIn = cms.double(-1),
    maxInvEInvP = cms.double(-1),
    minEt = cms.double(20),
    maxHLTIsolTrksPhoOverPt2 = cms.double(0),
    minEta = cms.double(1.56),
    maxHadEnergy = cms.double(0),
    maxHLTIsolHadOverEt = cms.double(0),
    minNrCTFTrkHits = cms.int32(5),
    isolEmConstTerm = cms.double(5.0),
    minCTFTrkOuterRadius = cms.double(40.0),
    maxHLTDEtaIn = cms.double(0.1),
    maxHLTIsolTrksEleOverPt2 = cms.double(0),
    maxHLTIsolEm = cms.double(0),
    maxNrCTFTrkHitsLost = cms.int32(0),
    maxHLTIsolTrksEle = cms.double(0),
    isolPtTrksConstTerm = cms.double(3.0),
    isolPtTrksGradTerm = cms.double(0.002),
    maxHLTIsolHad = cms.double(0),
    isolEmGradStart = cms.double(0.0),
    maxSigmaIEtaIEta = cms.double(0.031),
    isolEmGradTerm = cms.double(0.012)
)

process.egHLTOffPhoEt10Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(10.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSinglePhotonEt10HcalIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(10.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoEt10LEITICuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0.1),
        cuts = cms.string('et:hltIsolTrksPho:hltIsolEm'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(-1.0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.05),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(4.0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(3.0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTLEITISinglePhotonEt10TrackIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0.1),
        cuts = cms.string('et:hltIsolTrksPho:hltIsolEm'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(-1.0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.05),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(4.0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(3.0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoEt15Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoEt15HTICuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:hltIsolTrksPho'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.05),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(4.0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoSinglePhotonEt15HTITrackIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:hltIsolTrksPho'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.05),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(4.0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoEt15LEICuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0.1),
        cuts = cms.string('et:hltIsolEm'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(-1.0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(3.0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoSinglePhotonEt15LEIHcalIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0.1),
        cuts = cms.string('et:hltIsolEm'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(-1.0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(3.0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoEt20Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(20),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSinglePhotonEt20HcalIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(20),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoEt20LEITICuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0.1),
        cuts = cms.string('et:hltIsolTrksPho:hltIsolEm'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(-1.0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.05),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
        minEt = cms.double(20.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(4.0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(3.0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTLEITISinglePhotonEt20TrackIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0.1),
        cuts = cms.string('et:hltIsolTrksPho:hltIsolEm'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(-1.0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.05),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
        minEt = cms.double(20.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(4.0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(3.0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoEt25Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(25.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSinglePhotonEt25HcalIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(25.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoEt25LEITICuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0.1),
        cuts = cms.string('et:hltIsolTrksPho:hltIsolEm'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(-1.0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.05),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
        minEt = cms.double(25.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(4.0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(3.0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTLEITISinglePhotonEt25TrackIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0.1),
        cuts = cms.string('et:hltIsolTrksPho:hltIsolEm'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(-1.0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.05),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
        minEt = cms.double(25.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(4.0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(3.0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoEt30Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(30.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSinglePhotonEt30HcalIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(30.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoLooseCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(20),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(20),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhotonEt125_NoSpikeFilter_v1Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(125.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltPhoton125HEFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(125.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhotonEt30_CaloIdVL_IsoL_v1Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:isolEm:isolHad:isolPtTrks'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.15),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(30.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.5),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.024),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltPhoton30CaloIdVLIsoLTrackIsoFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:isolEm:isolHad:isolPtTrks'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.1),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(30.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.5),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.04),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhotonEt30_CaloIdVL_v1Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.15),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(30.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.024),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltEG30CaloIdVLHEFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.1),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(30.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.04),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhotonEt50_CaloIdVL_IsoL_v1Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:isolEm:isolHad:isolPtTrks'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.15),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(50.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.5),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.024),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltPhoton50CaloIdVLIsoLTrackIsoFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:isolEm:isolHad:isolPtTrks'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.1),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(50.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.5),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.04),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhotonEt75_CaloIdVL_IsoL_v1Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:isolEm:isolHad:isolPtTrks'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.15),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(75.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.5),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.024),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltPhoton75CaloIdVLIsoLTrackIsoFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:isolEm:isolHad:isolPtTrks'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.1),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(75.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.5),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.04),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhotonEt75_CaloIdVL_v1Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.15),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(75.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.024),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltEG75CaloIdVLHEFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.1),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(75.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.04),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.maxEvents = cms.untracked.PSet(
    input = cms.untracked.int32(-1)
)

process.muonTPSet = cms.PSet(
    src = cms.InputTag("mergedtruth","MergedTrackTruth"),
    chargedOnly = cms.bool(True),
    pdgId = cms.vint32(13, -13),
    tip = cms.double(3.5),
    signalOnly = cms.bool(True),
    minRapidity = cms.double(-2.4),
    lip = cms.double(30.0),
    ptMin = cms.double(0.9),
    maxRapidity = cms.double(2.4),
    minHit = cms.int32(0),
    stableOnly = cms.bool(False)
)

process.options = cms.untracked.PSet(
    fileMode = cms.untracked.string('FULLMERGE')
)


Booking of flavour-independent plots's been finished.
Booking of flavour-dependent plots's been finished.
The available path : digitisation_step
The available path : L1simulation_step
The available path : digi2raw_step
The available path : HLT_Activity_Ecal_SC7_v8
The available path : HLT_L1SingleJet16_v4
The available path : HLT_L1SingleJet36_v4
The available path : HLT_Jet30_v9
The available path : HLT_Jet30_L1FastJet_v3
The available path : HLT_Jet60_v9
The available path : HLT_Jet60_L1FastJet_v3
The available path : HLT_Jet110_v9
The available path : HLT_Jet190_v9
The available path : HLT_Jet240_v9
The available path : HLT_Jet240_L1FastJet_v3
The available path : HLT_Jet300_v9
The available path : HLT_Jet300_L1FastJet_v3
The available path : HLT_Jet370_v10
The available path : HLT_Jet370_L1FastJet_v3
The available path : HLT_Jet370_NoJetID_v10
The available path : HLT_Jet800_v5
The available path : HLT_DiJetAve30_v9
The available path : HLT_DiJetAve60_v9
The available path : HLT_DiJetAve110_v9
The available path : HLT_DiJetAve190_v9
The available path : HLT_DiJetAve240_v9
The available path : HLT_DiJetAve300_v10
The available path : HLT_DiJetAve370_v10
The available path : DST_FatJetMass300_DR1p1_Deta2p0_v1
The available path : DST_FatJetMass400_DR1p1_Deta2p0_RunPF_v1
The available path : HLT_FatJetMass850_DR1p1_Deta2p0_v5
The available path : HLT_DoubleJet30_ForwardBackward_v10
The available path : HLT_DoubleJet60_ForwardBackward_v10
The available path : HLT_DoubleJet70_ForwardBackward_v10
The available path : HLT_DoubleJet80_ForwardBackward_v10
The available path : HLT_DiJet130_PT130_v9
The available path : HLT_DiJet160_PT160_v9
The available path : HLT_CentralJet80_MET65_v10
The available path : HLT_CentralJet80_MET80_v9
The available path : HLT_CentralJet80_MET95_v3
The available path : HLT_CentralJet80_MET110_v3
The available path : HLT_DiJet60_MET45_v10
The available path : HLT_DiCentralJet20_MET100_HBHENoiseFiltered_v4
The available path : HLT_DiCentralJet20_MET80_v8
The available path : HLT_DiCentralJet20_BTagIP_MET65_v11
The available path : HLT_DiCentralJet36_BTagIP3DLoose_v5
The available path : HLT_CentralJet46_CentralJet38_DiBTagIP3D_v7
The available path : HLT_CentralJet60_CentralJet53_DiBTagIP3D_v6
The available path : HLT_QuadJet40_v11
The available path : HLT_QuadJet45_DiJet40_v3
The available path : HLT_QuadJet50_DiJet40_v5
The available path : HLT_QuadJet50_DiJet40_L1FastJet_v2
The available path : HLT_QuadJet40_IsoPFTau40_v18
The available path : HLT_QuadJet45_IsoPFTau45_v13
The available path : HLT_QuadJet50_IsoPFTau50_v7
The available path : HLT_QuadJet70_v10
The available path : HLT_QuadJet80_v5
The available path : HLT_QuadJet80_L1FastJet_v2
The available path : HLT_QuadJet90_v3
The available path : HLT_SixJet45_v3
The available path : HLT_SixJet45_L1FastJet_v2
The available path : HLT_EightJet35_v3
The available path : HLT_EightJet35_L1FastJet_v2
The available path : HLT_EightJet40_v3
The available path : HLT_EightJet40_L1FastJet_v2
The available path : HLT_EightJet120_v5
The available path : HLT_70Jet10_v4
The available path : HLT_70Jet13_v4
The available path : HLT_300Tower0p5_v1
The available path : HLT_300Tower0p6_v1
The available path : HLT_300Tower0p7_v1
The available path : HLT_300Tower0p8_v1
The available path : HLT_ExclDiJet60_HFOR_v9
The available path : HLT_ExclDiJet60_HFAND_v9
The available path : HLT_JetE30_NoBPTX_v8
The available path : HLT_JetE30_NoBPTX_NoHalo_v10
The available path : HLT_JetE30_NoBPTX3BX_NoHalo_v10
The available path : HLT_JetE50_NoBPTX3BX_NoHalo_v5
The available path : HLT_HT150_v11
The available path : HLT_HT200_v11
The available path : HLT_HT250_v11
The available path : HLT_HT250_AlphaT0p58_v3
The available path : HLT_HT250_AlphaT0p60_v3
The available path : HLT_HT250_AlphaT0p65_v2
The available path : HLT_HT300_v12
The available path : HLT_HT300_AlphaT0p54_v5
The available path : HLT_HT300_AlphaT0p55_v3
The available path : HLT_HT300_AlphaT0p60_v2
The available path : HLT_HT350_v11
The available path : DST_HT350_RunPF_v1
The available path : HLT_HT350_MHT100_v3
The available path : HLT_HT350_MHT110_v3
The available path : HLT_HT350_L1FastJet_v3
The available path : HLT_HT350_L1FastJet_MHT100_v1
The available path : HLT_HT350_L1FastJet_MHT110_v1
The available path : HLT_HT350_AlphaT0p53_v10
The available path : HLT_HT400_v11
The available path : HLT_HT400_MHT90_v3
The available path : HLT_HT400_MHT100_v3
The available path : HLT_HT400_L1FastJet_v3
The available path : HLT_HT400_L1FastJet_MHT90_v1
The available path : HLT_HT400_L1FastJet_MHT100_v1
The available path : HLT_HT400_AlphaT0p51_v10
The available path : HLT_HT400_AlphaT0p52_v5
The available path : HLT_HT450_v11
The available path : HLT_HT450_AlphaT0p51_v5
The available path : HLT_HT500_v11
The available path : HLT_HT550_v11
The available path : HLT_HT600_v4
The available path : HLT_HT650_v4
The available path : HLT_HT700_v2
The available path : HLT_HT750_v3
The available path : HLT_HT750_L1FastJet_v3
The available path : HLT_HT2000_v5
The available path : HLT_PFHT650_v1
The available path : HLT_PFHT350_PFMHT90_v1
The available path : HLT_PFHT350_PFMHT100_v1
The available path : HLT_PFHT400_PFMHT80_v1
The available path : HLT_PFHT400_PFMHT90_v1
The available path : HLT_PFMHT150_v17
The available path : HLT_DiCentralPFJet30_PFMHT80_v1
The available path : HLT_DiCentralPFJet50_PFMHT80_v1
The available path : HLT_MET120_v7
The available path : HLT_MET120_HBHENoiseFiltered_v6
The available path : HLT_MET200_v7
The available path : HLT_MET200_HBHENoiseFiltered_v6
The available path : HLT_MET400_v2
The available path : HLT_R014_MR150_v10
The available path : HLT_R020_MR150_v10
The available path : HLT_R020_MR550_v10
The available path : HLT_R025_MR150_v10
The available path : HLT_R025_MR450_v10
The available path : HLT_R033_MR350_v10
The available path : HLT_R038_MR250_v10
The available path : HLT_R038_MR300_v2
The available path : HLT_RMR65_v3
The available path : HLT_R014_MR200_CentralJet40_BTagIP_v4
The available path : HLT_R014_MR400_CentralJet40_BTagIP_v4
The available path : HLT_R014_MR450_CentralJet40_BTagIP_v4
The available path : HLT_R020_MR300_CentralJet40_BTagIP_v4
The available path : HLT_R020_MR350_CentralJet40_BTagIP_v4
The available path : HLT_R030_MR200_CentralJet40_BTagIP_v4
The available path : HLT_R030_MR250_CentralJet40_BTagIP_v4
The available path : HLT_L1SingleMuOpen_v4
The available path : HLT_L1SingleMuOpen_DT_v4
The available path : HLT_L1SingleMu10_v4
The available path : HLT_L1SingleMu20_v4
The available path : HLT_L1DoubleMu0_v4
The available path : HLT_L2Mu10_v6
The available path : HLT_L2Mu20_v6
The available path : HLT_L2Mu60_1Hit_MET40_v6
The available path : HLT_L2Mu60_1Hit_MET60_v6
The available path : HLT_L2DoubleMu0_v7
The available path : HLT_Mu5_v14
The available path : HLT_Mu8_v12
The available path : HLT_Mu12_v12
The available path : HLT_Mu15_v13
The available path : HLT_Mu20_v12
The available path : HLT_Mu24_v12
The available path : HLT_Mu30_v12
The available path : HLT_Mu40_v10
The available path : HLT_Mu40_eta2p1_v5
The available path : HLT_Mu50_eta2p1_v2
The available path : HLT_Mu60_eta2p1_v5
The available path : HLT_Mu100_eta2p1_v5
The available path : HLT_Mu200_eta2p1_v2
The available path : HLT_IsoMu15_v18
The available path : HLT_IsoMu15_eta2p1_v5
The available path : HLT_IsoMu20_v13
The available path : HLT_IsoMu24_v13
The available path : HLT_IsoMu24_eta2p1_v7
The available path : HLT_IsoMu30_eta2p1_v7
The available path : HLT_IsoMu34_eta2p1_v5
The available path : HLT_IsoMu40_eta2p1_v2
The available path : HLT_L2DoubleMu23_NoVertex_v8
The available path : HLT_L2DoubleMu30_NoVertex_v4
The available path : HLT_L2DoubleMu30_NoVertex_dPhi2p5_v1
The available path : HLT_DoubleMu3_v14
The available path : HLT_DoubleMu5_v5
The available path : HLT_DoubleMu7_v12
The available path : HLT_DoubleMu45_v10
The available path : HLT_DoubleMu7_Acoplanarity03_v4
The available path : HLT_DoubleMu4_Jpsi_Displaced_v5
The available path : HLT_DoubleMu5_Jpsi_Displaced_v5
The available path : HLT_DoubleMu4_Dimuon4_Bs_Barrel_v5
The available path : HLT_DoubleMu4_Dimuon6_Bs_v5
The available path : HLT_DoubleMu4p5_LowMass_Displaced_v5
The available path : HLT_DoubleMu5_LowMass_Displaced_v5
The available path : HLT_Dimuon0_Omega_Phi_v4
The available path : HLT_Dimuon0_Jpsi_v10
The available path : HLT_Dimuon0_Jpsi_NoVertexing_v7
The available path : HLT_Dimuon0_Upsilon_v10
The available path : HLT_Dimuon6_LowMass_v5
The available path : HLT_Dimuon7_Upsilon_Barrel_v5
The available path : HLT_Dimuon9_Upsilon_Barrel_v5
The available path : HLT_Dimuon9_PsiPrime_v5
The available path : HLT_Dimuon10_Jpsi_Barrel_v10
The available path : HLT_Dimuon11_PsiPrime_v5
The available path : HLT_Dimuon13_Jpsi_Barrel_v5
The available path : HLT_Dimuon0_Jpsi_Muon_v11
The available path : HLT_Dimuon0_Upsilon_Muon_v11
The available path : HLT_TripleMu0_TauTo3Mu_v1
The available path : HLT_Mu13_Mu8_v11
The available path : HLT_Mu17_Mu8_v11
The available path : HLT_Mu17_TkMu8_v4
The available path : HLT_TripleMu5_v13
The available path : HLT_DoubleMu5_IsoMu5_v12
The available path : HLT_Mu5_TkMu0_OST_Jpsi_Tight_B5Q7_v13
The available path : HLT_Mu5_L2Mu2_Jpsi_v13
The available path : HLT_Mu5_Track2_Jpsi_v13
The available path : HLT_Mu7_Track7_Jpsi_v14
The available path : HLT_Photon20_CaloIdVL_IsoL_v9
The available path : HLT_Photon20_R9Id_Photon18_R9Id_v7
The available path : HLT_Photon20_CaloIdVT_IsoT_Ele8_CaloIdL_CaloIsoVL_v11
The available path : HLT_Photon26_Photon18_v7
The available path : HLT_Photon26_CaloIdXL_IsoXL_Photon18_v4
The available path : HLT_Photon26_CaloIdXL_IsoXL_Photon18_R9IdT_Mass60_v4
The available path : HLT_Photon26_CaloIdXL_IsoXL_Photon18_CaloIdXL_IsoXL_Mass60_v4
The available path : HLT_Photon26_R9IdT_Photon18_CaloIdXL_IsoXL_Mass60_v4
The available path : HLT_Photon26_R9IdT_Photon18_R9IdT_Mass60_v1
The available path : HLT_Photon30_CaloIdVL_v8
The available path : HLT_Photon30_CaloIdVL_IsoL_v11
The available path : HLT_Photon36_Photon22_v1
The available path : HLT_Photon36_CaloIdVL_Photon22_CaloIdVL_v2
The available path : HLT_Photon36_CaloIdL_IsoVL_Photon22_v8
The available path : HLT_Photon36_CaloIdL_IsoVL_Photon22_CaloIdL_IsoVL_v7
The available path : HLT_Photon36_CaloIdL_IsoVL_Photon22_R9Id_v6
The available path : HLT_Photon36_R9Id_Photon22_CaloIdL_IsoVL_v7
The available path : HLT_Photon36_R9Id_Photon22_R9Id_v3
The available path : HLT_Photon50_CaloIdVL_v4
The available path : HLT_Photon50_CaloIdVL_IsoL_v9
The available path : HLT_Photon60_CaloIdL_HT300_v3
The available path : HLT_Photon60_CaloIdL_MHT70_v3
The available path : HLT_Photon70_CaloIdXL_HT400_v3
The available path : HLT_Photon70_CaloIdXL_HT500_v3
The available path : HLT_Photon70_CaloIdXL_MHT90_v3
The available path : HLT_Photon70_CaloIdXL_MHT100_v3
The available path : HLT_Photon75_CaloIdVL_v7
The available path : HLT_Photon75_CaloIdVL_IsoL_v10
The available path : HLT_Photon90_CaloIdVL_v4
The available path : HLT_Photon90_CaloIdVL_IsoL_v7
The available path : HLT_Photon90EBOnly_CaloIdVL_IsoL_TriPFJet25_v5
The available path : HLT_Photon90EBOnly_CaloIdVL_IsoL_TriPFJet30_v5
The available path : HLT_Photon135_v2
The available path : HLT_Photon225_NoHE_v2
The available path : HLT_Photon400_v2
The available path : HLT_Photon200_NoHE_v4
The available path : HLT_DoublePhoton43_HEVT_v1
The available path : HLT_DoublePhoton48_HEVT_v1
The available path : HLT_DoublePhoton70_v1
The available path : HLT_DoublePhoton80_v2
The available path : HLT_DoublePhoton5_IsoVL_CEP_v9
The available path : HLT_L1SingleEG5_v3
The available path : HLT_L1SingleEG12_v3
The available path : HLT_Ele8_v10
The available path : HLT_Ele8_CaloIdL_CaloIsoVL_v10
The available path : HLT_Ele8_CaloIdL_TrkIdVL_v10
The available path : HLT_Ele8_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_v8
The available path : HLT_Ele15_CaloIdT_CaloIsoVL_TrkIdT_TrkIsoVL_v4
The available path : HLT_Ele17_CaloIdL_CaloIsoVL_v10
The available path : HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_SC8_Mass30_v10
The available path : HLT_Ele17_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_Ele8_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_v10
The available path : HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_Ele8_Mass30_v9
The available path : HLT_Ele22_CaloIdL_CaloIsoVL_Ele15_HFT_v3
The available path : HLT_Ele27_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v3
The available path : HLT_Ele27_WP80_v3
The available path : HLT_Ele27_WP80_PFMT50_v9
The available path : HLT_Ele32_WP70_v3
The available path : HLT_Ele32_WP70_PFMT50_v9
The available path : HLT_Ele32_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v3
The available path : HLT_Ele32_CaloIdT_CaloIsoT_TrkIdT_TrkIsoT_SC17_v8
The available path : HLT_Ele32_CaloIdT_CaloIsoT_TrkIdT_TrkIsoT_Ele17_v3
The available path : HLT_Ele65_CaloIdVT_TrkIdT_v6
The available path : HLT_Ele80_CaloIdVT_TrkIdT_v3
The available path : HLT_Ele100_CaloIdVT_TrkIdT_v3
The available path : HLT_DoubleEle8_CaloIdT_TrkIdVL_v5
The available path : HLT_DoubleEle33_CaloIdL_v7
The available path : HLT_DoubleEle33_CaloIdL_CaloIsoT_v3
The available path : HLT_DoubleEle33_CaloIdT_v3
The available path : HLT_DoubleEle45_CaloIdL_v6
The available path : HLT_MediumIsoPFTau35_Trk20_v6
The available path : HLT_MediumIsoPFTau35_Trk20_MET60_v6
The available path : HLT_MediumIsoPFTau35_Trk20_MET70_v6
The available path : HLT_DoubleIsoPFTau45_Trk5_eta2p1_v8
The available path : HLT_DoubleIsoPFTau55_Trk5_eta2p1_v5
The available path : HLT_HT350_DoubleIsoPFTau10_Trk3_PFMHT45_v13
The available path : HLT_HT400_DoubleIsoPFTau10_Trk3_PFMHT50_v5
The available path : HLT_BTagMu_DiJet20_Mu5_v14
The available path : HLT_BTagMu_DiJet40_Mu5_v14
The available path : HLT_BTagMu_DiJet70_Mu5_v14
The available path : HLT_BTagMu_DiJet110_Mu5_v14
The available path : HLT_Mu10_R014_MR200_v5
The available path : HLT_Mu10_R025_MR200_v6
The available path : HLT_Mu10_R029_MR200_v6
The available path : HLT_Mu10_R033_MR200_v5
The available path : HLT_HT300_Mu15_PFMHT40_v6
The available path : HLT_HT300_Mu15_PFMHT50_v5
The available path : HLT_HT350_Mu5_PFMHT45_v13
The available path : HLT_HT400_Mu5_PFMHT50_v5
The available path : HLT_Mu5_DoubleEle8_CaloIdT_TrkIdVL_v8
The available path : HLT_Mu5_Ele8_CaloIdT_CaloIsoVL_v5
The available path : HLT_Mu5_Ele8_CaloIdT_TrkIdVL_Mass8_HT150_v5
The available path : HLT_Mu8_Ele8_CaloIdT_TrkIdVL_Mass8_HT150_v5
The available path : HLT_Mu8_Ele8_CaloIdT_TrkIdVL_Mass8_HT200_v5
The available path : HLT_TkIso10Mu5_Ele8_CaloIdT_CaloIsoVVL_TrkIdVL_Mass8_HT150_v5
The available path : HLT_TkIso10Mu5_Ele8_CaloIdT_CaloIsoVVL_TrkIdVL_Mass8_HT200_v5
The available path : HLT_Mu5_Ele8_CaloIdT_TrkIdVL_Ele8_CaloIdL_TrkIdVL_v8
The available path : HLT_Mu8_Ele17_CaloIdL_v13
The available path : HLT_Mu8_Ele17_CaloIdT_CaloIsoVL_v8
The available path : HLT_Mu8_Photon20_CaloIdVT_IsoT_v13
The available path : HLT_Mu8_Jet40_v15
The available path : HLT_Mu15_L1ETM20_v4
The available path : HLT_Mu15_Photon20_CaloIdL_v14
The available path : HLT_Mu15_DoublePhoton15_CaloIdL_v14
The available path : HLT_Mu15_LooseIsoPFTau15_v14
The available path : HLT_Mu17_eta2p1_CentralPFJet30_v3
The available path : HLT_Mu17_eta2p1_DiCentralPFJet30_v3
The available path : HLT_Mu17_eta2p1_TriCentralPFJet30_v3
The available path : HLT_Mu17_eta2p1_QuadCentralPFJet30_v3
The available path : HLT_Mu17_eta2p1_CentralJet30_BTagIP_v6
The available path : HLT_Mu17_Ele8_CaloIdL_v13
The available path : HLT_Mu17_Ele8_CaloIdT_CaloIsoVL_v8
The available path : HLT_Mu12_eta2p1_DiCentralJet20_BTagIP3D1stTrack_v6
The available path : HLT_Mu12_eta2p1_DiCentralJet20_DiBTagIP3D1stTrack_v6
The available path : HLT_Mu40_HT300_v5
The available path : HLT_Mu60_HT300_v5
The available path : HLT_IsoMu15_L1ETM20_v4
The available path : HLT_IsoMu15_eta2p1_LooseIsoPFTau20_v6
The available path : HLT_IsoMu15_eta2p1_MediumIsoPFTau20_v6
The available path : HLT_IsoMu15_eta2p1_TightIsoPFTau20_v6
The available path : HLT_IsoMu17_eta2p1_CentralJet30_v6
The available path : HLT_IsoMu17_eta2p1_CentralPFJet30_v3
The available path : HLT_IsoMu17_eta2p1_DiCentralPFJet30_v3
The available path : HLT_IsoMu17_eta2p1_TriCentralPFJet30_v3
The available path : HLT_IsoMu17_eta2p1_QuadCentralPFJet30_v3
The available path : HLT_IsoMu17_eta2p1_CentralJet30_BTagIP_v6
The available path : HLT_Mu17_eta2p1_DiCentralPFJet25_PFMHT15_v5
The available path : HLT_IsoMu17_eta2p1_DiCentralPFJet25_v5
The available path : HLT_IsoMu17_eta2p1_DiCentralPFJet25_PFMHT15_v5
The available path : HLT_IsoMu17_eta2p1_DiCentralPFJet25_PFMHT25_v5
The available path : HLT_Mu17_eta2p1_DiPFJet25_Deta3_v5
The available path : HLT_IsoMu17_eta2p1_DiPFJet25_Deta3_v5
The available path : HLT_IsoMu17_eta2p1_DiPFJet25_Deta3_PFJet25_v5
The available path : HLT_DoubleMu5_Mass8_HT150_v5
The available path : HLT_DoubleMu8_Mass8_HT150_v5
The available path : HLT_DoubleMu8_Mass8_HT200_v5
The available path : HLT_DoubleTkIso10Mu5_Mass8_HT150_v5
The available path : HLT_DoubleTkIso10Mu5_Mass8_HT200_v5
The available path : HLT_DoubleMu5_Ele8_CaloIdT_TrkIdVL_v8
The available path : HLT_DoubleMu5_Ele8_CaloIdT_TrkIdT_v4
The available path : HLT_Photon40_CaloIdL_R014_MR150_v1
The available path : HLT_Photon40_CaloIdL_R017_MR500_v6
The available path : HLT_Photon40_CaloIdL_R023_MR350_v6
The available path : HLT_Photon40_CaloIdL_R029_MR250_v6
The available path : HLT_Photon40_CaloIdL_R042_MR200_v6
The available path : HLT_DoublePhoton40_CaloIdL_MR150_v3
The available path : HLT_DoublePhoton40_CaloIdL_R014_MR150_v3
The available path : HLT_Photon55_CaloIdL_R017_MR500_v4
The available path : HLT_Photon55_CaloIdL_R023_MR350_v4
The available path : HLT_Photon55_CaloIdL_R029_MR250_v4
The available path : HLT_Photon55_CaloIdL_R042_MR200_v4
The available path : HLT_HT350_Ele5_CaloIdVL_CaloIsoVL_TrkIdVL_TrkIsoVL_PFMHT45_v11
The available path : HLT_HT400_Ele5_CaloIdVL_CaloIsoVL_TrkIdVL_TrkIsoVL_PFMHT50_v5
The available path : HLT_HT400_Ele60_CaloIdT_TrkIdT_v5
The available path : HLT_HT450_Ele60_CaloIdT_TrkIdT_v4
The available path : HLT_Ele8_CaloIdT_TrkIdT_DiJet30_v9
The available path : HLT_Ele8_CaloIdT_TrkIdT_TriJet30_v9
The available path : HLT_Ele8_CaloIdT_TrkIdT_QuadJet30_v9
The available path : HLT_Ele8_CaloIdL_CaloIsoVL_Jet40_v12
The available path : HLT_Ele15_CaloIdT_CaloIsoVL_TrkIdT_TrkIsoVL_HT250_PFMHT40_v6
The available path : HLT_Ele15_CaloIdT_CaloIsoVL_TrkIdT_TrkIsoVL_HT250_PFMHT50_v5
The available path : HLT_Ele12_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R014_MR200_v4
The available path : HLT_Ele12_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R025_MR200_v5
The available path : HLT_Ele12_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R029_MR200_v5
The available path : HLT_Ele12_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R033_MR200_v4
The available path : HLT_Ele18_CaloIdVT_TrkIdT_MediumIsoPFTau20_v6
The available path : HLT_Ele20_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_MediumIsoPFTau20_v6
The available path : HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_MediumIsoPFTau25_v5
The available path : HLT_Ele25_CaloIdVT_TrkIdT_CentralJet30_BTagIP_v13
The available path : HLT_Ele25_CaloIdVT_TrkIdT_CentralPFJet30_v3
The available path : HLT_Ele25_CaloIdVT_TrkIdT_DiCentralPFJet30_v3
The available path : HLT_Ele25_CaloIdVT_TrkIdT_TriCentralPFJet30_v3
The available path : HLT_Ele25_CaloIdVT_TrkIdT_QuadCentralPFJet30_v3
The available path : HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_v9
The available path : HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralPFJet30_v3
The available path : HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_DiCentralPFJet30_v3
The available path : HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_TriCentralPFJet30_v3
The available path : HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_QuadCentralPFJet30_v3
The available path : HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_BTagIP_v9
The available path : HLT_Ele27_WP80_DiCentralPFJet25_PFMHT15_v5
The available path : HLT_Ele27_WP80_DiCentralPFJet25_v5
The available path : HLT_Ele27_WP80_DiPFJet25_Deta3_v5
The available path : HLT_Ele27_CaloIdVT_TrkIdT_DiCentralPFJet25_v5
The available path : HLT_Ele27_CaloIdVT_TrkIdT_DiPFJet25_Deta3_v5
The available path : HLT_Ele32_WP80_DiCentralPFJet25_PFMHT25_v5
The available path : HLT_Ele32_WP80_DiPFJet25_Deta3p5_v5
The available path : HLT_Photon30_CaloIdVT_CentralJet20_BTagIP_v7
The available path : HLT_DoubleEle8_CaloIdT_TrkIdVL_Mass8_HT150_v4
The available path : HLT_DoubleEle8_CaloIdT_TrkIdVL_Mass8_HT200_v4
The available path : HLT_DoubleEle10_CaloIdL_TrkIdVL_Ele10_CaloIdT_TrkIdVL_v5
The available path : HLT_TripleEle10_CaloIdL_TrkIdVL_v11
The available path : HLT_PixelTracks_Multiplicity80_v8
The available path : HLT_PixelTracks_Multiplicity100_v8
The available path : HLT_BeamGas_HF_v6
The available path : HLT_BeamGas_HF_Beam1_v2
The available path : HLT_BeamGas_HF_Beam2_v2
The available path : HLT_BeamHalo_v8
The available path : HLT_L1_PreCollisions_v3
The available path : HLT_L1_Interbunch_BSC_v3
The available path : HLT_IsoTrackHE_v10
The available path : HLT_IsoTrackHB_v9
The available path : HLT_HcalPhiSym_v8
The available path : HLT_HcalNZS_v7
The available path : HLT_GlobalRunHPDNoise_v5
The available path : HLT_L1Tech_HBHEHO_totalOR_v3
The available path : HLT_L1Tech_HCAL_HF_single_channel_v1
The available path : HLT_ZeroBias_v4
The available path : HLT_Physics_v2
The available path : DST_Physics_v2
The available path : HLT_DTCalibration_v1
The available path : HLT_EcalCalibration_v2
The available path : HLT_HcalCalibration_v2
The available path : HLT_TrackerCalibration_v2
The available path : HLT_Random_v1
The available path : HLT_L1SingleMuOpen_AntiBPTX_v3
The available path : HLT_L1TrackerCosmics_v4
The available path : HLT_RegionalCosmicTracking_v9
The available path : HLT_LogMonitor_v1
The available path : HLT_DTErrors_v2
The available path : HLT_L1DoubleJet36Central_v4
The available path : AlCa_EcalPi0_v10
The available path : AlCa_EcalEta_v9
The available path : AlCa_EcalPhiSym_v7
The available path : AlCa_RPCMuonNoTriggers_v6
The available path : AlCa_RPCMuonNoHits_v6
The available path : AlCa_RPCMuonNormalisation_v6
The available path : AlCa_LumiPixels_v2
The available path : DQM_FEDIntegrity_v5
The available path : HLTriggerFinalPath
Getting L25 TagInfo 
Something wrong with partons 
Getting L25 TagInfo 
size of L25  TagInfog collection 5
I'm filling l25JetTag
# 0 -1.94333
# 1 4.39129
# 2 0.73302
# 3 3.78248
# 4 -100
l3: # 0 -1.06212
l3: # 1 10.528
l3: # 2 1.76172
l3: # 3 1.94471
l3: # 4 -1.73228
Something wrong with partons 
Getting L25 TagInfo 
Something wrong with partons 
Getting L25 TagInfo 
Something wrong with partons 
Getting L25 TagInfo 
Something wrong with partons 
Getting L25 TagInfo 
Something wrong with partons 
Getting L25 TagInfo 
Something wrong with partons 
Getting L25 TagInfo 
Something wrong with partons 
Getting L25 TagInfo 
Something wrong with partons 
Getting L25 TagInfo 
Something wrong with partons 
Getting L25 TagInfo 
Something wrong with partons 
Getting L25 TagInfo 
Something wrong with partons 
Getting L25 TagInfo 
size of L25  TagInfog collection 5
I'm filling l25JetTag
# 0 5.92157
# 1 2.06666
# 2 -100
# 3 -100
# 4 -100
l3: # 0 3.39485
l3: # 1 1.41428
l3: # 2 -100
l3: # 3 -100
l3: # 4 -100
Something wrong with partons 
Getting L25 TagInfo 
Something wrong with partons 
Getting L25 TagInfo 
Something wrong with partons 
Getting L25 TagInfo 
Something wrong with partons 
Getting L25 TagInfo 
Something wrong with partons 
Getting L25 TagInfo 
Something wrong with partons 
Getting L25 TagInfo 
Something wrong with partons 
Getting L25 TagInfo 
size of L25  TagInfog collection 4
I'm filling l25JetTag
# 0 15.3253
# 1 -3.20906
# 2 -1.25446
# 3 -0.556011
l3: # 0 24.9731
l3: # 1 -100
l3: # 2 1.32293
l3: # 3 4.41174
Something wrong with partons 
I' HLTBTagHarvestingAnalyzer::endJob
Eff dir HLT/BTag/HLT_DiCentralJet36_BTagIP3DLoose/efficiency
found MEs: HLT/BTag/HLT_DiCentralJet36_BTagIP3DLoose/JetTag_L25_b
found MEs: HLT/BTag/HLT_DiCentralJet36_BTagIP3DLoose/JetTag_L25_b_disc_pT
found MEs: HLT/BTag/HLT_DiCentralJet36_BTagIP3DLoose/JetTag_L25_c
found MEs: HLT/BTag/HLT_DiCentralJet36_BTagIP3DLoose/JetTag_L25_c_disc_pT
found MEs: HLT/BTag/HLT_DiCentralJet36_BTagIP3DLoose/JetTag_L25_g
found MEs: HLT/BTag/HLT_DiCentralJet36_BTagIP3DLoose/JetTag_L25_g_disc_pT
found MEs: HLT/BTag/HLT_DiCentralJet36_BTagIP3DLoose/JetTag_L25_light
found MEs: HLT/BTag/HLT_DiCentralJet36_BTagIP3DLoose/JetTag_L25_light_disc_pT
found MEs: HLT/BTag/HLT_DiCentralJet36_BTagIP3DLoose/JetTag_L25_uds
found MEs: HLT/BTag/HLT_DiCentralJet36_BTagIP3DLoose/JetTag_L25_uds_disc_pT
found MEs: HLT/BTag/HLT_DiCentralJet36_BTagIP3DLoose/JetTag_L3_b
found MEs: HLT/BTag/HLT_DiCentralJet36_BTagIP3DLoose/JetTag_L3_b_disc_pT
found MEs: HLT/BTag/HLT_DiCentralJet36_BTagIP3DLoose/JetTag_L3_c
found MEs: HLT/BTag/HLT_DiCentralJet36_BTagIP3DLoose/JetTag_L3_c_disc_pT
found MEs: HLT/BTag/HLT_DiCentralJet36_BTagIP3DLoose/JetTag_L3_g
found MEs: HLT/BTag/HLT_DiCentralJet36_BTagIP3DLoose/JetTag_L3_g_disc_pT
found MEs: HLT/BTag/HLT_DiCentralJet36_BTagIP3DLoose/JetTag_L3_light
found MEs: HLT/BTag/HLT_DiCentralJet36_BTagIP3DLoose/JetTag_L3_light_disc_pT
found MEs: HLT/BTag/HLT_DiCentralJet36_BTagIP3DLoose/JetTag_L3_uds
found MEs: HLT/BTag/HLT_DiCentralJet36_BTagIP3DLoose/JetTag_L3_uds_disc_pT
